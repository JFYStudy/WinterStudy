(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    683468,      13872]
NotebookOptionsPosition[    662721,      13503]
NotebookOutlinePosition[    663180,      13521]
CellTagsIndexPosition[    663137,      13518]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"2", "+", "2"}]], "Input",
 CellChangeTimes->{{3.8790528667800617`*^9, 3.8790528693395076`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6cd352d1-8e4c-4320-925b-d265876da53b"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.8790528700691347`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"6bf35b48-3fba-40e7-9ee0-873fac6abd7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", "2", "+", "3"}]], "Input",
 CellChangeTimes->{{3.8790528720813274`*^9, 3.8790528755357714`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"eb65c09a-cfbc-4bf8-b263-4d5d82dc478b"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.879052875778039*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"17d0d99d-6213-4049-8233-8753e8178a6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "+", "2", "+", "3", "+", "4", "+", "5"}], "\[IndentingNewLine]", 
 RowBox[{"1", "*", "2", "*", "3", "*", "4", "*", "5"}]}], "Input",
 CellChangeTimes->{{3.87905287837926*^9, 3.879052895161163*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e3a1af08-d731-4875-8abd-f88ec4120e25"],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.8790528953813896`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2a48caef-041d-45fc-9518-a5a4e39a49f2"],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{3.8790528953843727`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"dfed9db0-3d56-41f5-8147-0c4d45b4e71f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", "^", "2"}]], "Input",
 CellChangeTimes->{{3.8790529009648952`*^9, 3.8790529036120396`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"fe163deb-2aaf-4e35-ad2c-32dcd3786776"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.879052904339613*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"35ad24f6-cec7-46f9-9574-07217b3561a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", "^", "4"}]], "Input",
 CellChangeTimes->{{3.879052907703355*^9, 3.8790529100664487`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2f06450e-d651-407a-9a53-65b796b5d9b4"],

Cell[BoxData["81"], "Output",
 CellChangeTimes->{3.8790529104372163`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"a3774b35-961f-4d36-9e71-65df48a90f07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "^", "12"}]], "Input",
 CellChangeTimes->{{3.8790529181324654`*^9, 3.87905292095004*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"430be7f2-dd07-4911-afeb-b607c2d3ea93"],

Cell[BoxData["1000000000000"], "Output",
 CellChangeTimes->{3.8790529211882434`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"e5891857-31d6-431d-b44e-27d866b93218"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "^", 
  RowBox[{"2", "^", 
   RowBox[{"2", "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.879052924774247*^9, 3.8790529402833652`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0e5171c2-1b1d-4333-a99c-ae6ae117673e"],

Cell[BoxData["65536"], "Output",
 CellChangeTimes->{3.8790529414783764`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"98d98ff3-c8bf-4927-9493-ce7412d5908f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"4", "-", "2"}], ")"}], "*", 
  RowBox[{"(", 
   RowBox[{"3", "+", "4"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8790529537114534`*^9, 3.8790529614216523`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"c43e9ae7-362c-465f-8d5d-b2fdc01a664e"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.8790529619937463`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"824cf891-4549-4bb3-a086-4ff6fcb20a94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"12", "*", 
  RowBox[{"10", "^", "4"}], "*", "123"}]], "Input",
 CellChangeTimes->{{3.879052966282392*^9, 3.87905298329548*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"b5925832-f441-4341-b960-680a0ccf9e91"],

Cell[BoxData["14760000"], "Output",
 CellChangeTimes->{3.8790529840110865`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"5821fea4-e738-450b-bcd6-893ac9605fc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "0"}]], "Input",
 CellChangeTimes->{{3.8790530374544687`*^9, 3.8790530401614904`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"57018bb6-8932-41f6-aff8-f850b2a9d319"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"\:78b0\:5230\:65e0\:7a77\:8868\:8fbe\:5f0f \\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\).\"", 2, 11, 1, 25460130546149694738, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879053040958754*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[11]:=",ExpressionUUID->"9ffc09ba-aa40-4ee8-94f6-\
8a2c0115584c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"ComplexInfinity", "\[IndentingNewLine]", 
 RowBox[{"Plus", "[", 
  RowBox[{"3", ",", "4"}], "]"}]}], "Input",
 CellChangeTimes->{{3.879053061305718*^9, 3.879053070145187*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"9fd08ef7-72ee-4aaf-b1ac-1608b4ea0a39"],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.8790530703982773`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"1d9f8616-da9f-45c3-8ce1-7aa609c68019"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.8790530704012537`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"d9d1671e-6346-4167-80fe-eb30cc890578"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "[", 
  RowBox[{"2", ",", 
   RowBox[{"Plus", "[", 
    RowBox[{"2", ",", "3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879053077626085*^9, 3.879053089931995*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f1d5fa20-f369-44fe-944d-34d057d924f6"],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.879053090747192*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"d5b0b419-38a6-42bf-8b7d-c11ac07d615d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"2", ",", "6", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.879053095745472*^9, 3.8790531029803333`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"cc87129e-139e-420a-86a1-30d64a807549"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.8790531033231297`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"63ead265-3ebe-4ee4-8f6a-177831e01f4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\:6c42\:4e0d\:5b9a\:79ef\:5206", " ", "x"}]], "Input",
 CellChangeTimes->{{3.8790531045520306`*^9, 3.8790531181605587`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"88abf27d-62e3-466c-addb-41454a00906c"],

Cell[BoxData[
 RowBox[{"\:6c42\:4e0d\:5b9a\:79ef\:5206", " ", "x"}]], "Output",
 CellChangeTimes->{3.879053119008731*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"fd664fe7-3e25-4f98-a957-533be99014f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.8790531285925894`*^9, 3.879053147473504*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f0ef6e50-395d-45bd-a0f6-462373798ead"],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{{3.8790531498993206`*^9, 3.879053160118905*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"3e3357d5-dd3b-4c41-8b46-b1208eb5c734"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{
   RowBox[{"Times", "[", 
    RowBox[{"6", ",", "8"}], "]"}], ",", 
   RowBox[{"Times", "[", "5.9", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879053178600478*^9, 3.8790532169991035`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"81c2b5d4-8acc-4163-9036-bdc8a829b399"],

Cell[BoxData["48"], "Output",
 CellChangeTimes->{{3.8790532084845166`*^9, 3.8790532178153687`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"ab87af3b-0da2-4aa9-8bd5-1454ac141e75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomInteger", "[", "10", "]"}], "+", "10"}]], "Input",
 CellChangeTimes->{{3.8790532402462587`*^9, 3.879053240753561*^9}, {
  3.8790533051180515`*^9, 3.8790533239669957`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"bc456e4c-61aa-4772-b9ef-73994a3adcf3"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{{3.8790533249037952`*^9, 3.879053331311981*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"3bd9edc1-abe7-4a7e-a4c4-0fa2fbfa1142"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ","}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.879053357035966*^9, 3.8790533744466853`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ee7d08b6-863d-45a9-be81-fc6f2b28cdd8"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[{{1., 1.}, {2., 1.}, {3., 2.}, {4., 3.}, {5., 4.}, {6., 
      5.}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 6.}, {0, 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.879053377673963*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"66c33b89-3895-4805-9a7c-83d24e2216a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"range", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879053389339875*^9, 3.879053414804679*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"3ceb43ea-b796-4a22-b251-93ae48befc1c"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{\\\"range\\\", \\\"[\\\", \\\"10.`\\\", \\\"]\\\"}]\\) \
\:4e0d\:662f\:7531\:6570\:5b57\:6216\:8005\:6570\:5bf9\:7ec4\:6210\:7684\:5217\
\:8868.\"", 2, 27, 2, 25460130546149694738, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8790534169714327`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[27]:=",ExpressionUUID->"1b1d641e-d66c-4a37-a23d-\
dd95d390900b"],

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"range", "[", "10", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.8790534169814034`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"81de09a6-17eb-4552-ab4d-796e4704a4f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Range", "[", "20", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879053431001587*^9, 3.8790534445023375`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"9d1ee20d-2feb-41ba-9a62-0b35a3b9ec2c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FFpBgdUmgONFkCjRdBoCTRaBo1WQKOV0GgV
NFoNjdZAo7XQaB00Wg+NNkCjDdFoIzTaGI02gdMA/GISxA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {0, 20.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8790534454720964`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"8befcb96-bb13-4170-98ab-1cdfa3f745ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Reverse", "[", 
   RowBox[{"Range", "[", "20", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879053465570889*^9, 3.879053490966896*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"9468697a-084e-4a2a-a4a1-c1b4c731e059"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0L0KgCAUhmFpamxwaGiokIiI6G+3a+gSguZu3Uuo8P0WBXlA1HO+01zP
eWfGGPvt37iCj+4HB7hhjisWuKDFGUucsMIRaxywxR4ddokuuad3+kf/qo7q
qg/1pT7Vt3Iol3Iqt+aguWhOwb/BshLE
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 20.}, {0, 20.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.879053492619376*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"da6f9580-8d4e-464d-969b-12273bfd6097"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "2", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8790535000076866`*^9, 3.8790535463177686`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"6080f07e-fb0c-4668-9003-a866034517e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "2", ",", "3", ",", "3", ",", "2", ",", "4"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.879053520759242*^9, 3.879053546705517*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"752a9771-5c3b-4530-87b9-585ce03bff1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Reverse", "[", 
     RowBox[{"Range", "[", "30", "]"}], "]"}], ",", 
    RowBox[{"Range", "[", "29", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.87905352537388*^9, 3.8790536187843914`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"9e1ec5d0-8913-4703-818f-73a72de90358"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxdkTtuwlAUBa1UlBQpUlCAFUVRhBCfkAQcwPw/IU2WgESdLdwlswRAnils
S2h0kP3evWdap/+/80OSJNntd2fxXGYFpzl/wAmswW9Yhxl8hGP4BEewAb9g
E37CFH7AZziEL/AdvsIBfIN92IY92IHdCjuV9/zOczzXe7zXOZzLOZ3bPVLo
nu5tD/ZiT/Zmj/Zqz/auB73oSW961OuskvPy+2H2vHn5vjA7z6I8b5jdZwnZ
N8wpXEH6CrN9riF9h1kfG4ivMOtzC/EcZj3vIJ7DrOc9xHOY9XyAeA6znn8g
nsOs5yPEc5j1/AvxHOZJfgV2Iz9g
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 59.}, {0, 30.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8790535866029778`*^9, 3.879053619404251*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"cf1c7de6-66f7-4125-bddd-c3ccba5ac9bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "100", "]"}]], "Input",
 CellChangeTimes->{{3.879053671862024*^9, 3.879053674852014*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"9fcb6f83-7cb2-4e86-991b-17983286cc23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", ",", 
   "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", "41", 
   ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", ",", 
   "48", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", 
   ",", "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", 
   "61", ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", 
   ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", 
   "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", "80", 
   ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", "86", ",", 
   "87", ",", "88", ",", "89", ",", "90", ",", "91", ",", "92", ",", "93", 
   ",", "94", ",", "95", ",", "96", ",", "97", ",", "98", ",", "99", ",", 
   "100"}], "}"}]], "Output",
 CellChangeTimes->{3.87905367518184*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"ff68c87f-f57e-44c8-8a60-eaa348350655"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Range", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879053679297142*^9, 3.879053686609685*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"4460b6e6-016f-4285-a058-085ba42350f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.87905368724947*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"46e8cbda-5758-40a5-bd1c-a8064a0c2dc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Range", "[", "50", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8790536910507464`*^9, 3.8790536998454027`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"2dc589ba-9adb-4f03-8252-a9f2c2a8761f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "50", ",", "49", ",", "48", ",", "47", ",", "46", ",", "45", ",", "44", ",",
    "43", ",", "42", ",", "41", ",", "40", ",", "39", ",", "38", ",", "37", 
   ",", "36", ",", "35", ",", "34", ",", "33", ",", "32", ",", "31", ",", 
   "30", ",", "29", ",", "28", ",", "27", ",", "26", ",", "25", ",", "24", 
   ",", "23", ",", "22", ",", "21", ",", "20", ",", "19", ",", "18", ",", 
   "17", ",", "16", ",", "15", ",", "14", ",", "13", ",", "12", ",", "11", 
   ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",",
    "3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.879053700373635*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"f3774d35-9008-4704-9deb-c0d551dff519"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"Range", "[", "100", "]"}], ",", 
   RowBox[{"Reverse", "[", 
    RowBox[{"Range", "[", "99", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.87905370513865*^9, 3.8790537355071087`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"ed459d0c-06b1-48e0-884d-1ef384ffda63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "27", ",", "28", 
   ",", "29", ",", "30", ",", "31", ",", "32", ",", "33", ",", "34", ",", 
   "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", "41", 
   ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", ",", 
   "48", ",", "49", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", 
   ",", "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", 
   "61", ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", 
   ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", 
   "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", "80", 
   ",", "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", "86", ",", 
   "87", ",", "88", ",", "89", ",", "90", ",", "91", ",", "92", ",", "93", 
   ",", "94", ",", "95", ",", "96", ",", "97", ",", "98", ",", "99", ",", 
   "100", ",", "99", ",", "98", ",", "97", ",", "96", ",", "95", ",", "94", 
   ",", "93", ",", "92", ",", "91", ",", "90", ",", "89", ",", "88", ",", 
   "87", ",", "86", ",", "85", ",", "84", ",", "83", ",", "82", ",", "81", 
   ",", "80", ",", "79", ",", "78", ",", "77", ",", "76", ",", "75", ",", 
   "74", ",", "73", ",", "72", ",", "71", ",", "70", ",", "69", ",", "68", 
   ",", "67", ",", "66", ",", "65", ",", "64", ",", "63", ",", "62", ",", 
   "61", ",", "60", ",", "59", ",", "58", ",", "57", ",", "56", ",", "55", 
   ",", "54", ",", "53", ",", "52", ",", "51", ",", "50", ",", "49", ",", 
   "48", ",", "47", ",", "46", ",", "45", ",", "44", ",", "43", ",", "42", 
   ",", "41", ",", "40", ",", "39", ",", "38", ",", "37", ",", "36", ",", 
   "35", ",", "34", ",", "33", ",", "32", ",", "31", ",", "30", ",", "29", 
   ",", "28", ",", "27", ",", "26", ",", "25", ",", "24", ",", "23", ",", 
   "22", ",", "21", ",", "20", ",", "19", ",", "18", ",", "17", ",", "16", 
   ",", "15", ",", "14", ",", "13", ",", "12", ",", "11", ",", "10", ",", "9",
    ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",",
    "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8790537361159997`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"cf91f339-86b5-40b1-8b29-ea7c308e060f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"RandomInteger", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879053755505131*^9, 3.8790537668313212`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"5c5e6995-1cf7-4955-8c9e-8e88c1be65d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{{3.879053768186714*^9, 3.8790537778540792`*^9}},
 CellLabel->"Out[44]=",ExpressionUUID->"2661f49a-e252-4351-a691-41efbeef7f5b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", "5", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.87905378995563*^9, 3.879053815134776*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"54e6bb31-84f7-4be1-9ca6-24fe49d5c7f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.8790538165400515`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"21c7f672-71fb-4907-992d-f4f161b7626f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"Range", "[", "20", "]"}], ",", 
   RowBox[{"Reverse", "[", 
    RowBox[{"Range", "[", "20", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879053845870883*^9, 3.879053908136669*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"ab2b235e-3604-4adc-a488-1aaa3ecb4ccc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "19", ",", "20", ",", "20", ",", 
   "19", ",", "18", ",", "17", ",", "16", ",", "15", ",", "14", ",", "13", 
   ",", "12", ",", "11", ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", 
   ",", "5", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.8790538733609223`*^9, 3.879053908690741*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"f6752661-f02f-4aa2-b892-6ac56d326f3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"Range", "[", "20", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879053954175576*^9, 3.879053966083935*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"6686ac2e-c213-4fb5-893c-d23605db60aa"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.19588550983899827`, 0.}, {20.407802394385577`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.5599999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5921976056144214, 0.}, {1.4078023943855786`, 1.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{20.386277167116845`, 34.290414646761484`}, {
            91.50712994645158, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5921976056144214`, 0.}, {2.4078023943855786`, 2.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{36.82087596323251, 50.72501344287715}, {
            81.36425989290316, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5921976056144214`, 0.}, {3.4078023943855786`, 3.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{53.25547475934818, 67.15961223899282}, {
            71.22138983935476, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5921976056144214`, 0.}, {4.407802394385579, 4.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{69.69007355546385, 83.59421103510849}, {
            61.07851978580635, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.592197605614421, 0.}, {5.407802394385579, 5.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{86.12467235157952, 100.02880983122415`}, {
            50.93564973225794, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.592197605614421, 0.}, {6.407802394385579, 6.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{102.55927114769518`, 116.46340862733982`}, {
            40.79277967870953, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.592197605614421, 0.}, {7.407802394385579, 7.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{118.99386994381085`, 132.89800742345548`}, {
            30.649909625161115`, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 7]& ,
         TagBoxNote->"7"],
        StyleBox["7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.592197605614421, 0.}, {8.407802394385579, 8.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{135.42846873992653`, 149.33260621957118`}, {
            20.507039571612708`, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.592197605614421, 0.}, {9.407802394385579, 9.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{151.8630675360422, 165.76720501568684`}, {
            10.364169518064301`, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.592197605614421, 0.}, {10.407802394385579`, 10.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{168.29766633215786`, 182.2018038118025}, {
            0.22129946451589433`, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{10.592197605614421`, 0.}, {11.407802394385579`, 
             11.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{184.73226512827355`, 
            198.63640260791817`}, {-9.921570589032527, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 11]& ,
         TagBoxNote->"11"],
        StyleBox["11", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[11, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{11.592197605614421`, 0.}, {12.407802394385579`, 
             12.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{201.16686392438922`, 
            215.07100140403384`}, {-20.064440642580934`, 
            102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{12.592197605614421`, 0.}, {13.407802394385579`, 
             13.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{217.60146272050488`, 
            231.5056002001495}, {-30.20731069612934, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{13.592197605614421`, 0.}, {14.407802394385579`, 
             14.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{234.03606151662055`, 
            247.9401989962652}, {-40.35018074967776, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 14]& ,
         TagBoxNote->"14"],
        StyleBox["14", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[14, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{14.592197605614421`, 0.}, {15.407802394385579`, 
             15.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{250.47066031273621`, 
            264.37479779238083`}, {-50.493050803226154`, 
            102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 15]& ,
         TagBoxNote->"15"],
        StyleBox["15", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[15, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{15.592197605614421`, 0.}, {16.407802394385577`, 
             16.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{266.90525910885185`, 
            280.80939658849644`}, {-60.635920856774575`, 
            102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 16]& ,
         TagBoxNote->"16"],
        StyleBox["16", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[16, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{16.59219760561442, 0.}, {17.407802394385577`, 17.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{283.3398579049675, 
            297.2439953846121}, {-70.778790910323, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 17]& ,
         TagBoxNote->"17"],
        StyleBox["17", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[17, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{17.59219760561442, 0.}, {18.407802394385577`, 18.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{299.7744567010832, 
            313.6785941807278}, {-80.92166096387139, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 18]& ,
         TagBoxNote->"18"],
        StyleBox["18", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[18, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{18.59219760561442, 0.}, {19.407802394385577`, 19.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{316.20905549719885`, 
            330.1131929768435}, {-91.06453101741981, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 19]& ,
         TagBoxNote->"19"],
        StyleBox["19", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[19, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{19.59219760561442, 0.}, {20.407802394385577`, 20.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{332.6436542933145, 
            346.54779177295916`}, {-101.2074010709682, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 20]& ,
         TagBoxNote->"20"],
        StyleBox["20", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[20, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.19588550983899827`, 0.}, {20.812040732076508`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5921976056144214, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5921976056144214, 0.}]}],
          LineBox[{{20.407802394385577`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {20.407802394385577`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.19588550983899827`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.879053967144404*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"93e04343-d8b8-481b-8758-d47330635cb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{"Range", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8790539791003466`*^9, 3.879054000054296*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"321acac6-acb8-4174-9ad5-42d8d8a6dac5"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   DynamicModuleBox[{DynamicChart`click$5324$5384 = False, 
    DynamicChart`click$5332$5384 = False, DynamicChart`click$5336$5384 = 
    False, DynamicChart`click$5340$5384 = False}, {
     {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   DiskBox[{0, 0}, 1., {2.5132741228718345`, 
                    3.141592653589793}]},
                  
                  ImageSizeCache->{{31.585786437626894`, 
                   181.41421356237308`}, {-89.81864564936666, \
-0.5857864376268793}}],
                 "DelayedMouseEffectStyle"],
                StatusArea[#, 1]& ,
                TagBoxNote->"1"],
               StyleBox["1", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[1, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5324$5384, 
                 FEPrivate`Not[DynamicChart`click$5324$5384]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$5324$5384, {{{1., 0.}, {0., 
               1.}}, {-0.1902113032590307, 0.06180339887498951}}, {{1, 0}, {0,
               1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5324$5384}]],
           "DelayedClickEffect"]}, 
         {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   DiskBox[{0, 0}, 1., {1.256637061435917, 
                    2.5132741228718345`}]},
                  
                  ImageSizeCache->{{59.66028826450963, 
                   226.83971173549043`}, {-150.41421356237308`, \
-0.5857864376268935}}],
                 "DelayedMouseEffectStyle"],
                StatusArea[#, 2]& ,
                TagBoxNote->"2"],
               StyleBox["2", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[2, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5332$5384, 
                 FEPrivate`Not[DynamicChart`click$5332$5384]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$5332$5384, {{{1., 0.}, {0., 
               1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1, 0}, {
              0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5332$5384}]],
           "DelayedClickEffect"]}, 
         {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], EdgeForm[{
          GrayLevel[0], Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   DiskBox[{0, 0}, 1., {-0.6283185307179591, 
                    1.256637061435917}]},
                  
                  ImageSizeCache->{{178.5857864376269, 
                   328.4142135623731}, {-143.21952145776066`, 
                   85.81864564936672}}],
                 "DelayedMouseEffectStyle"],
                StatusArea[#, 3]& ,
                TagBoxNote->"3"],
               StyleBox["3", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[3, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5336$5384, 
                 FEPrivate`Not[DynamicChart`click$5336$5384]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$5336$5384, {{{1., 0.}, {0., 1.}}, {
               0.19021130325903074`, 0.061803398874989424`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5336$5384}]],
           "DelayedClickEffect"]}, 
         {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                   
                   DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -0.6283185307179591}]},
                  
                  ImageSizeCache->{{31.585786437626894`, 
                   300.33971173549037`}, {-3.414213562373078, 
                   146.4142135623731}}],
                 "DelayedMouseEffectStyle"],
                StatusArea[#, 4]& ,
                TagBoxNote->"4"],
               StyleBox["4", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[4, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5340$5384, 
                 FEPrivate`Not[DynamicChart`click$5340$5384]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$5340$5384, {{{1., 0.}, {0., 
               1.}}, {-0.061803398874989514`, -0.1902113032590307}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5340$5384}]],
           "DelayedClickEffect"]}}}, {}}, {}}, {{{
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             TagBox[{{}, {}},
              StatusArea[#, 1]& ,
              TagBoxNote->"1"],
             StyleBox["1", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[1, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5324$5384, 
               FEPrivate`Not[DynamicChart`click$5324$5384]], PassEventsDown -> 
             True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$5324$5384, {{{1., 0.}, {0., 
             1.}}, {-0.1902113032590307, 0.06180339887498951}}, {{1, 0}, {0, 
            1}}, {{1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$5324$5384}]],
         "DelayedClickEffect"], 
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             TagBox[{{}, {}},
              StatusArea[#, 2]& ,
              TagBoxNote->"2"],
             StyleBox["2", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[2, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5332$5384, 
               FEPrivate`Not[DynamicChart`click$5332$5384]], PassEventsDown -> 
             True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$5332$5384, {{{1., 0.}, {0., 
             1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1, 0}, {0,
             1}}, {{1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$5332$5384}]],
         "DelayedClickEffect"], 
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             TagBox[{{}, {}},
              StatusArea[#, 3]& ,
              TagBoxNote->"3"],
             StyleBox["3", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[3, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5336$5384, 
               FEPrivate`Not[DynamicChart`click$5336$5384]], PassEventsDown -> 
             True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$5336$5384, {{{1., 0.}, {0., 1.}}, {
             0.19021130325903074`, 0.061803398874989424`}}, {{1, 0}, {0, 
            1}}, {{1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$5336$5384}]],
         "DelayedClickEffect"], 
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             TagBox[{{}, {}},
              StatusArea[#, 4]& ,
              TagBoxNote->"4"],
             StyleBox["4", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[4, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5340$5384, 
               FEPrivate`Not[DynamicChart`click$5340$5384]], PassEventsDown -> 
             True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$5340$5384, {{{1., 0.}, {0., 
             1.}}, {-0.061803398874989514`, -0.1902113032590307}}, {{1, 0}, {
            0, 1}}, {{1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$5340$5384}]],
         "DelayedClickEffect"]}, {}}, {}}, {}, {}},
    DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
  ContentSelectable->False,
  DisplayFunction->Identity,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-1., 1.}, {-1., 1.}},
  PlotRangePadding->Scaled[0.09166666666666669]]], "Output",
 CellChangeTimes->{3.8790540016210546`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"95c6970d-0508-475f-8529-5d3fd73de15f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"NumberLinePlot", "[", 
   RowBox[{"Range", "[", "10", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879054011965457*^9, 3.879054030315076*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"a784cc7d-9d59-48cc-bb61-4aa9cef8edab"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{1, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{2, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{3, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{4, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{5, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{6, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{7, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{8, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{9, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{10, 1}]}},
  AspectRatio->NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948],
  Axes->{True, False},
  AxesLabel->{None},
  AxesOrigin->{Automatic, Automatic},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  ImagePadding->All,
  PlotRange->{{1., 10.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.1], 
     Scaled[0.1]}, {0, 1}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.879054030882172*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"1d9f395d-e1f0-4179-8e0d-fcd5060221be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"Reverse", "[", 
   RowBox[{"Range", "[", "20", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879054066696372*^9, 3.879054081101098*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"d968fd11-e373-4f06-8767-1be4117df1b7"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.19588550983899827`, 0.}, {20.407802394385577`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.5599999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5921976056144214, 0.}, {1.4078023943855786`, 20.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{20.386277167116845`, 
            34.290414646761484`}, {-101.2074010709682, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 20]& ,
         TagBoxNote->"20"],
        StyleBox["20", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[20, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5921976056144214`, 0.}, {2.4078023943855786`, 
             19.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{36.82087596323251, 
            50.72501344287715}, {-91.06453101741981, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 19]& ,
         TagBoxNote->"19"],
        StyleBox["19", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[19, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5921976056144214`, 0.}, {3.4078023943855786`, 
             18.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{53.25547475934818, 
            67.15961223899282}, {-80.92166096387139, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 18]& ,
         TagBoxNote->"18"],
        StyleBox["18", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[18, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5921976056144214`, 0.}, {4.407802394385579, 17.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{69.69007355546385, 
            83.59421103510849}, {-70.778790910323, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 17]& ,
         TagBoxNote->"17"],
        StyleBox["17", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[17, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.592197605614421, 0.}, {5.407802394385579, 16.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{86.12467235157952, 
            100.02880983122415`}, {-60.635920856774575`, 
            102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 16]& ,
         TagBoxNote->"16"],
        StyleBox["16", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[16, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.592197605614421, 0.}, {6.407802394385579, 15.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{102.55927114769518`, 
            116.46340862733982`}, {-50.493050803226154`, 
            102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 15]& ,
         TagBoxNote->"15"],
        StyleBox["15", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[15, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.592197605614421, 0.}, {7.407802394385579, 14.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{118.99386994381085`, 
            132.89800742345548`}, {-40.35018074967776, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 14]& ,
         TagBoxNote->"14"],
        StyleBox["14", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[14, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.592197605614421, 0.}, {8.407802394385579, 13.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{135.42846873992653`, 
            149.33260621957118`}, {-30.20731069612934, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.592197605614421, 0.}, {9.407802394385579, 12.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{151.8630675360422, 
            165.76720501568684`}, {-20.064440642580934`, 
            102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.592197605614421, 0.}, {10.407802394385579`, 11.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{168.29766633215786`, 
            182.2018038118025}, {-9.921570589032527, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 11]& ,
         TagBoxNote->"11"],
        StyleBox["11", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[11, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{10.592197605614421`, 0.}, {11.407802394385579`, 
             10.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{184.73226512827355`, 198.63640260791817`}, {
            0.22129946451589433`, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{11.592197605614421`, 0.}, {12.407802394385579`, 9.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{201.16686392438922`, 215.07100140403384`}, {
            10.364169518064301`, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{12.592197605614421`, 0.}, {13.407802394385579`, 8.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{217.60146272050488`, 231.5056002001495}, {
            20.507039571612708`, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{13.592197605614421`, 0.}, {14.407802394385579`, 7.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{234.03606151662055`, 247.9401989962652}, {
            30.649909625161115`, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 7]& ,
         TagBoxNote->"7"],
        StyleBox["7", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[7, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{14.592197605614421`, 0.}, {15.407802394385579`, 6.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{250.47066031273621`, 264.37479779238083`}, {
            40.79277967870953, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 6]& ,
         TagBoxNote->"6"],
        StyleBox["6", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[6, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{15.592197605614421`, 0.}, {16.407802394385577`, 5.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{266.90525910885185`, 280.80939658849644`}, {
            50.93564973225794, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{16.59219760561442, 0.}, {17.407802394385577`, 4.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{283.3398579049675, 297.2439953846121}, {
            61.07851978580635, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{17.59219760561442, 0.}, {18.407802394385577`, 3.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{299.7744567010832, 313.6785941807278}, {
            71.22138983935476, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 3]& ,
         TagBoxNote->"3"],
        StyleBox["3", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{18.59219760561442, 0.}, {19.407802394385577`, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{316.20905549719885`, 330.1131929768435}, {
            81.36425989290316, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.5599999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{19.59219760561442, 0.}, {20.407802394385577`, 1.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{332.6436542933145, 346.54779177295916`}, {
            91.50712994645158, 102.14999999999999`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.19588550983899827`, 0.}, {20.812040732076508`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5921976056144214, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5921976056144214, 0.}]}],
          LineBox[{{20.407802394385577`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {20.407802394385577`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.19588550983899827`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.8790540823848047`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"3c3cb973-4875-4c2d-82a8-1be057422bd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Column", "[", 
   RowBox[{"Range", "[", "5", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8790540863645*^9, 3.879054097441515*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"bf140479-fc1b-4b55-871a-4f77eef05ab7"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1"},
    {"2"},
    {"3"},
    {"4"},
    {"5"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.8790540980115285`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"39e24251-3cc0-48f5-a56b-9ffefae96d0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8790541129306207`*^9, 3.8790541269508*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"cd300486-20f6-4b64-ac4e-61ca039ada35"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{1, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{4, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{9, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{16, 1}]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Medium], 
    AbsoluteThickness[1.6], PointBox[{25, 1}]}},
  AspectRatio->NCache[Rational[1, 10]/GoldenRatio, 0.06180339887498948],
  Axes->{True, False},
  AxesLabel->{None},
  AxesOrigin->{Automatic, Automatic},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  ImagePadding->All,
  PlotRange->{{1., 25.}, {0, 1}},
  PlotRangePadding->{{
     Scaled[0.1], 
     Scaled[0.1]}, {0, 1}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.879054127783941*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"7ef6522b-8986-4118-991c-03d315c51ab3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PieChart", "[", 
     RowBox[{"{", "1", "}"}], "]"}], ",", 
    RowBox[{"PieChart", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "]"}], ",", 
    RowBox[{"PieChart", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.87905413864065*^9, 3.8790541976672335`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"0737bc45-5a40-4ccb-8d3c-38985c14bddb"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {}, 
       DynamicModuleBox[{DynamicChart`click$5942$6064 = False}, {
         {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
          0.5]}], {{{}, 
            {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0],
              Opacity[0.5]}], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{15.5, 164.5}, {-76.50000000000001, 
                    72.49999999999999}}],
                    "DelayedMouseEffectStyle"],
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5942$6064, 
                    FEPrivate`Not[DynamicChart`click$5942$6064]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$5942$6064, {{{1., 0.}, {0., 1.}}, {0.2, 
                  0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$5942$6064}]],
              "DelayedClickEffect"]}}, {}}, {}}, {{
           TagBox[GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                TagBox[{{}, {}},
                 StatusArea[#, 1]& ,
                 TagBoxNote->"1"],
                StyleBox["1", {}, StripOnInput -> False]],
               Annotation[#, 
                Style[1, {}], "Tooltip"]& ],
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5942$6064, 
                  FEPrivate`Not[DynamicChart`click$5942$6064]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], Dynamic[
             FEPrivate`If[
              DynamicChart`click$5942$6064, {{{1., 0.}, {0., 1.}}, {0.2, 
                0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5942$6064}]],
            "DelayedClickEffect"], {}}, {}}, {}, {}},
        DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
      ContentSelectable->False,
      DisplayFunction->Identity,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{-1., 1.}, {-1., 1.}},
      PlotRangePadding->Scaled[0.09166666666666669]]},
    {
     GraphicsBox[{{}, {}, 
       DynamicModuleBox[{DynamicChart`click$5979$6065 = False, 
        DynamicChart`click$5983$6065 = False}, {
         {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
          0.5]}], {{{}, {
             {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], 
              TagBox[GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{15.085786437626894`, 
                    164.91421356237308`}, {-76.91421356237312, \
-0.5857864376269077}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {}, StripOnInput -> False]],
                  Annotation[#, 
                   Style[1, {}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5979$6065, 
                    FEPrivate`Not[DynamicChart`click$5979$6065]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], Dynamic[
                FEPrivate`If[
                 DynamicChart`click$5979$6065, {{{1., 0.}, {0., 1.}}, {
                   1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$5979$6065}]],
               "DelayedClickEffect"]}, 
             {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
              Opacity[0.5]}], 
              TagBox[GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{15.085786437626894`, 
                    164.91421356237308`}, {-3.4142135623731207`, 
                    72.91421356237309}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {}, StripOnInput -> False]],
                  Annotation[#, 
                   Style[1, {}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5983$6065, 
                    FEPrivate`Not[DynamicChart`click$5983$6065]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], Dynamic[
                FEPrivate`If[
                 DynamicChart`click$5983$6065, {{{1., 0.}, {0., 1.}}, {
                   1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$5983$6065}]],
               "DelayedClickEffect"]}}}, {}}, {}}, {{{
            TagBox[GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {}, StripOnInput -> False]],
                Annotation[#, 
                 Style[1, {}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5979$6065, 
                   FEPrivate`Not[DynamicChart`click$5979$6065]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], Dynamic[
              FEPrivate`If[
               DynamicChart`click$5979$6065, {{{1., 0.}, {0., 1.}}, {
                 1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 0}, {
                0, 1}}], TrackedSymbols :> {DynamicChart`click$5979$6065}]],
             "DelayedClickEffect"], 
            TagBox[GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {}, StripOnInput -> False]],
                Annotation[#, 
                 Style[1, {}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5983$6065, 
                   FEPrivate`Not[DynamicChart`click$5983$6065]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], Dynamic[
              FEPrivate`If[
               DynamicChart`click$5983$6065, {{{1., 0.}, {0., 1.}}, {
                 1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$5983$6065}]],
             "DelayedClickEffect"]}, {}}, {}}, {}, {}},
        DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
      ContentSelectable->False,
      DisplayFunction->Identity,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{-1., 1.}, {-1., 1.}},
      PlotRangePadding->Scaled[0.09166666666666669]]},
    {
     GraphicsBox[{{}, {}, 
       DynamicModuleBox[{DynamicChart`click$6025$6066 = False, 
        DynamicChart`click$6029$6066 = False, DynamicChart`click$6033$6066 = 
        False}, {
         {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
          0.5]}], {{{}, {
             {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], 
              TagBox[GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{15.085786437626904`, 
                    128.16421356237308`}, {-76.9142135623731, \
-0.5857864376269255}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {}, StripOnInput -> False]],
                  Annotation[#, 
                   Style[1, {}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$6025$6066, 
                    FEPrivate`Not[DynamicChart`click$6025$6066]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], Dynamic[
                FEPrivate`If[
                 DynamicChart`click$6025$6066, {{{1., 0.}, {0., 
                   1.}}, {-0.10000000000000005`, 0.17320508075688773`}}, {{1, 
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$6025$6066}]],
               "DelayedClickEffect"]}, 
             {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], 
              TagBox[GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    1.0471975511965979`}]},
                    
                    ImageSizeCache->{{88.5857864376269, 
                    164.9142135623731}, {-67.06708074052938, 
                    63.06708074052932}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {}, StripOnInput -> False]],
                  Annotation[#, 
                   Style[1, {}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$6029$6066, 
                    FEPrivate`Not[DynamicChart`click$6029$6066]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], Dynamic[
                FEPrivate`If[
                 DynamicChart`click$6029$6066, {{{1., 0.}, {0., 1.}}, {0.2, 
                   4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {DynamicChart`click$6029$6066}]],
               "DelayedClickEffect"]}, 
             {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
              Opacity[0.5]}], 
              TagBox[GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{15.085786437626904`, 
                    128.1642135623731}, {-3.4142135623731065`, 
                    72.91421356237308}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {}, StripOnInput -> False]],
                  Annotation[#, 
                   Style[1, {}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$6033$6066, 
                    FEPrivate`Not[DynamicChart`click$6033$6066]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], Dynamic[
                FEPrivate`If[
                 DynamicChart`click$6033$6066, {{{1., 0.}, {0., 
                   1.}}, {-0.09999999999999996, -0.17320508075688776`}}, {{1, 
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$6033$6066}]],
               "DelayedClickEffect"]}}}, {}}, {}}, {{{
            TagBox[GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {}, StripOnInput -> False]],
                Annotation[#, 
                 Style[1, {}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6025$6066, 
                   FEPrivate`Not[DynamicChart`click$6025$6066]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], Dynamic[
              FEPrivate`If[
               DynamicChart`click$6025$6066, {{{1., 0.}, {0., 
                 1.}}, {-0.10000000000000005`, 0.17320508075688773`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$6025$6066}]],
             "DelayedClickEffect"], 
            TagBox[GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {}, StripOnInput -> False]],
                Annotation[#, 
                 Style[1, {}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6029$6066, 
                   FEPrivate`Not[DynamicChart`click$6029$6066]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], Dynamic[
              FEPrivate`If[
               DynamicChart`click$6029$6066, {{{1., 0.}, {0., 1.}}, {0.2, 
                 4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                1}}], TrackedSymbols :> {DynamicChart`click$6029$6066}]],
             "DelayedClickEffect"], 
            TagBox[GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {}, StripOnInput -> False]],
                Annotation[#, 
                 Style[1, {}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6033$6066, 
                   FEPrivate`Not[DynamicChart`click$6033$6066]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], Dynamic[
              FEPrivate`If[
               DynamicChart`click$6033$6066, {{{1., 0.}, {0., 
                 1.}}, {-0.09999999999999996, -0.17320508075688776`}}, {{1, 
                0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$6033$6066}]],
             "DelayedClickEffect"]}, {}}, {}}, {}, {}},
        DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
      ContentSelectable->False,
      DisplayFunction->Identity,
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{-1., 1.}, {-1., 1.}},
      PlotRangePadding->Scaled[0.09166666666666669]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.8790541599024887`*^9, 3.8790541993535867`*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"29a1b7e5-c660-40a0-82ce-454f6f8eee20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Reverse", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"Max", "[", 
      RowBox[{"8", ",", "9"}], "]"}], "]"}], "^", "2"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879054240247716*^9, 3.879054243428082*^9}, {
  3.879054330461009*^9, 3.8790543648300347`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"82ee8135-1eae-4e2e-ac94-377df81762d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81"}], "}"}]], "Output",
 CellChangeTimes->{3.879054365646226*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"5caa84ed-1a4b-4830-8b37-4d15c4deeb79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Range", "[", "20", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8790543763763323`*^9, 3.8790544233293376`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"94e3dd70-e7d7-4033-8026-05d9c21ab005"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.879054390243043*^9, 3.8790544191063967`*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"bf5e7569-3ce1-46c2-9490-50408879d770"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{"Range", "[", "100", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8790544296611586`*^9, 3.879054439094598*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"0c78f4d7-8c33-41d3-97a2-417726e29f9f"],

Cell[BoxData["5050"], "Output",
 CellChangeTimes->{3.8790544404171686`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"60c961f6-0abb-49b2-a5eb-7e25c8e8397f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerDigits", "[", "19231809", "]"}]], "Input",
 CellChangeTimes->{{3.879054463921548*^9, 3.879054500728523*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"22b77e66-a833-4134-9415-b0b97a3ae1ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "9", ",", "2", ",", "3", ",", "1", ",", "8", ",", "0", ",", "9"}],
   "}"}]], "Output",
 CellChangeTimes->{3.8790545026052446`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"842bb5fd-1bf9-4f97-987e-cf2e186feafe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], "^", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.879054510941358*^9, 3.879054521191071*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"df72317c-b329-4a94-b11b-01b48661daf7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "100", ",", "81", ",", "64", ",", "49", ",", "36", ",", "25", ",", "16", 
   ",", "9", ",", "4", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.879054522056176*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"6ae2577c-4d1b-4aaa-98d1-1050f49865c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"BarChart", "[", 
   RowBox[{
    RowBox[{"Range", "[", "10", "]"}], "^", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8790545286261983`*^9, 3.8790545415828547`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"65dc5874-4ef0-4c84-bc0d-de1688a4e6cd"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.3479427549194991, 0.}, {10.453901197192788`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5460988028072107, 0.}, {1.4539011971927893`, 1.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{25.843071212860146`, 55.70201596263505}, {
            97.65404441559286, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5460988028072107`, 0.}, {2.4539011971927893`, 4.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{58.18374902044151, 88.04269377021642}, {
            91.66617766237152, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5460988028072107`, 0.}, {3.4539011971927893`, 9.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{90.52442682802287, 120.38337157779779`}, {
            81.68639974033597, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5460988028072107`, 0.}, {4.453901197192789, 16.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{122.86510463560424`, 152.72404938537915`}, {
            67.7147106494862, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 16]& ,
         TagBoxNote->"16"],
        StyleBox["16", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[16, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.546098802807211, 0.}, {5.453901197192789, 25.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{155.20578244318563`, 185.0647271929605}, {
            49.75111038982218, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 25]& ,
         TagBoxNote->"25"],
        StyleBox["25", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[25, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.546098802807211, 0.}, {6.453901197192789, 36.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{187.54646025076698`, 217.40540500054186`}, {
            27.795598961343956`, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 36]& ,
         TagBoxNote->"36"],
        StyleBox["36", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[36, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.546098802807211, 0.}, {7.453901197192789, 49.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{219.88713805834834`, 249.74608280812322`}, {
            1.848176364051497, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 49]& ,
         TagBoxNote->"49"],
        StyleBox["49", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[49, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.546098802807211, 0.}, {8.453901197192788, 64.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{252.2278158659297, 
            282.0867606157046}, {-28.09115740205516, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 64]& ,
         TagBoxNote->"64"],
        StyleBox["64", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[64, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.54609880280721, 0.}, {9.453901197192788, 81.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{284.568493673511, 
            314.42743842328593`}, {-62.022402336976086`, 
            100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 81]& ,
         TagBoxNote->"81"],
        StyleBox["81", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.54609880280721, 0.}, {10.453901197192788`, 100.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{316.90917148109236`, 
            346.7681162308673}, {-99.94555844071121, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 100]& ,
         TagBoxNote->"100"],
        StyleBox["100", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[100, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.3479427549194991, 0.}, {10.656020366038254`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5460988028072107, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5460988028072107, 0.}]}],
          LineBox[{{10.453901197192788`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {10.453901197192788`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3479427549194991, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.879054542358261*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"acac44ee-eea6-42d1-958a-0fadb0678adb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], "^", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.879054556941477*^9, 3.8790545680991516`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"a1519e96-474a-4d2f-9fd6-ff3e2f891d30"],

Cell[BoxData["385"], "Output",
 CellChangeTimes->{3.8790545693061132`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"c89a3d18-cf34-486d-884d-8e2295c9f1db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Range", "[", "4", "]"}], ",", 
    RowBox[{"Range", "[", "4", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879054581535205*^9, 3.8790546139707003`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"d17af1e0-8623-450c-8b9a-a80bf80466e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "2", ",", "3", ",", "3", ",", "4", ",", "4"}],
   "}"}]], "Output",
 CellChangeTimes->{3.8790546154338064`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"e851c968-9850-43f0-a647-289fe90cfc33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Range", "[", "10", "]"}], "+", "10"}]], "Input",
 CellChangeTimes->{{3.879054624391839*^9, 3.8790546341212916`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"6c881d4d-91f4-44b5-ba53-3dc27a4b8174"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",",
    "18", ",", "19", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.8790546347272644`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"71805a38-d950-45c1-ab6e-bb21aad2a9dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Range", "[", "5", "]"}], "^", "2"}], ",", 
    RowBox[{
     RowBox[{"Range", "[", "5", "]"}], "^", "3"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879054643292611*^9, 3.8790547076592894`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"0b9bc5c4-20f5-489b-ad9e-4db77ed8cab4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "4", ",", "8", ",", "9", ",", "16", ",", "25", ",", 
   "27", ",", "64", ",", "125"}], "}"}]], "Output",
 CellChangeTimes->{{3.879054677075599*^9, 3.8790547084964886`*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"36dc65c3-da5a-4d7f-83d9-3feed5f27aba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"2", "^", "128"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8790547370051203`*^9, 3.879054787347712*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"159fbce9-ec64-42f4-802c-c577c1438025"],

Cell[BoxData["39"], "Output",
 CellChangeTimes->{3.8790547881191316`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"90d3cc37-8860-4593-87f3-1368c1d2b3e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"2", "^", "99"}], "]"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.879054812903223*^9, 3.87905484837457*^9}, {
  3.8790548900471573`*^9, 3.879054891472399*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"28b252a7-8ed3-475b-807d-1c1d79cdea51"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.8790548384756837`*^9, 3.879054849190841*^9}, 
   3.879054891980689*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"c121c85f-505d-409c-a568-352d76ac6d4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"2", "^", "20"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879054903053649*^9, 3.8790549212677183`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"109f2f9b-fc0f-458c-967d-5410ec5f9ace"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.879054922153755*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"e52ef714-f375-4021-84ec-5d56ed650cd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"2", "^", "128"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879054976794965*^9, 3.879054999585725*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"5e329bb1-1db0-44ee-856b-46100a7af17b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxdkjsOwjAQRC0qSgqKFBSAECCEEP8/iYEbcAQkaq7gI3MEQJkp/CxFT7Oe
3XGc9J7vx6sRQhj9nj/r9alqNqMKYiuiHvK6fW2xKxbY72AOfX3oAepDzBvj
PBP4p8ibIXcu+j0WyF+ifwX/Gv4N/Fvoneh72GPeAfOOotcJ/Wf0X5BXiv6u
FfpjnpesfT9X52vf2vNuuU7WPs9d1H+RrIv4BSHkI7k=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 39.}, {0, 9.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8790550028488092`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"365e9935-7130-4d40-9acb-4a7ada54f0cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Range", "[", "100", "]"}], ",", "20"}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8790550252857513`*^9, 3.8790550450825343`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"a89a770a-7a55-4b9c-aa06-da2e3d5f7cdd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",",
    "18", ",", "19", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.87905504568851*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"1a910595-bfd1-4248-a79b-c4ce69192b22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"x", "-", 
     RowBox[{"x", "^", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1", ",", "0.02"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8790552612744603`*^9, 3.87905534585452*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"35ce5668-7038-43d9-9f85-002c48b99dbf"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 60], 0.016666666666666666`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQEf7BlQgUPeYsY9rEJToOIcDklGoQZaKxdD+QIO
/xX/fit9sAbKF3HwCPgjUXx9E5Qv4cB1fXGBLdd2KF/GwU21lGkWx24oX8Hh
j1XBuY5L+6B8JQfRHq9XLCYHoXwVh6x7hV19Tw5B+WoO1SLr3B9WHYHyNRw8
9UAuOArlazlc0U6VfBRxHMrXcZDhfaA7YcEJKF/PQeFSfjz7uZNQvoHDwyqQ
gaegfEOHBPZzkoG3TkP5Rg6zyucsUt55Bso3dph0ut5jf+1ZKN/EwZ25gltF
4xyUb+qwQ671deAOGN/M4bns8hceeuehfHOHSwz3mDi7YHwLh6rjmlaTTsP4
lg5g736C8a0cIPQFKN8aTd4GTb8tmvl2Ds9Q7LdHc5+Dgxuy+xsc0PzniOr/
BkeHOJTwcXJ4gBx+DU5o4euMGv4Nzmjx4+LggRx/DS4OFSjx6+qQgRz/Da4O
Eijpw82BwRop/TS4OXigpC93Bw7k9NfgjpY+PRw+IKffBg+HBJT07enQgJz+
Gzyh8cHAAACX7tbh
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 51.}, {0, 0.25}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8790552984600677`*^9, {3.8790553319958887`*^9, 3.8790553466070027`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"70753f5a-4f7d-4ac1-9da1-5df5c6e40f6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"x", "^", "x"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879055393647681*^9, 3.879055429828647*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"27ced390-3369-48ba-a3dd-0814d1aa7c60"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxV1H9M1HUcx3HIRaCNKDQMnSBwcDB+HT/k9/Hi0OOn5/3kDiU4KY5+OPDn
IrniyyBlQXBWQowLWQ67QC3MBpLVkRwEeoTQjA1B546MjhAYrQFj/Zifd1u3
3T573HPvP7773ue9s7BUXvSEg4PDy/98/z0ffxaSt0mMxuyG+WT2A3ynDxj1
Tb8zO6NFV73kODLH7IarS5XnZD7kzfhekdZxqM7OvBX+twIazjxF3g5r4uBM
k+E3Zm9kjD/Qgkf2gd/YdPnUjVlmP0T1Wzf5vk72h8Vwiu/iSeYD3zSdu/bj
r8xByN2QXl9VSw7GVHfnwFg2ORR4UX8h0J0cjiWxwLB9+iGzAF6ComrJJXIE
9HU4XcKRI7Ecf7Y5Wk2OQv0FF68iATkaI6UxjRZX8i58J1Q18B79whwDk1Y8
rhkjxyLQo/GLmB5yHKwJFbrWNnI87HZH06FacgKiI16NeKeMnIgYN9MxazE5
CZ1fXUsKySULMbtsqa7PJifjp9Yk/6kUMnA7s7zbKY6ZA/SG3v2rAuopcKwr
aTYFU0/Bumdw6oZA6iIoeRXSdX/qInxbvGPoXbJDKlxdnC+1BVBPxbzN935U
EPXd6O/z2CoMpb4bTWKnW19GUt8Dbn2NVx9PfQ+uv3LnD4uIuhiBb5e1K+n5
ODG8Hf1Do9TU0zB30OZa8BL1NKyE9qeOHqaejoX7K0lVFdTTYV/7/O6xBuoZ
/38fXAbEk+VVf12hnoneTUMxHw5Qz8T+4+3TuZPUszDuPsOTLFLPwqhgxKXU
mf4f2dBFSW/3ejNz2dgYVrcxPJ76XugefHraqqS+F+0dtgPvH6YuQWLN8sRb
71GXIMilpq6hk/o+XNa6CQeHqe+D5/GuOT87dSlErlqr6Wl2HyCFZJifoQhj
5qR4o8W45qdgNkvxs4+2a0cZ3R8ZYtMndSmtNC9D/qBTWr2F5mXoalZ1OM3T
vAxbVD1bLnrQ/ZXjSn9PHCdihhzh/IuL1SXMnBwtn62Krrcwm+Uw957M4w/T
vAKLAffO3lyheQVmfthVagpi+4RToHJUb+jLYzYroB2LHXrhv/2jxKIpxO1q
PzOUSH/z+aoPVmleiaM+R3RfC9j+MitReELFC3uN9pkKlW0a2dJ5ZqhwU6z/
xPkeM6cCf4D/54ltbD+aVTiSEKEU5tK+zEH33Ye2oo+YkYOjWSFrCxPMXA4m
aj5+xubJ9q85BwXC7r7UfNrHasy6Pzex+Twz1DCOG5E3y8ypsbrT5uYlYPvc
rEZ+48FThSdpv2tw48lxp2ALMzQ4c6fZu/LZR2xeg6A4n9riAmazBpE8ecDM
ZWaHXDw+F5L/Bq2r3Ow=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.6751051194610547},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 100.}, {0.6751051194610547, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8790554171870165`*^9, 3.8790554303060513`*^9}},
 CellLabel->"Out[85]=",ExpressionUUID->"81f5b759-7037-4dc5-94e5-db56224291a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"100", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.879055462421616*^9, 3.8790554681414814`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"842d59c3-3529-426f-91d8-7d5e9bc4d583"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"100", ",", "100", ",", "100", ",", "100", ",", "100"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8790554684055977`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"67c199cd-057c-43fe-95a5-aa521ada1377"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"x", "^", "3"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "10", ",", "20", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879055474032773*^9, 3.8790555064663515`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"5380c909-e77c-4226-b105-23497182e368"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1000", ",", "1331", ",", "1728", ",", "2197", ",", "2744", ",", "3375", 
   ",", "4096", ",", "4913", ",", "5832", ",", "6859", ",", "8000"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8790555080330343`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"d218c555-3477-48d7-99f3-8d8e451308dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "20", ",", "1"}], "]"}], "^", "3"}]], "Input",
 CellChangeTimes->{{3.879055515548892*^9, 3.8790555323835764`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"13a97742-e1f4-4011-9408-4ca46e7cce76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1000", ",", "1331", ",", "1728", ",", "2197", ",", "2744", ",", "3375", 
   ",", "4096", ",", "4913", ",", "5832", ",", "6859", ",", "8000"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8790555329028387`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"4a0d326f-5115-4496-a68c-017e952ab6d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "20", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.879055548926237*^9, 3.879055555075665*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"0908dc43-f4ab-4f11-944f-710bd75bd8be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", 
   "14", ",", "16", ",", "18", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.879055555640783*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"df190e7c-5364-4130-b60d-3c1deed28845"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"x", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879055560081919*^9, 3.8790555690977583`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"af3c782a-e479-4d08-9409-eae9d860a03f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.8790555696359577`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"48ab27fd-517a-4b3e-affe-275cd6bc9a08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], "^", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8790555742345743`*^9, 3.8790555908051424`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"d8cf3681-37b3-4908-a86c-6f9f44d2f12e"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.3479427549194991, 0.}, {10.453901197192788`, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5460988028072107, 0.}, {1.4539011971927893`, 1.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{25.843071212860146`, 55.70201596263505}, {
            97.65404441559286, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5460988028072107`, 0.}, {2.4539011971927893`, 4.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{58.18374902044151, 88.04269377021642}, {
            91.66617766237152, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5460988028072107`, 0.}, {3.4539011971927893`, 9.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{90.52442682802287, 120.38337157779779`}, {
            81.68639974033597, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5460988028072107`, 0.}, {4.453901197192789, 16.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{122.86510463560424`, 152.72404938537915`}, {
            67.7147106494862, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 16]& ,
         TagBoxNote->"16"],
        StyleBox["16", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[16, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.546098802807211, 0.}, {5.453901197192789, 25.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{155.20578244318563`, 185.0647271929605}, {
            49.75111038982218, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 25]& ,
         TagBoxNote->"25"],
        StyleBox["25", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[25, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.546098802807211, 0.}, {6.453901197192789, 36.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{187.54646025076698`, 217.40540500054186`}, {
            27.795598961343956`, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 36]& ,
         TagBoxNote->"36"],
        StyleBox["36", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[36, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.546098802807211, 0.}, {7.453901197192789, 49.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{219.88713805834834`, 249.74608280812322`}, {
            1.848176364051497, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 49]& ,
         TagBoxNote->"49"],
        StyleBox["49", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[49, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.546098802807211, 0.}, {8.453901197192788, 64.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{252.2278158659297, 
            282.0867606157046}, {-28.09115740205516, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 64]& ,
         TagBoxNote->"64"],
        StyleBox["64", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[64, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{8.54609880280721, 0.}, {9.453901197192788, 81.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{284.568493673511, 
            314.42743842328593`}, {-62.022402336976086`, 
            100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 81]& ,
         TagBoxNote->"81"],
        StyleBox["81", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[81, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.63], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{9.54609880280721, 0.}, {10.453901197192788`, 100.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{316.90917148109236`, 
            346.7681162308673}, {-99.94555844071121, 100.14999999999998`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 100]& ,
         TagBoxNote->"100"],
        StyleBox["100", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[100, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.3479427549194991, 0.}, {10.656020366038254`, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5460988028072107, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5460988028072107, 0.}]}],
          LineBox[{{10.453901197192788`, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {10.453901197192788`, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.3479427549194991, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.8790555913273945`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"894c8306-1c28-4d2b-b47d-b7a3a0df0acb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Part", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n", "^", "2"}], "]"}], ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879055598894082*^9, 3.8790556744921894`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"52e7e95c-d168-49ee-b33a-284008743ea4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "1", ",", "2", ",", "3", ",", "4", ",", "6", 
   ",", "8", ",", "1"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"n", "^", "2"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "100"}], "}"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8790557035559626`*^9, 3.879055781114697*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"b42b23eb-993c-4e79-8e8a-03de07728751"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "1", ",", "2", ",", "3", ",", "4", ",", "6", 
   ",", "8", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.8790557627571077`*^9, 3.8790557818542233`*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"a24e235f-caea-4290-88d8-078ed1842f9b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0TlKBFEYhdGLkaFBBwYGKiIiIs6zdjnPUzunorFbeEt7S3IJKlZSp6D5
OXx1qaAn3r8Gn0NJPn5/f/f/+e53b5quh/FI032vh0fxGB7Hk3iq6X53Gs/g
WTyH5/ECXsRLeBmv4FW8htfxBt7EW3gb7+BdvIf7uGlv+z8WnH06zgEd55CO
c0THOabjnNBxTuk4Z3ScczrOBR3nko5zRce5puPc0HFu6Th3XTe44Ipzzx4X
XHEG7HHBFeeBPS644jyyxwVXnCf2uOCK88weF1xxXtjjgivOK3tccMV5a2+v
+QEZu2x7
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 100.}, {0, 5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8790557627571077`*^9, 3.879055781884123*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"8648dcec-a64e-4aea-b8b1-ce7bfe9a03ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"n", "^", "2"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8790557989898996`*^9, 3.87905583825455*^9}, {
  3.8790558921432796`*^9, 3.8790559915732503`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"b3a8a253-b952-4462-a61e-93d6600e9c72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "4", "}"}], ",", 
   RowBox[{"{", "9", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.879055849986312*^9, {3.879055897855172*^9, 3.879055909322398*^9}, 
   3.8790559920805445`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"450f1270-f354-47fa-8308-0487083ab587"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Part", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"n", "^", "2"}], "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8790560245746393`*^9, 3.879056063130659*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"f438ec44-af02-439d-ac2c-1f34102a5b5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "1", ",", "2", ",", "3", ",", "4", ",", "6", 
   ",", "8", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
   "2", ",", "2", ",", "3", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.8790560573699307`*^9, 3.879056063551253*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"ce1f1977-b6ae-4523-b544-303af0080e67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{"IntegerDigits", "[", 
        RowBox[{"n", "^", "2"}], "]"}], ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "100"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879056074048138*^9, 3.8790561284652824`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"8c30f189-5c2a-4bc2-b15a-fed273f8307f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0zlOA0EUhOESESEBAQEBjBBCCCH2Hdzs+2b2FEHMFd7R+kg+AiDXC/q3
ZJW+qXmjcbt7+vOn/z0i6evv+5/Dz6DXpsowxpyjzg7X8/7x0s5NYG4Sc1O4
r8P1GTx/Fp6D5+EFeBHvtwQvwyt4/1V4zZm/Zx3egDeduU5b8LYz12MH3nXm
Ou7B+85cvwNn5+zBxen1CViH6GEdoYd1jB7WCXpYp+hhnaFP5/933jpgXaCH
dYke1hV6WNfo07l/bloHrFv0sO7Qw7pHD+vB6f1Z4IArrEfMwwHXdO73fusC
B1xhPWEejrTPT4X13LrAAVdYL06fvwIHXGG9Yh6OtM9zhfXWusAB13TnfG9d
4IArrA/noPcLVbZ9wQ==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 100.}, {0, 9.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.879056129268596*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"8029360a-eaa2-4d97-a523-aac185099c04"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "Red"}]], "Input",
 CellChangeTimes->{{3.8790561379804597`*^9, 3.8790561396488705`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"81dfc55f-3802-4f55-bbf6-29cb582b5ce3"],

Cell[BoxData[
 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{3.8790561427664423`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"cbdb9ccc-8fb1-448c-ab45-93d4c789a4f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Red", ",", "Green", ",", "Orange", ",", "Black"}], "}"}]], "Input",
 CellChangeTimes->{{3.8790561464989557`*^9, 3.8790561574353714`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"7cfd23c8-aef5-46ee-b5c5-27fdbcfb003c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> GrayLevel[0]|>,
    "GrayLevelColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.879056158640339*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"e90cde67-e87c-4c99-94cb-ffdae01eddec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Blend", "[", 
  RowBox[{"{", 
   RowBox[{"Yellow", ",", "Red", ",", "Pink"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.879056164107052*^9, 3.879056178284625*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"819ebae6-989c-458d-82b8-363a19dbfb25"],

Cell[BoxData[
 TemplateBox[<|"color" -> RGBColor[1, 0.5, 0.16666666666666666`]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{3.8790561788357887`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"ff4a1261-068a-4927-9fe9-a032af7697ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RGBColor", "[", "Red", "]"}]], "Input",
 CellChangeTimes->{{3.879056184302493*^9, 3.879056189404434*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"8d2617ca-8346-4613-b3d3-90a610f889ea"],

Cell[BoxData[
 TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{3.8790561900612364`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"aa22e1fd-a34c-4a0a-84a6-613aac34a544"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RGBColor", "[", 
   RowBox[{"1", ",", "1", ",", "0"}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8790561973637996`*^9, 3.879056216738985*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"d1e866ee-71fa-446f-a3b8-3068c1ffe0f1"],

Cell[BoxData[
 TemplateBox[<|"color" -> RGBColor[1, 1, 0]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{3.879056217103773*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"013e161b-c170-45a4-9c36-541a1402f2c9"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.8790562260637913`*^9, 3.8790564039201794`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"2ae86d52-dfd1-488c-bcce-651f08bf06b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", "100", "]"}], ",", 
     RowBox[{"RandomColor", "[", "]"}], ",", 
     RowBox[{"RandomInteger", "[", "30", "]"}]}], "]"}], ",", "10"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.879056642435289*^9, 3.879056731026263*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"d5d453d7-22c5-4727-b6bf-a409139c6613"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["20",
    StripOnInput->False,
    LineColor->RGBColor[
     0.2119567097075079, 0.7274513409732508, 0.18785687015185282`],
    FrontFaceColor->RGBColor[
     0.2119567097075079, 0.7274513409732508, 0.18785687015185282`],
    BackFaceColor->RGBColor[
     0.2119567097075079, 0.7274513409732508, 0.18785687015185282`],
    GraphicsColor->RGBColor[
     0.2119567097075079, 0.7274513409732508, 0.18785687015185282`],
    FontSize->3,
    FontColor->RGBColor[
     0.2119567097075079, 0.7274513409732508, 0.18785687015185282`]], ",", 
   StyleBox["25",
    StripOnInput->False,
    LineColor->RGBColor[
     0.8837938058678134, 0.6948479564993113, 0.6038215112022349],
    FrontFaceColor->RGBColor[
     0.8837938058678134, 0.6948479564993113, 0.6038215112022349],
    BackFaceColor->RGBColor[
     0.8837938058678134, 0.6948479564993113, 0.6038215112022349],
    GraphicsColor->RGBColor[
     0.8837938058678134, 0.6948479564993113, 0.6038215112022349],
    FontSize->18,
    FontColor->RGBColor[
     0.8837938058678134, 0.6948479564993113, 0.6038215112022349]], ",", 
   StyleBox["3",
    StripOnInput->False,
    LineColor->RGBColor[
     0.1962306844586197, 0.9101414606173055, 0.5136956980752521],
    FrontFaceColor->RGBColor[
     0.1962306844586197, 0.9101414606173055, 0.5136956980752521],
    BackFaceColor->RGBColor[
     0.1962306844586197, 0.9101414606173055, 0.5136956980752521],
    GraphicsColor->RGBColor[
     0.1962306844586197, 0.9101414606173055, 0.5136956980752521],
    FontSize->0,
    FontColor->RGBColor[
     0.1962306844586197, 0.9101414606173055, 0.5136956980752521]], ",", 
   StyleBox["28",
    StripOnInput->False,
    LineColor->RGBColor[
     0.3351398441294169, 0.30291073889838205`, 0.051467111509363894`],
    FrontFaceColor->RGBColor[
     0.3351398441294169, 0.30291073889838205`, 0.051467111509363894`],
    BackFaceColor->RGBColor[
     0.3351398441294169, 0.30291073889838205`, 0.051467111509363894`],
    GraphicsColor->RGBColor[
     0.3351398441294169, 0.30291073889838205`, 0.051467111509363894`],
    FontSize->4,
    FontColor->RGBColor[
     0.3351398441294169, 0.30291073889838205`, 0.051467111509363894`]], ",", 
   StyleBox["42",
    StripOnInput->False,
    LineColor->RGBColor[
     0.7054876490715098, 0.43739183371706236`, 0.04067825935756075],
    FrontFaceColor->RGBColor[
     0.7054876490715098, 0.43739183371706236`, 0.04067825935756075],
    BackFaceColor->RGBColor[
     0.7054876490715098, 0.43739183371706236`, 0.04067825935756075],
    GraphicsColor->RGBColor[
     0.7054876490715098, 0.43739183371706236`, 0.04067825935756075],
    FontSize->30,
    FontColor->RGBColor[
     0.7054876490715098, 0.43739183371706236`, 0.04067825935756075]], ",", 
   StyleBox["27",
    StripOnInput->False,
    LineColor->RGBColor[
     0.008191279224645909, 0.1747239989187066, 0.25740875848888045`],
    FrontFaceColor->RGBColor[
     0.008191279224645909, 0.1747239989187066, 0.25740875848888045`],
    BackFaceColor->RGBColor[
     0.008191279224645909, 0.1747239989187066, 0.25740875848888045`],
    GraphicsColor->RGBColor[
     0.008191279224645909, 0.1747239989187066, 0.25740875848888045`],
    FontSize->7,
    FontColor->RGBColor[
     0.008191279224645909, 0.1747239989187066, 0.25740875848888045`]], ",", 
   StyleBox["53",
    StripOnInput->False,
    LineColor->RGBColor[
     0.18769672345632427`, 0.5036164864094212, 0.1269666059346819],
    FrontFaceColor->RGBColor[
     0.18769672345632427`, 0.5036164864094212, 0.1269666059346819],
    BackFaceColor->RGBColor[
     0.18769672345632427`, 0.5036164864094212, 0.1269666059346819],
    GraphicsColor->RGBColor[
     0.18769672345632427`, 0.5036164864094212, 0.1269666059346819],
    FontSize->19,
    FontColor->RGBColor[
     0.18769672345632427`, 0.5036164864094212, 0.1269666059346819]], ",", 
   StyleBox["80",
    StripOnInput->False,
    LineColor->RGBColor[
     0.8485459585358559, 0.4343446165840712, 0.07392310664374424],
    FrontFaceColor->RGBColor[
     0.8485459585358559, 0.4343446165840712, 0.07392310664374424],
    BackFaceColor->RGBColor[
     0.8485459585358559, 0.4343446165840712, 0.07392310664374424],
    GraphicsColor->RGBColor[
     0.8485459585358559, 0.4343446165840712, 0.07392310664374424],
    FontSize->8,
    FontColor->RGBColor[
     0.8485459585358559, 0.4343446165840712, 0.07392310664374424]], ",", 
   StyleBox["23",
    StripOnInput->False,
    LineColor->RGBColor[
     0.9610938024417421, 0.5549511404093392, 0.4968674538269313],
    FrontFaceColor->RGBColor[
     0.9610938024417421, 0.5549511404093392, 0.4968674538269313],
    BackFaceColor->RGBColor[
     0.9610938024417421, 0.5549511404093392, 0.4968674538269313],
    GraphicsColor->RGBColor[
     0.9610938024417421, 0.5549511404093392, 0.4968674538269313],
    FontSize->5,
    FontColor->RGBColor[
     0.9610938024417421, 0.5549511404093392, 0.4968674538269313]], ",", 
   StyleBox["58",
    StripOnInput->False,
    LineColor->RGBColor[
     0.48724244427831676`, 0.35998254033564736`, 0.3601982906305481],
    FrontFaceColor->RGBColor[
     0.48724244427831676`, 0.35998254033564736`, 0.3601982906305481],
    BackFaceColor->RGBColor[
     0.48724244427831676`, 0.35998254033564736`, 0.3601982906305481],
    GraphicsColor->RGBColor[
     0.48724244427831676`, 0.35998254033564736`, 0.3601982906305481],
    FontSize->0,
    FontColor->RGBColor[
     0.48724244427831676`, 0.35998254033564736`, 0.3601982906305481]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8790567318743525`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"5bff3408-98d5-49de-9ef6-ba1044601049"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"RGBColor", "[", "Red", "]"}], ",", 
   RowBox[{"RGBColor", "[", "Yellow", "]"}], ",", 
   RowBox[{"RGBColor", "[", "Green", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8790567778495555`*^9, 3.8790568163488455`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"33311f36-3cb9-4a23-9ff7-557f2c5b0b42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 1, 0]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[0, 1, 0]|>,
    "RGBColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{{3.879056808274783*^9, 3.879056816924921*^9}},
 CellLabel->
  "Out[119]=",ExpressionUUID->"bb3176e7-561d-42d5-b50e-0db5f3acdbf1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ColorNegate", "[", "Orange", "]"}]}]], "Input",
 CellChangeTimes->{{3.8790568349575157`*^9, 3.8790568468577805`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"22356314-a784-407a-a3ec-24a719d7eafd"],

Cell[BoxData[
 TemplateBox[<|"color" -> RGBColor[0., 0.5, 1.]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{3.879056847738758*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"00d07082-da91-4145-a81a-abb577d8b863"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Hue", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1", ",", "0.02"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879056853803548*^9, 3.8790568755886664`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"30463f84-4c47-483f-b5a0-7f7692251c77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> Hue[0.]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.02]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.04]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.06]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.08]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.1]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.12]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.14]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.16]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.18]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.2]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.22]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.24]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.26]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.28]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.3]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.32]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.34]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.36]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.38]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.4]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.42]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.44]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.46]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.48]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.5]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.52]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.54]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.56]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.58]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.6]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.62]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.64]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.66]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.68]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.7000000000000001]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.72]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.74]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.76]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.78]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.8]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.8200000000000001]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.84]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.86]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.88]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.9]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.92]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.9400000000000001]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.96]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[0.98]|>,
    "HueColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> Hue[1.]|>,
    "HueColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.879056876218494*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"9e348f4c-b5d9-4679-8af0-27c79fc3f409"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", "x", ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1", ",", "0.06"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8790568844441657`*^9, 3.8790569247735095`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"042e758a-5b68-4360-8d12-4c3a5cf56510"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[<|"color" -> RGBColor[1, 0., 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.06, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.12, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.18, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.24, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.3, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.36, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.42, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.48, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.54, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.6, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.6599999999999999, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.72, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.78, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.84, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.8999999999999999, 1]|>,
    "RGBColorSwatchTemplate"], ",", 
   TemplateBox[<|"color" -> RGBColor[1, 0.96, 1]|>,
    "RGBColorSwatchTemplate"]}], "}"}]], "Output",
 CellChangeTimes->{3.879056925496024*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"36dd6204-4b5e-4caa-bece-bfc0ae69e4ba"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{"1", ",", "0", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.879056942837015*^9, 3.8790569436872416`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"0b56b6f5-1c11-4fc3-929a-aea66abcff98"],

Cell[CellGroupData[{

Cell[BoxData[{
 TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>,
  "RGBColorSwatchTemplate"], "\[IndentingNewLine]", 
 RowBox[{"Blend", "[", 
  RowBox[{"{", 
   RowBox[{"Pink", ",", "Yellow"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8790570732785697`*^9, 3.8790570883061795`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"0dbe7332-5f2e-48a7-ba8f-7e743788f789"],

Cell[BoxData[
 TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{{3.879057088814434*^9, 3.8790571186495843`*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"d978c570-3214-4542-87d1-b67a4e3ce114"],

Cell[BoxData[
 TemplateBox[<|"color" -> RGBColor[1, 0.75, 0.25]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{{3.879057088814434*^9, 3.8790571186556034`*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"083086e1-343a-4d16-8f92-1eeebeee3a37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Blend", "[", 
  RowBox[{"{", 
   RowBox[{"Pink", ",", "Yellow"}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[128]:=",ExpressionUUID->"10272a0a-941e-4885-81e3-6f70b126b4ba"],

Cell[BoxData[
 TemplateBox[<|"color" -> RGBColor[1, 0.75, 0.25]|>,
  "RGBColorSwatchTemplate"]], "Output",
 CellChangeTimes->{3.879057122543418*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"dcea907f-cce7-4af6-a9b6-6ebc5ae5f006"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Blend", "[", 
    RowBox[{"{", "n", "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "1", ",", "0.05"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8790571499746504`*^9, 
  3.879057198901718*^9}},ExpressionUUID->"188c7d94-020f-4e1b-b867-\
0ec620db12c7"],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Integrate[(1 + x^2)^(1/2), x]", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Fast parse", "Fast parse", 1, 0, "Input", 
        "Integrate[(1 + x^2)^(1/2), x]"}, "ExtrusionOpen" -> False, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}, 
    PodStates -> {"IndefiniteIntegral__Step-by-step solution"}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Indefinite integrals", "scanner" -> "Integral", "id" -> 
     "IndefiniteIntegral", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "2", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Integrate[(1 + x^2)^(1/2), x]"}], 
       XMLElement["moutput", {}, {"(x Sqrt[1 + x^2] + ArcSinh[x])/2"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               RowBox[{"\[Integral]", 
                 RowBox[{
                   SqrtBox[
                    RowBox[{"1", "+", 
                    SuperscriptBox["x", "2"]}]], 
                   RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
              "\[LongEqual]", 
              TagBox[
               StyleBox[
                RowBox[{
                  StyleBox[
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], " ", "x"}], "+", 
                    RowBox[{
                    SuperscriptBox["sinh", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}]}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                  StyleBox[
                  "\"constant\"", {
                   Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                 GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Take the integral:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{None}}, "Rows" -> {{0.5}}}], "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], "\",\"", "\" \""}, 
                    "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"x", "\[LongEqual]", 
                    RowBox[{"tan", "(", "u", ")"}]}], "\" \""}, "RowDefault"],
                     "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "x"}], "\[LongEqual]", 
                    RowBox[{
                    SuperscriptBox["sec", "2"], "(", "u", ")"}]}], 
                    "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\".\"", "\" \""}, 
                    "RowDefault"], "\"Then \"", 
                    TemplateBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TemplateBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["tan", "2"], "(", "u", ")"}], "+", "1"}]], 
                    "\" \""}, "RowDefault"], "\"\[LongEqual] \"", 
                    TemplateBox[{
                    RowBox[{"sec", "(", "u", ")"}], "\" \""}, "RowDefault"], 
                    "\"and \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["sec", "3"], "(", "u", ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Use \"", "\"the \"", "\"reduction \"", "\"formula, \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["sec", "m"], "(", "u", ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}], HoldForm], 
                    "\" \""}, "RowDefault"], "\"= \"", 
                    TemplateBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"sin", "(", "u", ")"}], " ", 
                    RowBox[{
                    SuperscriptBox["sec", 
                    RowBox[{"m", "-", "1"}]], "(", "u", ")"}]}], 
                    RowBox[{"m", "-", "1"}]], "\" \""}, "RowDefault"], 
                    "\"+ \"", 
                    TemplateBox[{
                    FractionBox[
                    RowBox[{"m", "-", "2"}], 
                    RowBox[{"m", "-", "1"}]], 
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["sec", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "m"}]], "(", "u", ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}], HoldForm], "\",\"",
                     "\" \""}, "RowDefault"], "\"where \"", 
                    TemplateBox[{
                    RowBox[{"m", "\[LongEqual]", "3"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"tan", "(", "u", ")"}], " ", 
                    RowBox[{"sec", "(", "u", ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"sec", "(", "u", ")"}], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\[NoBreak]", "\"\[NoBreak]\"", 
                    
                    TemplateBox[{
                    "\"Multiply \"", "\"numerator \"", "\"and \"", 
                    "\"denominator \"", "\"of \"", 
                    TemplateBox[{
                    RowBox[{"sec", "(", "u", ")"}], "\" \""}, "RowDefault"], 
                    "\"by \"", 
                    RowBox[{
                    RowBox[{"tan", "(", "u", ")"}], "+", 
                    RowBox[{"sec", "(", "u", ")"}]}]}, "RowDefault"], 
                    "\":\""}, "RowWithSeparators"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"tan", "(", "u", ")"}], " ", 
                    RowBox[{"sec", "(", "u", ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["sec", "2"], "(", "u", ")"}], "+", 
                    RowBox[{
                    RowBox[{"sec", "(", "u", ")"}], " ", 
                    RowBox[{"tan", "(", "u", ")"}]}]}], 
                    RowBox[{
                    RowBox[{"sec", "(", "u", ")"}], "+", 
                    RowBox[{"tan", "(", "u", ")"}]}]], HoldForm], 
                    RowBox[{"\[DifferentialD]", "u"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"For \"", "\"the \"", "\"integrand \"", 
                    TemplateBox[{
                    TagBox[
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["sec", "2"], "(", "u", ")"}], "+", 
                    RowBox[{
                    RowBox[{"sec", "(", "u", ")"}], " ", 
                    RowBox[{"tan", "(", "u", ")"}]}]}], 
                    RowBox[{
                    RowBox[{"sec", "(", "u", ")"}], "+", 
                    RowBox[{"tan", "(", "u", ")"}]}]], HoldForm], "\",\"", 
                    "\" \""}, "RowDefault"], "\"substitute \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"tan", "(", "u", ")"}], "+", 
                    RowBox[{"sec", "(", "u", ")"}]}]}], "\" \""}, 
                    "RowDefault"], "\"and \"", 
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"\[DifferentialD]", "s"}], "\[LongEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["sec", "2"], "(", "u", ")"}], "+", 
                    RowBox[{
                    RowBox[{"tan", "(", "u", ")"}], " ", 
                    RowBox[{"sec", "(", "u", ")"}]}]}], ")"}]}], 
                    "\"\[ThinSpace]\""}, "RowDefault"], 
                    TemplateBox[{
                    RowBox[{"\[DifferentialD]", "u"}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"tan", "(", "u", ")"}], " ", 
                    RowBox[{"sec", "(", "u", ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], 
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    FractionBox["1", "s"], 
                    RowBox[{"\[DifferentialD]", "s"}]}]}]}]}]}, 
                    "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"The \"", "\"integral \"", "\"of \"", 
                    TemplateBox[{
                    FractionBox["1", "s"], "\" \""}, "RowDefault"], "\"is \"", 
                    TemplateBox[{
                    RowBox[{"log", "(", "s", ")"}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox[
                    RowBox[{"log", "(", "s", ")"}], "2"], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"tan", "(", "u", ")"}], " ", 
                    RowBox[{"sec", "(", "u", ")"}]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"s", "\[LongEqual]", 
                    RowBox[{
                    RowBox[{"tan", "(", "u", ")"}], "+", 
                    RowBox[{"sec", "(", "u", ")"}]}]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"tan", "(", "u", ")"}], " ", 
                    RowBox[{"sec", "(", "u", ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"log", "(", 
                    RowBox[{
                    RowBox[{"tan", "(", "u", ")"}], "+", 
                    RowBox[{"sec", "(", "u", ")"}]}], ")"}]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Substitute \"", "\"back \"", "\"for \"", 
                    TemplateBox[{
                    RowBox[{"u", "\[LongEqual]", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}]}], "\":\""}, 
                    "RowDefault"]}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    TagBox[
                    RowBox[{"tan", "(", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}], ")"}], HoldForm], 
                    " ", 
                    TagBox[
                    RowBox[{"sec", "(", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}], ")"}], HoldForm]}], 
                    "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"log", "(", 
                    RowBox[{
                    TagBox[
                    RowBox[{"tan", "(", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}], ")"}], HoldForm], 
                    "+", 
                    TagBox[
                    RowBox[{"sec", "(", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}], ")"}], HoldForm]}], 
                    ")"}]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    TemplateBox[{"\"Simplify \"", "\"using \"", 
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{
                    TagBox[
                    RowBox[{"sec", "(", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "z", ")"}], ")"}], HoldForm], 
                    "\[LongEqual]", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["z", "2"], "+", "1"}]]}], "\" \""}, 
                    "RowDefault"], "\"and \"", 
                    RowBox[{
                    TagBox[
                    RowBox[{"tan", "(", 
                    RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", "z", ")"}], ")"}], HoldForm], 
                    "\[LongEqual]", "z"}], "\":\""}, "RowDefault"]}, 
                    "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], " ", "x"}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"log", "(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], "+", "x"}], 
                    ")"}]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"Factor \"", "\"the \"", "\"answer \"", "\"a \"", 
                    "\"different \"", "\"way:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], " ", "x"}], "+", 
                    RowBox[{"log", "(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], "+", "x"}], 
                    ")"}]}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    StyleBox[
                    StyleBox[
                    
                    TemplateBox[{
                    "\"An \"", "\"alternative \"", "\"form \"", "\"of \"", 
                    "\"the \"", "\"integral \"", "\"is:\""}, "RowDefault"], 
                    GrayLevel[0.3], StripOnInput -> False], {
                    LinebreakAdjustments -> {1, 89, 100, 0, 100}, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    TemplateBox[{"\" \"", "\"\[LongEqual] \"", 
                    StyleBox[
                    RowBox[{
                    StyleBox[
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], " ", "x"}], "+", 
                    RowBox[{
                    SuperscriptBox["sinh", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}]}], ")"}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], "+", 
                    StyleBox[
                    "\"constant\"", {
                    Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                    FontSize -> Inherited, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], {
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> {
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]}, Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "4"}, {
         XMLElement[
         "info", {
          "text" -> "sinh^(-1)(x) is the inverse hyperbolic sine function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/ArcSinh.html",
              "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> 
             "http://functions.wolfram.com/ElementaryFunctions/ArcSinh", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> 
             "http://mathworld.wolfram.com/InverseHyperbolicSine.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement["info", {"text" -> "sec(x) is the secant function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Sec.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Sec", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/Secant.html", "text" -> 
             "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement[
         "info", {"text" -> "tan^(-1)(x) is the inverse tangent function"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/ArcTan.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> 
             "http://functions.wolfram.com/ElementaryFunctions/ArcTan", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/InverseTangent.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}]}], 
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> 
         "IndefiniteIntegral__Hide steps"}, {}]}]}], Typeset`pod2$$ = 
   XMLElement[
   "pod", {"title" -> "Plots of the integral", "scanner" -> "Integral", "id" -> 
     "Plot", "position" -> "200", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[(x Sqrt[1 + x^2] + ArcSinh[x])/2, {x, -1.4, 1.6}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max5045$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min5044$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min5044$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max5045$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$788520$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min5044$\
788525$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max5045$788526$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max5045$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min5044$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$788520$$\
, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min5044$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min5044$\
788525$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max5045$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max5045$\
788526$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$788497[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    Rational[
                    1, 2] ($CellContext`x (1 + $CellContext`x^2)^
                    Rational[1, 2] + 
                    ArcSinh[$CellContext`x]), {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min5044$$], 
                    (
                    Piecewise[{{
                    0.11601086508313907` + 
                    1.6035674514745462` Tan[1.5040801783846716` #], # < 0}}, 
                    0.11601086508313907` + 
                    1.6035674514745462` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min5044$$], \
-1.383989134916861], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min5044$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max5045$$]], 
                    (
                    Piecewise[{{
                    0.11601086508313907` + 
                    1.6035674514745462` Tan[1.5040801783846716` #], # < 0}}, 
                    0.11601086508313907` + 
                    1.6035674514745462` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min5044$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max5045$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min5044$$ + 
                    0.003, CalculateUtilities`GraphicsUtilities`Private`\
max5045$$]], 1.616010865083139]}, 
                    LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Full, Automatic}, LabelStyle -> {}, Ticks -> 
                    Automatic, ImageSize -> Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min5044$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max5045$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$788497] = \
{"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$788497[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$788497[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbikw3mH8AyQ+\
I17FkJAQ22BMGlCS8r232EktXDvYzjb48+Czm6RZu0oxHaAp/XCqL83ju+eeu96DQxml/\
V6vpy9b80Fykm7g6b41O3Kay0KQdye5olozKdJL+OyGNTE1u5TDD0q876o176WagvHn1/g+\
8KTgYOhXwzgzjOrxnoJ8whJde4aKHdmfjLlMgLOf9OHLra0Xj195FAxlCMZQJfSztoj5RIGmaQ+\
BrlizzUF888fN8vip4Dym3wsqEqrvWu9IAbEwUgDHdIJvvdBE3cK8DAgCipw7S06c220v0EYxkY3oN\
Mc3zuTqSVtcUJn21NwuqVmlHx/9NXwgYxeS97ic3dnxFxbGxWLvtKj+OXUDPL9pC6/\
k8VLeML23HGkDw46oXmTzUesqeUKqlnXBz6g6p9my1hjPnjD1P9IB02YxjKdtw6DTQ1vh5cpbhH/\
eFl7m2PIzad+x5rN3lIDLJkMlt4+SFHwWRTPlgRdo+3R1bh0e42bFd4zOkApWOJGNs+\
wW1x33KvB6R4ixduM1SEfUEyCiObUu4rjdZRkzOxNQkFjg2XX9ssdGsg4l4M72tWeCMDu+\
PCGr1iY0++lc3cEkky9/VNxKLqeaDHnfF4ZmVK0U/\
XWsj7LkCjKSgZHEeEFTr8EcVkkNQQXLflCCxDkIhpDsl/24b/\
7hfCWQqj2F6lKexYErzUl4Ev2ywAdUZGbS3K4DR1dw22I2kTyuVRexNJ2fNutjut9kunFDc6CHkhBa\
kvCB3u0J3Z7wF/eEhR24WxK6JaFbEroloVsS/t8lwUWM/0q/Afdktz4="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[(x Sqrt[1 + x^2] + ArcSinh[x])/2, {x, -8.9, 9.1}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max5047$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min5046$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min5046$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max5047$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$788617$$ = 
                 False, CalculateUtilities`GraphicsUtilities`Private`min5046$\
788618$$ = 0, CalculateUtilities`GraphicsUtilities`Private`max5047$788619$$ = 
                 0}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max5047$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min5046$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$788617$$\
, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min5046$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min5046$\
788618$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max5047$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max5047$\
788619$$, 0]}, "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$788596[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][
                    Rational[
                    1, 2] ($CellContext`x (1 + $CellContext`x^2)^
                    Rational[1, 2] + 
                    ArcSinh[$CellContext`x]), {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min5046$$], 
                    (
                    Piecewise[{{
                    0.11601086508313863` + 
                    9.621404708847276 Tan[1.5040801783846716` #], # < 0}}, 
                    0.11601086508313863` + 
                    9.621404708847276 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min5046$$], \
-8.883989134916861], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min5046$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max5047$$]], 
                    (
                    Piecewise[{{
                    0.11601086508313863` + 
                    9.621404708847276 Tan[1.5040801783846716` #], # < 0}}, 
                    0.11601086508313863` + 
                    9.621404708847276 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min5046$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max5047$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min5046$$ + 
                    0.018000000000000002`, 
                    CalculateUtilities`GraphicsUtilities`Private`max5047$$]], 
                    9.116010865083139]}, 
                    LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    WorkingPrecision -> MachinePrecision, 
                    PlotRange -> {Full, Automatic}, LabelStyle -> {}, Ticks -> 
                    Automatic, ImageSize -> Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min5046$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max5047$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$788596] = \
{"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$788596[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$788596[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7+MfIPEZ8aaxD0iIvTAmDShJ+\
V4vviQWrh1sdxv8efDZTdKsXaWYDtCUfjjVl+bx3XPPXe/xkYzSfq/X01et+SA5TW/\
g6ZE1O3JSyKmge6eFAq2ZFOkVfHbbmhjMLnDyA6j3XbfmvVQTYvz5Db5PeDLlxMBXwzgzDPR4X5EiZ\
4muPUPFju1PxlwmhLOf8OT11tbms02PgqEMiTGghH7ZFrHIFdGQ9hDomjXbnIhv/rhRHj9NOY/h+\
xREAvqB9Y4UoRZGCsIxneBbLzVRdzEvQwQlil44S06c220v0EYxkY1gUuAb53L1vC0uUZn21NwrqVm\
lHx/9TXwgYxeS97ic3dnxFxbG5WLvrKj+OXUDPL9tC6/\
kyVLeML13HGkjhh2DXmTzaesqeUKqlnXBz6i6oNmy1hjPnzD1P9Ih02YxjBdtw4DJka3wcuUtwr9qC\
y8LbPmZtO9b89k7SsBlk6GS20dJp3wWRTPlgRdo+3R1YR0e407Fd4zOkApWOJGNs+wW1x0PK/\
B6R4ixduM1SEfUEyCCAqyLOm53WcbMTk4USSzw7Lp+\
2WMjWYcScGf72jNBmR1fnpBVaxOag3Su7sQk+Zc/\
Km4llzNNhrwfCAMZqJWiv4X1UZZcQUcyMJIYL2jqNZjDKqkhUcGyH5QgcUEEQ0j2y37cN/\
9wvhJI1b5CdSnP4sCV5jQ8iX5Z4EMQmcmb23Xg6ApuW8wmkie16iKWpvPTZn1M95tMN25oDvRQEkJL\
Ej7Quz2h2xP+4p6wsAN3S0K3JHRLQrckdEvC/7skuIjxX+k3BCa3Lg=="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Alternate form of the integral", "scanner" -> 
     "Integral", "id" -> "AlternateFormOfTheIntegral", "position" -> "300", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"TrigToExp[(x Sqrt[1 + x^2] + ArcSinh[x])/2]"}], 
       XMLElement[
       "moutput", {}, {"(x Sqrt[1 + x^2])/2 + Log[x + Sqrt[1 + x^2]]/2"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], " ", "x"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"log", "(", 
                    RowBox[{
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], "+", "x"}], 
                    ")"}]}]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Expanded form of the integral", "scanner" -> 
     "Integral", "id" -> "ExpandedFormOfTheIntegral", "position" -> "400", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Expand[(x Sqrt[1 + x^2] + ArcSinh[x])/2]"}], 
       XMLElement["moutput", {}, {"(x Sqrt[1 + x^2])/2 + ArcSinh[x]/2"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             StyleBox[
              RowBox[{
                StyleBox[
                 RowBox[{
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["x", "2"], "+", "1"}]], " ", "x"}], "+", 
                   RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{
                    SuperscriptBox["sinh", 
                    RowBox[{"-", "1"}]], "(", "x", ")"}]}]}], {
                  GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                  LineIndent -> 0}], "+", 
                StyleBox[
                "\"constant\"", {
                 Magnification -> 0.9 Inherited, FontFamily -> "Roboto", 
                  FontSize -> Inherited, 
                  LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                  0}]}], {
               GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
               LineIndent -> 0}], Identity], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "ExpandedFormOfTheIntegral__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x = 0", "scanner" -> 
     "Series", "id" -> "SeriesExpansionOfTheIntegralAtx=0.", "position" -> 
     "500", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Series[(x Sqrt[1 + x^2] + ArcSinh[x])/2, {x, 0, 4}]"}], 
       XMLElement["moutput", {}, {"x + x^3/6 - x^5/40 + x^7/112 + O[x]^9"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  RowBox[{"x", "+", 
                    FractionBox[
                    SuperscriptBox["x", "3"], "6"], "-", 
                    FractionBox[
                    SuperscriptBox["x", "5"], "40"], "+", 
                    FractionBox[
                    SuperscriptBox["x", "7"], "112"], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox["x", "9"], ")"}], 
                    SeriesData[$CellContext`x, 0, {}, 1, 9, 1], Editable -> 
                    False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "0", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", 
                    FractionBox["1", "6"], ",", "0", ",", 
                    RowBox[{"-", 
                    FractionBox["1", "40"]}], ",", "0", ",", 
                    FractionBox["1", "112"]}], "}"}], ",", "1", ",", "9", ",",
                     "1"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                 InterpretationFunction -> (#2& ), SyntaxForm -> Plus]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"Taylor series\"", "\[NoBreak]", 
                   "\")\""}], {FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x = -i", "scanner" -> 
     "Series", "id" -> "SeriesExpansionOfTheIntegralAtx=0. - 1.*I", 
     "position" -> "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Series[(x Sqrt[1 + x^2] + ArcSinh[x])/2, {x, -I, 4}]"}], 
       XMLElement[
       "moutput", {}, {
        "(-1)^Floor[((3 Pi)/2 - Arg[I + x])/(2 Pi)] (((-1)^(1/4) Sqrt[I + \
x])/Sqrt[2] - ((-1)^(3/4) (I + x)^(3/2))/(12 Sqrt[2]) - (3 (-1)^(1/4) (I + \
x)^(5/2))/(160 Sqrt[2]) + O[I + x]^(7/2)) + (-I/4 Pi - (I Sqrt[1 - I \
x])/Sqrt[2] + (5 Sqrt[1 - I x] (I + x))/(4 Sqrt[2]) + ((7 I)/32 Sqrt[1 - I x] \
(I + x)^2)/Sqrt[2] + O[I + x]^(7/2))"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                   RowBox[{"-", "1"}], ")"}], 
                 TemplateBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "2"], "-", 
                    RowBox[{"arg", "(", 
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "\[Pi]"}], ")"}]}]}, "Floor"]], " ", 
                RowBox[{"(", 
                  TemplateBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RadicalBox[
                    RowBox[{"-", "1"}], "4"], " ", 
                    SqrtBox[
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}], 
                    SqrtBox["2"]], "-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "4"}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"12", " ", 
                    SqrtBox["2"]}]], "-", 
                    FractionBox[
                    RowBox[{"3", " ", 
                    RadicalBox[
                    RowBox[{"-", "1"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"5", "/", "2"}]]}], 
                    RowBox[{"160", " ", 
                    SqrtBox["2"]}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"7", "/", "2"}]], ")"}], 
                    SeriesData[$CellContext`x, 
                    Complex[0, -1], {}, 1, 7, 2], Editable -> False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "\[ImaginaryI]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"1", "/", "4"}]], 
                    SqrtBox["2"]], ",", "0", ",", 
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "4"}]], 
                    RowBox[{"12", " ", 
                    SqrtBox["2"]}]]}], ",", "0", ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"1", "/", "4"}]]}], 
                    RowBox[{"160", " ", 
                    SqrtBox["2"]}]]}]}], "}"}], ",", "1", ",", "7", ",", 
                    "2"}], "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                   InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                  ")"}]}], "+", 
              RowBox[{"(", 
                TemplateBox[{
                  RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}], "-", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}]], " ", 
                    SqrtBox[
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}], 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}]], "+", 
                    FractionBox[
                    RowBox[{"5", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}]], "+", 
                    FractionBox[
                    RowBox[{"7", " ", "\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"5", "/", "2"}]]}], 
                    RowBox[{"32", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"7", "/", "2"}]], ")"}], 
                    SeriesData[$CellContext`x, 
                    Complex[0, -1], {}, 0, 7, 2], Editable -> False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "\[ImaginaryI]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}], ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}]]}], 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"\[ImaginaryI]", "+", "x"}]]}]]}], ",", "0", ",", 
                    FractionBox[
                    RowBox[{"5", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}]]}], 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"\[ImaginaryI]", "+", "x"}]]}]], ",", "0", ",", 
                    FractionBox[
                    RowBox[{"7", " ", "\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"1", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}]]}], 
                    RowBox[{"32", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"\[ImaginaryI]", "+", "x"}]]}]]}], "}"}], ",", 
                    "0", ",", "7", ",", "2"}], "]"}]}, "SeriesData", 
                 DisplayFunction -> (#& ), InterpretationFunction -> (#2& ), 
                 SyntaxForm -> Plus], ")"}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "3"}, {
       XMLElement["info", {"text" -> "arg(z) is the complex argument"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Arg.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ComplexComponents/Arg", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/ComplexArgument.html", 
           "text" -> "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement["info", {"text" -> "floor(x) is the floor function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Floor.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/IntegerFunctions/Floor", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/FloorFunction.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}], 
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x = i", "scanner" -> 
     "Series", "id" -> "SeriesExpansionOfTheIntegralAtx=0. + 1.*I", 
     "position" -> "700", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"Series[(x Sqrt[1 + x^2] + ArcSinh[x])/2, {x, I, 4}]"}], 
       XMLElement[
       "moutput", {}, {
        "(-1)^Floor[(Pi/2 - Arg[-I + x])/(2 Pi)] (-(((-1)^(3/4) Sqrt[-I + \
x])/Sqrt[2]) + ((-1)^(1/4) (-I + x)^(3/2))/(12 Sqrt[2]) + (3 (-1)^(3/4) (-I + \
x)^(5/2))/(160 Sqrt[2]) + O[-I + x]^(7/2)) + (I/4 Pi + (I Sqrt[1 + I \
x])/Sqrt[2] + (5 Sqrt[1 + I x] (-I + x))/(4 Sqrt[2]) - ((7 I)/32 Sqrt[1 + I \
x] (-I + x)^2)/Sqrt[2] + O[-I + x]^(7/2))"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                   RowBox[{"-", "1"}], ")"}], 
                 TemplateBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], "-", 
                    RowBox[{"arg", "(", 
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", "\[Pi]"}], ")"}]}]}, "Floor"]], " ", 
                RowBox[{"(", 
                  TemplateBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "4"}]], " ", 
                    SqrtBox[
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}], 
                    SqrtBox["2"]]}], "+", 
                    FractionBox[
                    RowBox[{
                    RadicalBox[
                    RowBox[{"-", "1"}], "4"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"12", " ", 
                    SqrtBox["2"]}]], "+", 
                    FractionBox[
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "4"}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"5", "/", "2"}]]}], 
                    RowBox[{"160", " ", 
                    SqrtBox["2"]}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"7", "/", "2"}]], ")"}], 
                    SeriesData[$CellContext`x, 
                    Complex[0, 1], {}, 1, 7, 2], Editable -> False]}], 
                    RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "\[ImaginaryI]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "4"}]], 
                    SqrtBox["2"]]}], ",", "0", ",", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"1", "/", "4"}]], 
                    RowBox[{"12", " ", 
                    SqrtBox["2"]}]], ",", "0", ",", 
                    FractionBox[
                    RowBox[{"3", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "4"}]]}], 
                    RowBox[{"160", " ", 
                    SqrtBox["2"]}]]}], "}"}], ",", "1", ",", "7", ",", "2"}], 
                    "]"}]}, "SeriesData", DisplayFunction -> (#& ), 
                   InterpretationFunction -> (#2& ), SyntaxForm -> Plus], 
                  ")"}]}], "+", 
              RowBox[{"(", 
                TemplateBox[{
                  RowBox[{
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"], "+", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "1"}]], " ", 
                    SqrtBox[
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}], 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}]], "+", 
                    FractionBox[
                    RowBox[{"5", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "1"}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"3", "/", "2"}]]}], 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}]], "-", 
                    FractionBox[
                    RowBox[{"7", " ", "\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", "x"}], "+", "1"}]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"5", "/", "2"}]]}], 
                    RowBox[{"32", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}]]}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    TagBox["\[ImaginaryI]", HoldForm]}], ")"}], 
                    RowBox[{"7", "/", "2"}]], ")"}], 
                    SeriesData[$CellContext`x, 
                    Complex[0, 1], {}, 0, 7, 2], Editable -> False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "\[ImaginaryI]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"], ",", 
                    FractionBox[
                    RowBox[{"\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}]]}], 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "x"}]]}]], ",", "0", 
                    ",", 
                    FractionBox[
                    RowBox[{"5", " ", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}]]}], 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "x"}]]}]], ",", "0", 
                    ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"7", " ", "\[ImaginaryI]", " ", 
                    SqrtBox[
                    RowBox[{"1", "+", 
                    RowBox[{"\[ImaginaryI]", " ", "x"}]}]]}], 
                    RowBox[{"32", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], "+", "x"}]]}]]}]}], "}"}],
                     ",", "0", ",", "7", ",", "2"}], "]"}]}, "SeriesData", 
                 DisplayFunction -> (#& ), InterpretationFunction -> (#2& ), 
                 SyntaxForm -> Plus], ")"}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Series expansion of the integral at x = \[Infinity]", 
     "scanner" -> "Series", "id" -> 
     "SeriesExpansionOfTheIntegralAtx=Infinity", "position" -> "800", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Series[(x Sqrt[1 + x^2] + ArcSinh[x])/2, {x, Infinity, 4}]"}], 
       XMLElement[
       "moutput", {}, {
        "x^2/2 + (1 + Log[4] + 2 Log[x])/4 + 1/(16 x^2) + O[x]^(-4)"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TemplateBox[{
                  RowBox[{
                    FractionBox[
                    SuperscriptBox["x", "2"], "2"], "+", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"log", "(", "x", ")"}]}], "+", "1", "+", 
                    RowBox[{"log", "(", "4", ")"}]}], ")"}]}], "+", 
                    FractionBox["1", 
                    RowBox[{"16", " ", 
                    SuperscriptBox["x", "2"]}]], "+", 
                    InterpretationBox[
                    RowBox[{"O", "(", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["1", "x"], ")"}], "4"], ")"}], 
                    SeriesData[$CellContext`x, 
                    DirectedInfinity[1], {}, -2, 4, 1], Editable -> False]}], 
                  RowBox[{"SeriesData", "[", 
                    RowBox[{"x", ",", "\[Infinity]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["1", "2"], ",", "0", ",", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"Log", "[", "4", "]"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", "x", "]"}]}]}], ")"}]}], ",", "0", 
                    ",", 
                    FractionBox["1", "16"]}], "}"}], ",", 
                    RowBox[{"-", "2"}], ",", "4", ",", "1"}], "]"}]}, 
                 "SeriesData", DisplayFunction -> (#& ), 
                 InterpretationFunction -> (#2& ), SyntaxForm -> Plus]}, {
                StyleBox[
                 
                 RowBox[{
                  "\"(\"", "\[NoBreak]", "\"generalized Puiseux series\"", 
                   "\[NoBreak]", "\")\""}], {
                 FontFamily -> "Roboto", FontSize -> 10, 
                  GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                   LineIndent -> 0}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Big-ONotation.html", "text" -> 
           "Big\[Hyphen]O notation"}, {}]}]}]}], Typeset`aux1$$ = {
   True, False, {False, False}, True}, Typeset`aux2$$ = {
   True, False, {False, False}, True}, Typeset`aux3$$ = {
   True, False, {False}, True}, Typeset`aux4$$ = {True, False, {False}, True},
    Typeset`aux5$$ = {True, False, {False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "8", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "3.313", "parsetiming" -> "0.303", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP60151gia6790g52gegf400004c6b1gad53125ge1", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "6", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa60161gia6790g52gegf400002fcba7f5867hei357167914177805443390", "version" -> 
    "2.6", "inputstring" -> "Integrate[(1 + x^2)^(1/2), x]"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2022, 12, 3, 19, 54, 45.7808449`9.413258669875894}, "Line" -> 
    131, "SessionID" -> 25460130546149694738}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Fast parse", "Fast parse", 1, 0, "Input", 
    "Integrate[(1 + x^2)^(1/2), x]"}, Typeset`open$$ = False, Typeset`newq$$ =
    "Integrate[(1 + x^2)^(1/2), x]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{214.09765625, {34., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"01f2db80-fe5d-4d82-b173-c42a2df029d7"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}]]}], "+", 
    RowBox[{"ArcTanh", "[", 
     FractionBox["x", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}]]], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8790572591289654`*^9, 3.8790572798406506`*^9}},
 CellLabel->
  "Out[130]=",ExpressionUUID->"90e70a4a-774e-44f3-a767-7af50071aa26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Style", "[", 
   RowBox[{"Purple", ",", "100"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8790573010751204`*^9, {3.8790573461463957`*^9, 3.879057368164695*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"e770c8b5-ba2e-4fdb-bff9-5c21d4c2c1e9"],

Cell[BoxData[
 StyleBox[
  TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>,
   "RGBColorSwatchTemplate"],
  StripOnInput->False,
  FontSize->100]], "Output",
 CellChangeTimes->{3.8790573696969385`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"33ea7113-1bd4-453b-989c-986a0a591991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"Red", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "100", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8790573766948414`*^9, 3.8790574267498283`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"5da7ff61-a21b-4542-816c-d43bbf8847f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->0], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->10], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->20], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->30], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->40], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->50], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->60], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->70], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->80], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->90], ",", 
   StyleBox[
    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>,
     "RGBColorSwatchTemplate"],
    StripOnInput->False,
    FontSize->100]}], "}"}]], "Output",
 CellChangeTimes->{3.879057427291611*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"966dd92a-3463-4f9a-ae89-ad35c2fbeeda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"n", "^", "2"}], ",", 
     RowBox[{"n", "^", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.87905743702413*^9, 3.8790574655911493`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"c50250d1-ffcf-4fc0-ae29-d4d4fd080dae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["1",
    StripOnInput->False,
    FontSize->1], ",", 
   StyleBox["4",
    StripOnInput->False,
    FontSize->4], ",", 
   StyleBox["9",
    StripOnInput->False,
    FontSize->9], ",", 
   StyleBox["16",
    StripOnInput->False,
    FontSize->16], ",", 
   StyleBox["25",
    StripOnInput->False,
    FontSize->25], ",", 
   StyleBox["36",
    StripOnInput->False,
    FontSize->36], ",", 
   StyleBox["49",
    StripOnInput->False,
    FontSize->49], ",", 
   StyleBox["64",
    StripOnInput->False,
    FontSize->64], ",", 
   StyleBox["81",
    StripOnInput->False,
    FontSize->81], ",", 
   StyleBox["100",
    StripOnInput->False,
    FontSize->100]}], "}"}]], "Output",
 CellChangeTimes->{3.87905746669598*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"85680bb5-e202-49e7-90e5-74683afc4a93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Graphics", "[", 
   RowBox[{"Circle", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8790575254088492`*^9, 3.8790575406189423`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"c1b92d24-e09d-43be-9a8f-a05ee4958e7f"],

Cell[BoxData[
 GraphicsBox[CircleBox[{0, 0}]]], "Output",
 CellChangeTimes->{3.8790575429700813`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"03d7b297-05a1-40c9-a744-e0ac8ebf86d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Disk", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.879057546906904*^9, 3.8790575523616567`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"12590bdd-50c6-4b2c-a2f6-d0c3fb17c62f"],

Cell[BoxData[
 GraphicsBox[DiskBox[{0, 0}]]], "Output",
 CellChangeTimes->{3.8790575528540096`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"929b5664-fb78-46ab-9680-711a1168459b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Graphics", "[", 
   RowBox[{"RegularPolygon", "[", "10", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879057556717095*^9, 3.879057568302331*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"dd1f4c88-7dd8-4402-bff6-59dc89d423fd"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[
   PolygonBox[
    NCache[{{Rational[1, 4] (-1 + 
        5^Rational[1, 2]), -(Rational[5, 8] + 
         Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (1 + 
        5^Rational[1, 2]), -(Rational[5, 8] + 
         Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {1, 0}, {
      Rational[1, 4] (1 + 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (-1 + 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (1 - 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {
      Rational[1, 4] (-1 - 5^Rational[1, 2]), (Rational[5, 8] + 
        Rational[-1, 8] 5^Rational[1, 2])^Rational[1, 2]}, {-1, 0}, {
      Rational[1, 4] (-1 - 5^
        Rational[1, 2]), -(Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}, {
      Rational[1, 4] (1 - 5^
        Rational[1, 2]), -(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
        Rational[1, 2]}}, {{0.30901699437494745`, -0.9510565162951535}, {
      0.8090169943749475, -0.5877852522924731}, {1, 0}, {0.8090169943749475, 
      0.5877852522924731}, {0.30901699437494745`, 
      0.9510565162951535}, {-0.30901699437494745`, 
      0.9510565162951535}, {-0.8090169943749475, 0.5877852522924731}, {-1, 
      0}, {-0.8090169943749475, -0.5877852522924731}, {-0.30901699437494745`, \
-0.9510565162951535}}]],
   RegularPolygon[10]]]], "Output",
 CellChangeTimes->{3.8790575690697713`*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"05b23227-0a76-4b8f-ae03-75650fe5f5da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"Sphere", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879057586480528*^9, 3.8790576050513964`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"f1f4b24e-51c1-4a8b-be61-073ca1ab10ef"],

Cell[BoxData[
 Graphics3DBox[SphereBox[{0, 0, 0}],
  ImageSize->{349.6760231436058, 361.50107936956005`},
  ImageSizeRaw->Automatic,
  ViewPoint->{2.3679253694853917`, -1.0073928368920282`, 2.1972913135781753`},
  ViewVertical->{0.09352562960719875, 0.3030650561760139, 
   0.9483694049955465}]], "Output",
 CellChangeTimes->{3.8790576058905964`*^9},
 CellLabel->"Out[137]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy8vQd4XFd6JVguAKSyWlI3u9upZbvd3Q7ddptRjGACc85gAggSFYBC5YAq
FAoZzJRIURRFiUGURElUzpnqYHtmtTvenfHs7I69y5nxzs5OWnvX6/HO2DNv
zvnvfe/dW3ig1O3e5fedy6pX7916de855/9vqMK69lz0UKI9F+tof3BFpj0V
jXVkH2xJZnCo4edCofBHwB8/GGrEYycUCi4+CYW8x0flYcOD06ZNu1EoFAj1
wveNk474JzmdnZ1yUpilvPq7xpmH5eFU90yi+bPPPuPBS4ODgzcTiYQ68XeM
i8blYWPbtWvXeAJPZOUN6l3dw1KPnP9d49oxedjknmSd3Kgq4GO7gt82KhhV
FdROnz7Nk3jnfMybCE3xK/A+iVz0W0YFI/JwilkB4T6eOlkdv2nUMaxawKyD
B8K8i9vtxucnVBf9hlHB0MSb4AH3Ru60e1k+nFz3HaOOQXWSVUdYHeNFPC7P
6irzKfNto7Kaf5JbYajBPybP+e8e+Zwel75lVNEfUEWjfz/SEPx3rzrm0sav
4JtGZVW7MmmBOn7Is/vsRvAr+DWjsr6Aypr8O3MZH7pfHZvI4F81KqsE9E2T
faE8+7J9t35lv2JUVrYrkz5rso/JhdP8ymxWPmhU1mv3l1Q2xb8zr7G/alfm
M/QbRmWlyStzj8ldfD3gPKngl43KigEnTfXvTNqQ/34+oG2lgl8yKitMXpl1
Z3KNT9VfNKrIBzT7bXI63/Ib9oW/YFyYC3jv2+xjokPVLQEc/7pRWTagstu9
u1Ccs+Utl33NqCLjd6X3uW+3q5Vnv+Y3tk3GrxqVpQNOukMdswT8Tf9NbTJO
MypL2ZXJ7d9h3608+9ZklX3FqCwZ0BZ3BtzZt/2PbjP7y0ZlPZNXZt3Zb/iV
eSSRCh4wKktMXpkl4N+yj/nMvt+orDugsrv8dvSYJAHVJ+h9RhVddhXy7C7/
vb1+/R27ii8ZVcT8071q7gm4C5VHNHh5glfBPUZlUbsyufiegPv5Pfu+fRrc
bVQWsSuTRrzXvzPPRqb7x+zK7jIq6wzokXvtO5MOmKmOTSTonUZlh+zKhCvS
piLl2ZNVcYdRxUH7vf0q6qQ8xz9mc/x2o7KOgMru8/vLyw0eCrhvqeA2o7ID
k1dm3dm8gBaVCqYalbUHVKbjriXlBdJ6HkGnGFW0Bdz0/X4Te/ezyK6iyahi
f0AVDwTcRbPfZjbHG4zK9gV8pAcC7meJOjaR42Gjsr12ZXLSA/bdyrFl6thE
jv+cUdmegJO+7B/zpLzcv1uboLqe3XY9oosvB9zoioB6/otRT6vdAlLPVwLu
Z6Vft8fx/2zUs2vyeqz7WR3QzX9r1LMzoJ5p/jHPUNbY9cjxvzHq2TF5PZaX
rJfeZhX/ybh6e8DVEpfFPDZ61/xH45qtfu2eSX/Nfkd5tkkdswj810Y9WwLq
0SmdNYjYbDNAWvc/GPVstuuRFqpLDUPGfVsJy18Z9WwKaOmf9+/HE+Y2vx6P
af+PUc9Gux75HD9vv3fI6Dmrnr806tkQUM8v+PfjDR12+ud5jP2/jXrW221h
1mONGloDPv//ZdSzbvJ6LHvYYx8TZf2FUc/agHp+0b8fT4nibcK+PzeurtOD
ebWlvzZ1zEqD/71RT5A+f8m/C09/OmhYWc2/M+pZFfBpfingfjrsFpdj/9ao
Z6V9jfSijGNEiTrIW9z9N8bVKwJq/2W7RtF2p1+Px7l/bdTTElDPN7y7iNpX
yz3+H8bVy+22knf8hn0X8ixmH5M2+1dGPcsC6nlQHbOUGLf7UPrsfzfqWTp5
PZYSpRSm/Uvj6iUBV/9KwF30eFf/b8bViye/2npvPVixePovjHoW+Z/R4+Cv
2p9beikT8H7/3KhnYUA9xtDMe++sf8xjwD8z6llg1yNt/mt2f8o1ef+zeky7
adQzP6CebwbcTyGgnv/VqCco8/tmQPsYkwoed/8Xo5659jXCyV/378fzg96A
8/7UqMdIaz1u/7p9TPomaC7nT4x65gTUIwNWUaJMeAnn/qlxzezJrqnTX827
+n82rp4VcPW3vXfUU35WNP8nxtUzA9rl23aN8kxNP9o8/R+NemYE3IWaerRV
N+z3jce5f2zUM33yeiz9jfrHPH79sVHP79nXyOu/EXA/YwH1/COjnu8H3O9v
BNzPYf++PZ7+Q6Oe37Xrkfarmy6Quutm6+Xz/w9GPb8T0A+/6dft6e+YXY/w
9L836vne5PVYfnCSh4Rzf2Rc/d2Aq38r4C5OeVf/A+Pq3578auu9H1HHLO7+
t0Y9v2XXE6qr29P+afs8qfszox6jH7y6vmvfj9zjo3YfSj3/jVHPd+x6pBWk
nUWJj6lXLab9fePqb9tXy91/z74LeXYuoJ6/Z9RjOIfX85o1Vn7+uH+ex9g/
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
MjsKEDmFrL5aZPSVKIuq6ibE4xIseqjJJT3sJhc8kGIhPZVu0t21VHoqi6fL
cuyuPB4tz/PyljwfucBZy3MssnzP5Rl2L3uX72n2MXW4DG+8THft0ii6Fba3
5yS69njgar3a0WouW9U55bfYnbXTuYLT2X4A3Ykumz4/QHdGl85Y/nfoVt2l
D9V16dwJXTqhR+ebPSqJmA5YCyVgQXsNbqdKl7Jj6ZGLYp/TndSe25UpCVki
vTS9L8MiyyLH85bl2I2EPMvjhWUF6TS03/Iiwe5dXmQfF8m4FUUnAuCZAk6Q
08N2x7PIsEhTw8tTfMQu13rWnb1SOvvBaZemuFtFLKGqbdChukGs8EBlK/fT
YDkAQwfPczr3IAotW33rjp5hdPRMr6PD7OnQ/T+jvmamN5+Jyfy2iT28wOhh
FpIrMyURvUZDRg83mT0MKH/1NMtOXpxSWEJFLUk3uMbKLl6WY5Hn0wI1W6Rc
Syx62Z29uGJFL94ksqLXiaw0gKPyGq5sKYXZz3zELm6p72JKmD27XPfssi70
arp2et+jzZ9VPnM3ElljavX1M73Xy86D1Jjpdg4fDenCjddspJzNHuUdzlgW
um+ifGfWyXeW0aWz67p0jnSpDMO3k6i37lb2qjhzm+i4XeWc6Fp2sPix6lzT
k6WjI752pbf9/IYdzdSmWcXNHt2rkrIsVn3KIhMS8VK7LuigSsN5J7JcgJMi
ywsNWq/LS426q5eXRaMV9J9AHLuCYgWKyEoWqyo4BQ+dTmJFWQggl7WUyRWC
x4L40JILIVduyZpMAAsyZIEQQIbK6hsR7rYHq9vVDNvdAfmsHmksWKHEvXxd
vWvznmauCH31p+16peaH6rp9rtHt82RYjI5v1Lbdrrv+gPQ6i4PKrpuUXS+M
aBh6dnt9UVCvN9f1OltzcZpdz57XkD6nvFXk5ZvBoyMeYMst9OpISwkdSXFH
WsrsnLLb2S19LKq4fEUVL6xEEVlZZd9X4QGr+XRVlTWs6sOrGiv6eH5F2CCe
wIIcWFGkXlYUSAQV/1sQS1oymgDd6PzHYOzTQk97DFDf7gzpDTTWuFR9MY1z
R+McZ95MzFrs9/50w8rXovf27A+O2+z9mXW9P0t6P8zup1f8dAQA3JjdLmQw
ul5sXWdfrtolcEfdDEwYwEx5UZf0u3R5QnV7c490edJV++I0X3U7fElWondO
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
GdxNX5G92tihUpdlLLfzyz082MkY67KMPRCQEVTVkUom5FTAfpvAipsBsSqG
WE8dQ14LifWC2G+D1zyxPhDra2FGwSszRmHF3zYOJNonQG0hsQEQG+hiDkqg
m/uvAkZZJ4GlkWA2iKaKsP718/jTIIgNDjCvglatLDgb4tFTIRAbGlYhca43
0LJDNHaEeQu0Micl7D7plLAH2/9h8hr2vcOFW/1h/7vIaZ3AaTwh8B6WII80
DQffl3BIBR89HOIJnuHwWeQDO6GIojbyIZYoh6chyBqKqfBe7Dx8jnO3VCh+
UUKwNJjg6ZpY8eUS02DyEkqrwjQASAMpFdKausIF/dKXooG+9FXkmnjT13hY
VhqietLXAWz6OoDl4kpf5/EDqetQ1g7Ka+o6ymtKAwtflbJ9QLcvocKNJA5f
exIUlQ2226RL64onwFZeNp7FNWqKawSfPFh1/GcFa3MBrI0aVjULqPefM7Ka
5uo1zdWTb66KVdfcrO7tfauA1dfBKrb/244VsbrdYpWNtTz8ozufu2muWDzP
2udkbf9/R+PJxmpfPqTY1aIri2hX5+1tufNhKbi+MXdM/Rb/u5ea5qpJvaOQ
VHUcPw+qypPKg6po6vwCU++zTMXbIKrjuzD1gQJTH5KtcHUrXN2mXH0Moj4G
T1Fbf7MAnjJPqA3/hY475jD1aXiqTS373SJlarlt6gsw9UWY+pLsv/dlZeoB
29TlUvnQCtn91HLlajW6aw26aw26ay26ay26ax26K12tp6tPbYGpW6VRmYo8
u0Oa4GrTc7ukucDUlhe1qa22qfvgaQWyX9qXHrBN7TCmdtqm1sFT7Wr32sZZ
pvZuRDa12ab2bemwTOWxUds4AVCm7uiVAfTWgZ1MvwzuGsBPxm5OAEjqEEhV
AanDZSOIG6Ai+zzi2scJgKvCx/3FIHUkTyo2GatCHIxWhw2nmlRPLRMDpUzc
SU/BaAN3UnkbUwQVlKbFB1J9zUzWSU+hLDX1M21jOu3jBFUCHcwkKGWmnPQU
hHTziKogNv2DPQyvrhTsPYy/RoNqUO1njkmo/xisHODp9CGYGhpkXoOleVaH
X9esushq2PUGlpE3sbjfwn/6MEH1MKd0sOkfYXzsrxEfqmvET1sjMDUSsPIe
3hZUC3dSRUJnkPdV4GsJYSW5ZDWiwr85wteqCEc/RM5ZwQOxj/DM+Hk8Qcka
TlxALjL85BMX50soia3+YPIyvg+py7iVwnY4VAW0aUDnTwNVfxpFFJ6ytmau
IdetzBMvF08Gdrp5y8IV7TUNSofA7HyqClTzGUhd5+9q1tt+MtunmO0Fs70J
FYcWtsTIqnQ1spZIR+yypSunrBE1ZWVnDZvOymsBwFbHPypdGwp0rSvQtcZb
IKsbso7MJespyHrya2Q9AlkPQdZp2d7AWQAvXBcf7Bj5yFx9qej4KlL6XXsX
lbk+yc6v3EX1l+ioW+fsqHlMf2931BUG1JUFHdVgqi39c1h670xLIen9pp/C
UuPplp9blj4MSx9RHXX7rx5zElP8r1aU3vqErqamnu5hbn9Kbf4/7fjnYkpR
UcvB6T5wug+cVqCiVqCi7kdF3Y+KesBwWglOq8BpYUWtQUWtQUWtRUWtQ0Wt
Q0WtN5Q22JRuU5Q2GUqb85Q6peWFvfiP0ApNW1+Cpi+XS5uRtL1A0g4laZV0
QtPOldB0Va10GUm7CyTtWc80Sy80tSTtg6R9m9ttSfvRTvu3Md0ysJ1TgIEd
fDkhSjq4S0kKSAdkCA11SFGqOR0u5csJAVM81wVKXZpSQOoFoz6bUnclw5cR
ylvqYWCpp8BSbx0DS73GUvwMN6Z4PFMxpOJvYXJOMgpQiWiAAaSBGZAG0U2D
XYy21ElGKUnvIeQww3bZx9fKCAHSUD8DSAcMpCUK0TAzxBNMw6Q0PMxLeYbB
aNjFvAFDLUgjbmz9Rzzc+o9A0IiX0Xpy9xQMBZ7vKEadXEtoaAn9BDwAtIjP
SJiT00iYO6MikbPIB1bwcJTD0gjojMRU+AFj3NyNxD9CzlvBkxIgJsJeGk5e
xGee5PZ+OHVJQqnLDL/MFEQNqXYaSl+RoA5LepqwBTNXJQBLEc5IMgTQj/t+
uIpwtoIVj2XhrA57bfZGiXizNyjuDYqLZSSDu67MDbx5OHMD7Ko4lL0lMshl
gNW2H+jeIn2pa6rP9pr0MGy03fD2O5a10hnXMwJaq1psVLVYaY1csqzF3wBp
OX9ljQ2aGssZAaR1/FA769POamu/ytm3lbOlRc6egLOvwdnjczjLk6h4dJVq
r2VzDwW+p1W1zzctKK8KXHXhk5+o+383WHbb3TLzJTmWGmbzxN7xdcRC2HvU
UQDFxt43l7FOAPug47+BWM0sid3OgNkdprLS2F0MnJ1hrKmquq6WMTC2nCky
9gUY+yKMfUkOoLLS2MoCY6sKKmvNo6uldpaxG2HsJhi7WRqf3gJjt0rTom34
R4eyjv8FxsLZ53dJy+LdIHYPmbWRbTPItjOEdul+6Vh2AMhWSufyPLJdBtlu
htCubZCedY0K2d48spxsbWpD3Sey/UBWZWunQnZAIYvs6JFBVNZBhayGdmg3
X5RjaA876zCQHdbIgliXuNBZLWRHmAp2VjDLUzwP+C1kxVPF8Cp4IJYH7ABZ
by3DPVYglrxyj5WvIYEkQSyTArAp8Tel8XPcnHGSWEjtb81JgGkbNcIaZTvG
JdgxAUw7J530Fc8NdU8jByXUY+VQXtm+wwpZENl/FMsAN/7D2PAPDx7XtnLj
n8BCpeHXJIKSitAz1wksI7wmaAQb/hE38xZk1ciWSNR7yilRH7b8o34erBrF
Rn80oIJ3jwZ4sGo0eBp5TyeEnhoNsadGAWw0bOUsHo6ohcepRqMfIB9awQOx
c/jgcW74R6FqNKHCzzDBnhpJXkAuMnwseVE9dkkiKRU+lrpEcoFsOI3aGk6j
tgJaxe1VCWVU+LsoQ25DoDWow8KfvcblOjpuligGsjcAbUFy6k/l7Tx6i393
3nLz1ggXF+UFt/jvBXnnwdoboJa5zuBXfppe9+Mu3FX24n8xhwtA1/F9i12q
q1LobkeBu222u6bfhlW/labQectdfGCoC3BVwUVqC+Cdhe7wu0D3nVno7u5+
Ywa6R2Vny2GgayaxqtgmBjs8H5Va2/ktLdbpAMT3e3NMYU3D3ZEfJMzY0fWN
ORuuodfBkwZ+j5/HPL13WvSqg6/uVlcb/Vp6OSm43/EXdrvd8nPmQUXvNgYN
16YX2Ql+d/7m8QJ6nwC7C0mvqrZPOf57nt7fWfSy3j4Lep+TijufB72LZX8R
vUtA7ytS9cBS0LtMqh9aLvsf0xW3HBW3FhWX/NaB33rwWw9+G8BvAypuIypu
IypuEypuEypuMyou6W0poLdV0btX2l4qBb3gd0m5TW/HLHqrpGtlNeitAbu1
Nr09ml6Ot9Y38TXUNjRL38YWwNtKfKVf0av5Hdjaif/f27pYaSHvoC1vrwxB
3iEtL9wdkGHY66S90NtVOgx1LXlHoK7bklfc+xmfLa+HqQoqdUMcAdSEEVte
uBsVH+311aPfgl4e/AR4/Y1EV8ELd9Pa3kBL1kl28WUR3iDgDbYzRFfBC3cn
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
jOziyREju3lyBGV1K1mR0gHxoPh6FK2aV+8+nhwBXPFcH2j12bR6wapFq18C
NQGER44BV44SQGtQ0RqxaQ01MnHIyiSIq4QBLHpuSwrvY/EaaWOyoBXpyFFX
iXYyY7CVGecus+4J/Pj3TLLdalxB67TE0Xzj/YwW1klc8ZwEeE0MMcckMcwc
B6taWCdxZT10v4a8zhAlD6/blQSvSS/zJnDVwvKp/pOSYgLc04YVS/Btp8J1
PnGFrcxpnQgvKwNoS5Sv8+ir0VUJi7fF1cLjx1KJD2gsw3tJDa0C1uQ8nppW
C8e9qcwFastobNV6mdDmscWTR6/g1iiqH2wFthQ1SVET4xA1MX4DrE5At7hq
rvHJmxLT4XEbk3AxOvkp6+7Up7wFZHkPK6n9dJ6EeCvIWwHe8k/glm8Ct7xc
PBOf8rqWE5+qXjtiovosnB0eK3CWu+jALL7ogZzpszpOVWj/VXqBbY+Btjut
6qyCtrMA2nYbWtNnY+yzF2YrG/wwr6zv/SJl9ytl34ayp2xl9yhlT0DZ11SR
3dVmimwjimx1crDL/9GafI+1rkXDZvp3c+xJMz1281fuSfu2OcDhF/+zPbaY
2nssagEtud2kRgxzU/uAlvY7kPZBSPuQkfZhKPsI8qiW9jeUFrltAaXFhyy/
faHjVkgLbX/3lJJ2/yxpn5Oqu5+HtIshLbS970VIC20feFlJW2ekrX58uex8
dhlfyEy2Ll4GaVfPkrbl6Y2QdpO0LtoMabdAWmj7/DZIuz0vLWpsp5J2j3Qt
2Qtptbbd0JbS9hRI26ukrZS+1VWQFtqurYG0tUraAUvaDZa0TTK0uRnSKm1l
GD0W0rK3bu/Af3LXjk4l7YiSFtndI270WLeSVmvrKUWP9ZTxBAkvoPVqaMGs
S3zosRpat/iBrb+SJ0iAWu4My0MrwVqkLmRDG6qPoK42cMZgORtuYhIwlklS
WfiakgicjbQxnDFAWfxsd+R46EEBsjGU2Fg3Y5j9nmI2zhQzK4kB5jCIZY6A
2COa2uGjitrkMPeiJYltcoQX9k6OvJa31sOckJTnBIxij035eCBZyvcWgGVO
KmB5gC6YhbKnJI0mm6a26dA7WMLvgqg0mE1HrLwn6SivQ5NW2qZjZ5D3rZRI
Os4LJaTjH0g6YeVDSScJbjp5DgvLbDrNi3Wl0xcknbFyUdJZMpvOXsKSu4wP
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
5J0+vFp0gg7PmRPAHK77ek6C195TeKuPV5X7+s6Ir9/O+3h6QC0f0PGzlkL8
HiJuCDeMuzkoAeP8DJ5ztFz8jPcTCwtvC+0H5n6fnfPi93NTiN/PHdX+wAXb
c36awEV8liDv4+kLXhZfKDvcE0LicYQJf45cYfhc+Arsj7CYe1HIPdF08og9
D3ixa8iXDA94ynkPjKf17jhlxYovfxyN2RVHEx+Mo5M7+dYAEQfneeScZ46h
eF/ilvQmbnHrH1Yaf8vormKRd16/DuThuzLeovE8UxlTyhvp29nd23gys5Xz
dF3W1fiFqhvRHYp0XdbzpD6Ytpzb/fxXHf9FW+77Dstd2Zafz7W8j5afu8Py
D9HU9YxlHyzf23padjejpTeekB31o7Kt9phsqR6STZVJ2VCOll6Kll6sW/rK
A32/Gpvxf0mPt3+g8X4rt7Kroct96rn/oAbd2ffYG6uTa7gfMROVR9OdPAtu
i3LjRxza/d1uT8xye5JFtB3TwPZTGbaR7YbuHaB7p2nka5+dBrbfANszZM/j
L8leQ/c+0L3f0H3gqVfl4NOa7kOg+/Bzb97B9mywDbpfmgO2Qfcrc8E26J4+
X4oM3cWKbrBtGnmpaeRlppGXo5FXoJFXvL1aKuesAdtrpWruOrANuudvANug
G428ZuFmzfa7GbbrliDvabrr0cgPLtRzluIlWxTbjSuRVfulafUBRNPdfBfb
R6R149Ecttu2FKfZbmdIt2G7Yweys5JwS6di29C9pxYNfG8dLzvcVy/d+5Ta
MJtpkp6DzRbZxl9qbxrtNoV2H9DuO8J00myI3SX9ULu/iOmxyDaELuELrRix
4fWAOMuc6HPlgxa9ZtGD1oNKa24Ogdc0GVq7avywmgmoJu4m2e76kEWtLVKN
DyTWniYmJp5mJg6ts8m+V3HtVRkSbzszDLCz1f6eEtunclx83cwJgM1wkuLr
PYmfUGA30GZO6/SfVnj7VWC3f4A7RvwDH4jfyZzVGTyLT+Ef5A5sv+tD5COG
j9wf4x2ec1x42hGGk3DFeB75ptrnFdr4EDZwf/AiHgZ5utEfuoQorPk7DKGQ
+8Kf4y12cF9ELTzDCKnFC58R4h39ggsquTd2De/UNsdhdfw6wyOcLTRyg+Gj
BIB2JcDnYAJ8DiagtDOB0j3ApT9xaxyVziPQ+HZJKJNvcW82TdbRvdsiyXlG
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
6MikKQD9BSl8+kXV44uAevFzQP35aQB9hpS+oFEvA+rlRB09vmLaTIAO1GfM
kirV4zXqNQb1WoU6QDc9vt70+AbT4xtNj2+aD9QXrAToGvUWg3qrQb2NqC/d
CNCB+vLNAB2or9wqnUC9k6ijx3et2YnoHq9B3yM9G/YiGvVe9HiC3oce37fl
sEK9f1s+QNeoDxB1gO4k6KrHF8vgnhJwXkrSxbUP2W9QB+jugwxQP1RtQfMa
xx/Ac226V3muTfehyNNzDuqLNu2B5bbnrbC8jZ5bBB1dKAjSNeddivMQOA9V
Mb2mxvdJGFU+XMsMsMVzVBNJa65Fj0L0aJOHmsNyr/IcILT4OWRPax6UOESP
Q3Rbc5Z1tPgE0xVjgHd3nJbzRr8s8cleJiXJPmYIoBvbxynXUwxcT7HIpxTs
Lt7wF7LLkJvhDX+HPKfyCDtB5w1/wXoa9WEmwBv+DhP24SBfumMYsA+HVBTo
3EcD1qG6nU+AO/fRgHh+fOwzOaaD547Fz+Pjj0H5Ywk7F+XY/0fXfUfHdaZn
gsfeIiW722Fs99jHszs77R3P7M7au/uPQ0flnNWtLLVyjhRFiZQoUZkKFHOO
YCYIIhA55xwrZxQSk0gxZ4U+7z7P+323AoXROc93gEKBBCDw9z33rVu3Bnmm
vG+Qsxrf0EHkkBuP+Ib5VFYfurvPmw7u7eVjrz7fEVLvZhqV99B3/PUBnivi
DR5HTmQS4tk0XlLvDRvq8a2ztw9HeHmZYVA/lJ0oN4Ch6FkVHz9ZQj8Q0+X8
NEUe5EPx/vgF6YuzqmNFf+fSE6fiMJ/ka5F30vir/fhl03bfwQafiYf+o8Rz
5pMG/6dTYY/Y8U2O9hzdWO79p1zyp+TekH8p90d1fKPFHdwX9oL6HlDfDeq7
Dv5Pi/vmZlDfZIr7Bhb3OhT32risqeZ8PizLy4OypMQnC/cMype7emX+tk75
eHPbz59t/m95PzPcu89tci8v9ugUj79a7rMmOunLi12rtz3//hIdzv9Wxza5
9f1aUH9dVn2/AdTfaKm/yVJ/c5p61vePr78zTf2nN9yl1H95dYb7heB+Ebhf
nFPf75Zl4H55Fvc/pv5eS/19sg7cr7/7Ae3vG37/sGy8x3C/Cdznk/sHnwD1
T4L6p7S/bwX32yz329nfwf2Op14G9eD+mVeV+gL09wL0993o77vR3wtfehPU
g/tXZssey32R5b7Ycl/yBrif9T6oB/dvfQjqwf2cj0H9J9rfy21/N9R/IZXz
vgTzhvsq9Pcq9ndS/9ES5b7mk6Wg3nBfS+5Nf3doPV/RFNrXL4D2X62TBlf7
RRsdUp/3N9IE7BV6be9bpHn5VsRA37KS2UHrVfpWBu2d0rep9Mj6PQiv7c6r
CH86+z1eOoDSb9prtN9cJp1o74Z65R4lfVuVQ+jzLpduNPfuHWS+1mVeegoY
Tm0gPf9xw/leZg+nNpCeV+2C833FbVCeaYfx7dJf2gHX93ZiZ1HmUdwHypke
GN9jnbfWV/XJIPr7YDUz4BB69vUs6ofqGC+M9zqE3qHyeT8h8zLMNAVt0tZD
eiYi3tYI7GuNQsE29Hhve9xR5adTefDuZgTE88waQu8h9OIzIdU9PMfGB+p9
vW4mQPyEob7fpR56D+xzqVfiD+A78Q8eFP+QG0v9sKF+GnX30HXc2/cNFr8u
vPyvL3AUOeYGNwT5dFbLutLuuLSfnGZ890ZOO6SdyxkgH0URHqbmIJ2wx84i
5xhumzG050E2duAO4eN8K35hOnHPuM65fPwicNfwNyF+0SPdeBOw40bgnmn3
HgqPUh/LQp2TGUDfggOFFm32zTq4aYpk8c4T7mE7eowZ0J+B8GndpYbR4Uxa
d6n0nTSDGc0JM5z5eRbux7Jwd3v8YfT4ry/BPbvHTwL3CeCOHk/cG1PAHT2+
PtPjV1VFZAVgX1rqk0VFQ7KgoE8+294ln2xpezw67Yq//nGNp9SPTdHV/yLH
9ZzLjxnX/2PLnF9dIy/DdY5l3vjF1ajw12RV+OtkrnXdVHi4/tss16/IuJ5l
On78X1x1W96jtsLfbk03YxnX9SVwfanrupr+O1kB11fC9VXW9SlNv+t+rfAb
4PpGun7vIzD9DzD9MVT4x2UzXN+irj8N05+B6XD9sedgOiv8i7LjyZdkp3V9
Fyp8gXV9t3W90Lq+B67vgetFr86B6W9L8Yx3YPpcKZn5rppeStNthd9rK3yZ
rfDltsJXsMLTdFT4Sq3wC2A6XP9woVTD9Wpb4dV0VPhauF47H65/tkLqPl+J
mArvot7AEPaF66Vx0QbEVHijupG9edkWh6zn/bW0oMFnUN8B0HemUW9jCPs6
U+HbAXv7hiKkWDpQ4Ze9/5nMfm2mNKzd7UD0Mk7ct5RLF0zXbKsk61C9Sroh
u0PZOXG3rvfs4is0QXY+J2Z3g/Siw/cWMk2Owu6RPlT4vmKmVes7z6jpN6xD
daZTXR8o63IIu0PVcTgwCNMHK+l5junAfED7+xBoB961Qw5Np+VeMt7gk2GN
H5z7LemW9eagku5tDsG5lrBjQW/jk54gOkBn4iba3n0dCSydSZIN1n1dblLg
PGVY73FZh729Yy7rvK2P59b4wbq/380+8Q/w3Br/AB9x9Q/uRw4wfG/oIJZh
nlvjH/5a/F4N7+zluTV+32HkiBvc4Ofg3e8/Kn7lnc938rG/+4LHPBQeC2DH
QUPopPjC2eHw3Rc5NY3Icx+InkbOMNwHtLjDe3LP8L3YWegfOzdNvYf+ccgf
Py+D8fN8hCOu5sPogQSW/gSh7k9clD4T/o9PXMRvhC7xi9PS8Kv7+M3DFjBN
Rzodmbj2x4z9DtnPET9yifiXS30oI75RPy0+H5L188rHZoRzUtW34ucZ8v+L
lA0ft/N4kn8U5H/zY/LBfQG43wXud3buzyHfjG7GJJ9dHuRvaEjKeu3yHNtE
ZGVFSJaX+WVx8bB8tbtfvtjZLZ9ubc8vGDiX9x+mHts8McUA3nr/QO5WoDXf
vEzrP8nzPIfyX69Ah78KHR7e//Ia7fBztMPD+19frx1+nnb4Gy/p8Ddb6+/Q
7k7vP7/qNmqfZX3Ge2P9nbIky/tl8J4dfgW91w5vvF8N72n9mjvutdbfh58+
tM+7EtY/COvh/T0PyyZ4n68d/jFY/zisf0I7/NZHMt5vt97vgPc7n4L3T78M
69nh4f1zM2A9vH9hJqyH9y/NgvXw/pW3YP1sYz06fDE6fAk6fAk6fKn1fi86
/F50+DJ0+DLb4cvfgfdz50uF9b7Sdvgq1/oPaD3y0SKp+XgxYrzPsd56X//F
KlhvvLfWc96+cD1aNr1vWrwR1hvvm9V69V5alm91qD26Cb1vpfWrdqr3bWt2
ZVm/W9rhvWt9B7MR3m8q0RJfsHAtzH9Dyldsla4tZUh5GvtuxmAP6qu1yPfs
ZGqJPahn6vGveDdnNtZ66dvDNAP7Zhd76S9hOLMB90Qf2A8wZZ3EHtZ3Ge8H
K3occu/QenZJSD/EQHqEyA+SHDR4tvfhOr6M9jD7O6R3yDz+dELvbWKCAJ4B
9C050PsAPRwH9L52N3EQzyTgu4LfyZMofV1J13re1s3zavyw3t/jZkz8vTyv
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
VT5D/IhLvKnvLXESf8bU99jpLONPqvCcup/gZbrV+GM6oqmC77nGZ9f3g6jv
HM/sk0L63j0uu+h7x6hsaxuRLS3wvSkqG+H7+tqgrK32yepKPpTaJ59tbVTf
9clJf5Ojes7k3ZwJ+ffujIa3XzX22Evyxi9+K2/98gp5G7K/68qupT1XdqP6
jSjtU8h+jZF9yTWqOr7/ZdfenveYkf1S1ZG12toh+62/S7f2jZB9kyu7qn4/
VP9xa1fVH8rIXgDZd6vsT0ghZX/yKaj+NFRna39Oip99Xkqs7KVW9r0vvwrV
X9PWXv4aZJ8B2V+fJZUq+2yoblp7tW3tNXMg+9vvSW2W7HVW9vp5kP39T6A6
ZP9wvjRa2Zus7M2Uff5X0vLZQqhuZG+F7K1fQvYFS6UtS3ZX9Q6Gsi9dA9Uz
sruqdzOUfXU+VFfZtbb3rmNUdv6ub9iBNquyo7b3u7Jv3i0DkN2obmQf3Fbs
kHU+x39HKUzfq7V9eBdjZYfqXqaQL8oE1/lMoqIapBas16Zp95cyvMoXYMc/
qwBYDyjrGdqDla1IGyo70y6Vm8y1CFrxdxnXje3hOqYHsjOczYB3oNHYj6Vp
wFHXp9N1ibYww0Cd4VgGrGPHYV+PMZDdBLp3MiHQHtLSHu9mIqDdKO8QeMLO
yQx4l0Q/k2TA3wAnM4nBEQKvyDsEnrdZ3pM6a08CeIjqnYDszCTjkHeP6j5N
ZR/RHJSR0EEHC8cyI+FDyNduPDIS4QOrI5EjMhI9QuEJvEPfuRxV049Sdzce
4s6bEyeou81Jh75z4RkyydQp6q7CO1xxd/DO9awk1XWNh7DzmxsH8ejpiL7H
FcBLfELDTW/iAm6aYGeOT14E9wzHM1ih/z409ug+Yz703/f99LT5eYo+8oMb
bgA/TPuR+cP7XPO/N+Y7JN/t8xOs8umRzTjq/LhW+jzFHp/QPXaR4muxV/bd
Pp+6kPd/X4L9OYu9dnmLvYU+eioL+xOmzIeO21kNsTfQVwL6Ct8RYH8Y2H9t
sQf0AwekqG8/yvyk7O6ekF1dY7IT0G9vH5GtrQnZ3BSTTQ1h2VAXlHU1fpR5
ryzf2y9fbGv6+bPV01+dYgxvy/xtmTlNeoRj2M95FW59mLXu3kdkFuif/csr
0/RzLO/Oaz654npT6C+h37B/sy30tzh0P+93mT5/7e1Z6t+hs5pMn7/LqI+s
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
rfrx797oqH6Sqv8Aqt9zO0SH6j/Sqte7VD+zhupnjepNRvVmo3qLS/U2Uf2X
qt2o3mFU7zSqdxnVu6n6c1D9+SdVj1G916jeR9VfgeqvPgvRteoDRvVBqk7R
N0J0W/VNr6lho/rI2xssks5bFtiob94E0AV1qfvjW5Ft76oJoD6xfbNF0Xm3
Mpq+S5s+JZ4b0/fu5Ont+3bxLQX371bTMF17rk33H9pvEXS+fThI15wjxw6r
2WPkHDlx1NT9Y2ru5HGLnvONAyH6vGiO1NdK2w+cZozoDSI6/G5swNMXzjaS
c2h+VgWbmmB5k/HcmA7PQ62tFkHnWY7t7RQdoHeocEcnOGe6LJpuqUh3j0XN
LVLOfgnIFyWc7IByi46z3Q9j64iC8egQMwrEmTE4PqZ7/ig8j9HzGFs+KCfh
PhI+MS2MxyV+FZ/iWTPxqRn8dHEQfmLvAfXogw+p4bYuUk7ILTpOPSn5DLOg
M7sghT9o0XI8IQHJE/N2IioR4BWviQCPryYWFpGoThC6J4IxLCHW/QRqfiJs
J4kvichC0xOLKSRdTpRvaBg3a9aQztueAXSLotcQdHwyUbDIOHczVHwqbkLS
SXksBdQlWvMlwK4RXybnK/ivDCt9JLNCzhkO2Gi6DTtPm5dOr+ysc4D3Evga
Ao/mkJGb4qC8z6C8z8gLAj/n/kb3lQrdk8tVui9p3Wuge8mtuw17VCY6Bbnr
Wd40dqN6SFTnQVde5lSNejtQb5uJAfYq1H1AfQqoTxL1BUG9zkF9Wh2vQn2/
jXpTj9pa3/bQUOZ/0ajLwVb9fuT2SL7i/mUuyp2Drfo+Z/du2nrFlz6Q8per
Kf/CxSjnqyl/B5S/a1N+JSj/6pddoxtQfs1XTTm/CuW8inJh/BrDOHLbN005
v9aU8+vUMRflJ+66SVN+960o52XK6xzKv6NOuyhv+Bko//ndYByU/xKUP/BD
MA7KH7oXjIPyR+4D46D8sZ+CcVD+K1D+BCj/NSh/8kEwDsp/+zAYB+W/exSM
a8q7XZT3kPIXfgPGQflLT6k+F+X9hvKB10H5+hfUoItyzfgrahiUD5Pyt14H
40K5lHPtuLZ8zFg+vuVt5B0p5xO0fLtYriZBuUXK0WGJ+dTuMua+vTuQnbqc
798FyIH5AY25H5j7DwnmUs5njhwoa37sECQ/bJFydnJgPneCkCOnjks3n69l
OL+B5aCammvJkTNa84UG5gwxB+NMI7paE+o5ILeoONFubaHhILxV9/L2NhVu
RzcPd6Cbg3D8AOGuLhVBL490Mz1QvEf38t5e0t3bZ1FyIj7ArjgwKI08OjDE
GcMgD4iykINx/KBEPCYZh+HMBBhnJiH5pBTzOEWPs5kDctqsKTeZAeUczwN0
/GpttadlnAPSdSeXLh5QCQkNT8zyfWkTs0EQzoQYLx23BPEaIm4IF8YtGs4l
JnzHCLkdLx330nAP15QhnCMbAE7So8J4OTFinohl8a3iYngeSyJfQ8P5syYL
SJHhGCqpS3lJ/Eb4WKrEhYzH0ktQnOEonitozywjKwxH9hmRHfXcprxGKPcq
WKmCOhzRZIl5lnAH8CBEZzzl3u6wnjlXybolc3seq12h7ZKp1ApH91gmeVwY
tmMLH08sUXfijpSqeC8K77waKlpAeS8I8Zza8+RIAT6cFeB7se/0BNOmumvh
O+cTUN4IP1sWvgXCa+UjqO5hVHdb+HkIPyvCnxThp0T4IyL8iAi/V2q7CH/e
P3z1Vru2VxySNbX9f1S6Lp/+t0r/xXp9g+OHbh696XpY/5lV1r8k1n9erH/t
A6x/64tfVG9ftrb1Moj5Giv7lajsldbvuY7Ofx2VfbX1h2D94TWsP25b/72b
UNlvdqyvdVlffy8rO6y/77twHtb/VFvfaKw/67K+2VjfYqxvNda3GevbXdZ3
Guu7bOufgfXPaut7jPW9xvo+Wv8yrH/ladVvrB8w1g/S+g0vqqGNLyHa+mFa
v0lbP2Jb/84GNSrWbxTrxzZr68dt69HZJxhj/eQOsR7Sv6+mdm1BjPV03rZ+
3041vY/OIwfEel6DenCv58/E+pnD+xFj/dGDavYonRfrpbXPnWCOauhPHlfz
wN5AD+alulsqUF/Lf7TifJ1aOFPPmUvDaV7P2HhGBWF98CyjrYe4bO0hBq09
1NJSIX64jdqXxff8F2ntEaYK/cUephfcM30Qv0/3935mQEUZ0B8l/YPMMNwf
1i1+GP7Hhkct0s/uzgI/xnchjIP9+DgD9icYH7jX8nsJviXaf1glUN8T0zpz
eFHw2EMPqZP7D6mEfx7Oo8YDfG39Opf1xvt5XskK8ClxIEz1VTLAk2uSC4tY
ghzVJ4MxlQxJ8OSkdPdkOI4kdCJwP8nunlzkWe8Cv2AvsaS8r6P31L6cOE+D
T7C5JxJCf0HQ94r4WFOwH9YjurWz0qeWhHoTug9VAf2HysoTeZ0snI9wCWfP
kflq7L1ca4h9Da1Hc89q4gV3jmbOCewcuadXxHXEI80dj02lVszsnTcrmJQT
8XWBX7KJZ4Evef7FJXxRAuARm/e8GkR3H4jkhPd+8N5H3kNl3rvBe1fAxfuc
5l1KPHn3k/eI5t1H3oPC+2mHd7+L9wnwPqYOdZH3QeF9Z2MXeG897xNfuNZz
xxrj9r+u4L3iaOx/rzwaKyN4/d5Ud5730XvvMrx/Dryft4r3V128b3Dxvmkt
3mUic4XaYvP+9SrerwXv133N1HjNOycyB9bg/Qh4P1rF+4m7yryfuvsWh/c6
8n7vnTKROe3ivcHF+1nDe9MavLca3tsM7+2G944P4L3b8N7zHHh//tegXfPe
5+K9n7y/+gxo17wPVvP+xstqmDG8j7xV5n30nQ0Wbff8sRozuo+/X9Zdy651
n7R1p+y27ru3Kt/ubfxHsGc7mj11n3bp7ofufjR53eL3qhlbd8g+y1B3I/vc
ccaW/aiaP3nMIu2ejzu4B4B7oP4UbYfstWrhNGUX3XWLbzwN2c9YpJ2n0DQ1
0naoftbILrpbpB2Mt7VaRJ1nsHe0q0hHBzzvMKYb12H6Yne3RdRZ4HtZ4Pt4
IgxAj/b3G8wFdOnwQ2zuAD02xIzAcmYUnI/qNj86Jm0+TtnjYxMWUWeH5wWs
xnSVmJxWialpSDnFe5ElfH5khuFH07N4pZHwz6k5fN/XX3hJvf7iS5RdN/nZ
gG7yIHguCILnOZJJzofhuB2YvsCRDEwn3cFFwm7HS9e9BJ3Ua84ZPj/Cy1eT
i0nCrhNN4UnRNJYY71KQhOPJuBN8CZt8IqFNx5Jc3eTheo1BPZ4G75py1vm0
bvLLKpaR8LHMMpcVqfOo8lkJP8qu1FQKb1F4Lujvtutex3V8yRzYB+7IOV3f
eQaAKfF+Jyu29XIGTtn5ZRHe6fG8vkkjX5IOX+7xRR5i5Yn9ArwgnyfyrPA5
z3+q8L0XvvcspGC8y3cxPo4Kb3yfEd8tAu/5ExBv8x5weK8dJu8+4f2Yi/cD
5L0VvDd0qi21LZ98onbojvLMvVr3/2MN+P917YOpn5GHf1iF+/kad+ntwP0i
jft6xMb9zUuBO2B/60tl3N8D7pu/cnkZdxm3f0Vw3wncdW+/Cr39a2rvGrgf
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
9AST5kgGq1dEh/IZ2A7LTUxxh+RgXjp7PLeiYjrcTnPS4/FxFJwjfEVFyRdp
OmD3Enbs7DlV1t1L3S3iLgdZzxF2xqN197p1l/KuXbfH8GmQnl6WMfyyuM7O
zjf91qiXaLpEq16k6h4OZQrs63nPpzXnQnpWSBfOhfQ0+jo5T6Kva867wLkm
3cX5zCJIL3N+Vjifd3E+rU65OD/aMwrOh9VBcL6nuUdtr2+tOzVkn9hecd2T
4fy/r3Eg9V8qJ+3C+fny2K9u9t96PTj/7Jql/TXh/CLhfKOL87eqON8Mzt9f
i/NrNOe7wfkecL73+q9JYa/mnEOYw2twfhycn7A5/x44//6NKOzk/GbhvN7h
/A4U9jLnjcL5XcJ5k835g/eAcnD+8I9AOTh/9MegHJw/fj8oB+dP/AyUg/Mn
wflvyPkDH8h5r+G87wVw/uKTqn8NzgdfA+evP6uGhHNkw/Pg/AXhfOTNMuej
5Pzt19SYi/Px98qcT5DzLZrzScP51PZ3EOFc+XZuhuWbHc+n95Q99+/bjuww
hX2nmrE9p+W250f2qTl4PncUOSaeszAdP8SbtNNzWB5gTonn0PyYWkBpX6g7
YRFz/OsJgvOgzXlDnQqhr4caGc5hgDn+FcPyj1VaDscjTFszKYfkLdLXFzuY
Np4E09nOpo66Hu3mFCaKuh6Vqt4tVT0mU5hYX69FzlnQ+/HDUPK4ZBCQM0Ng
nJGuPjIiY5hRlRhlxmA5Mw7OtemUDH09yYB0xEvRWdf5dn/C+TQzo0VP+XnK
TGpmFplj6O4siztFT81J8Nj6l1626DmFDQSJus5C2FLphbBXpQH6h7AuqnSI
ieqEGd3YvWSd/ZxXtBrNGf6Kuq7HUuW6Hte+e8m6RdUFdS4UPZWC7RKNegGN
Pl0k6CWLlNNzDtUTWWieXWY80ss9wrlgHhfIsdYYzWNactHcW6k5IRfStebY
8fM8NQamk3Q7pP1cFe1eQ7tmfYWo8xVnplzZef2qL71sV3YzkVnyaN0/DN1L
Lt2LRvYC+nrBsZ1nu+c8n3RgHwDq/W7Yg0mNO2EPVMLePrsI3N2wBx3Yz4zN
umCfEtiPV8Pe1KW21TU/FP7In691CPUTLtjl9mH/vPZo/QJ5+FaX6J+D6Oc5
or/qEn2DLfqll0g5f+tLEP0yiH75l9R7btG/WhZ9B0TfCdF3rSH6foh+YA3R
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
zni8ju9ex3e8NCutyPBkxfadEeK9JF5KuRzwXBHXER7CYRmn6jVQ3SU6D9HO
ynWvM9miA7pp5gVp5uI5mnmOpLOZZ9nMeXr/GCAn5qOAfIRvLjK8mPT8JSxP
rGl5TyAMy0NVls+pVt+sY/nZcZ/L8lFYPqiOdfWpw+1dat/ZlrqW6Zm1huDG
8r+rLN+uT606oHm1HpvcvHD7teq5Cz7z+2H/EmG/ZE3Ydzqwf/k/gP1r6vCt
VbB/azXsdYC9vgr2BhfsZwX2Ww3st2nYf34n+ngZ9nYDe4cL9q7HAfuvfvQB
sP9MYO9/GrA/8wBQB+zPPQTUNexDBvbhlx4X2Ecc2J8E6sB9/W+B+lMC+3g1
7G89ryYN7FMu2H2by7BPb0G2rld+F+wzO2zYNwF1wL5bwz7ngn3eBXsApTxw
kNmmFgD7wmGOTcA6uA0S9mMa9hBgD50Q2KWQh5lTB3hcqfYglI9o2U0jPwLV
j/KKoTPHoDxlj4rqyFkte6yJqSXsIJ2pt+g62/gZXkEE1hPtJF1YF9X5Dxud
PNnNtLCH9/AuL8neNqCO9LWbPq47eXqA6bLIuudjFbBnhhkHdojerys5VM+O
cXwC11nFh3katmE9B9ZzUwxY92nW2cYnaLvj+SQ9V3mJD5TzrgD52WlLNIeE
836KLqqzlfMYJ00vLDA8Cb0QZEkvoJwXQsyCTpglvRAO8nMo6IWIHfFd2y6s
l3t6IbaIh2NRi8jzc/EYgTe8xy27sScTrsaOpPhW1QCen0ulCbwrdL6QyeCL
gTxlz9J4cV4KfA2R95J3Gg8P84Vq42tkhe/FkuiOyEdLlgM8q3wJNV6HZw9x
1lKmPrUk4S1klmB7QhbjvadGD8xLK3a8xN9b6b0cC2Wdt6kPylx+wVR6ms8+
v8RjodyGQD6KfInqI0VenlSUy5MK0uGn5cY3UN/zd3BfzEeypshnKD+KfNrY
L+4jSdKPIk/44y74FwF/RODvduAPAP75KvinDfyT6vTwuKobGFEnewcAf686
3Nap9jY2P1T6r/+1PCL/tKd6HO6MZz5V2fTlVMZvyGN3n/dX939LPSvWf+73
WH+xeu+yD7L+clh/hVi/F9bvg/Uye4H1B2H9IVh/+JavqSOw/iisP3b71eo4
rD8B6zl7ObWG9afN/MW2vtEc66T1TS7rW35Wtr7tl9+usv77qpPWP6at7zbW
9xjre431fWL9z9e2/gVY/yKsfwnWvwzrX/kVrIf3r/5ajRrrx4z14xvL1k8Y
6ydp/dsvwPmy9T7b+vdfU9PGej+t36atn7Gtp/Mu6+f2aOvn975nEXrPfxPq
AwfK1C8ccqiX/h5kDPUhF/VhUK+ZF+pVpPYgiD+oqa8/rBYZTb0U+GgDc9yi
82jJlF4rjzRr6eMtTL0p8LrEJ9qZBovU82SUzrMqyXQ1ubWXCp/qabVIPfYU
G/t0P+NgD+W7dI0f6laZoR6L1Ft0nnc9gfJZyQCUHyhLz5aJ/p5jBPoRi9LT
dW09qYfx49Lf84yft/jK+yctUm+J839E58G8Hb9gXwD2hQCxLwRmLTpPVhfm
6byJSM8nhHi3RkhP58V69veQl8CztkewJ9P1YsxOVBXjTEydOXFCRunTI7wR
fDHBMxiLqO/FpISPJZNYUizyRbvEpyVe0l5D1fmjob8Xsu4Q9kIux4WTGenx
eYaTGanxIJ7Ol6S8w/oidc9p2UX3dVw/RNI5jxHUVxjOx8T09NIKPJdwRrME
yZNcEmI8ZCfsyApT45iOhiFfzjYf0eFrSxfxxeUq4j/sIn5Jokc1JVt4Fvui
U+wLIryfV9ZOp/OevwfxOQF+ygX8xBrAj64B/GA4BuCjVcAHVdfsQhXwM6pl
yl8F/JiqHRhWJ3r61dHOHnWorUPtbTh73q3PvLDmnb4+VWF9xeHQT65xOPRa
eezn6pnz/129eCGdPw/Onw/nL4DzF8L5z8P5i+D8F9S7Lue3uJzfcdVlZee/
4Xb+yv/Y+Tsrna+F83V3Id+/ztXnb3AOg2rjb3YNapCf0vnbVavL+fYHviPO
d9D5R+D8o3errgrn7xXne43zfcb5fnH+F2rAOD9onB8yzg8b50fo/KtPwHjt
/Fi18288DeO185PVzr/7kvK5nJ+m81teU36X8zPby85r47Xzc8b5+b3iPJhH
9m9WARt6Im9Df3i7CgL64BHkqIY+dGy3ReX5PqF0/mTZ+UhthfMWkcfThPkz
R1WU0cxLm4+dZU5aRJ6XloB5TTyPhcZb6/lvF8wnqpi3KDwn6DS+WxufgvGp
HqS31bT5NpXu4wWmIN6i7xzoQveMhLqL8B4hnkfo0OWzjFbeIvHUnW9pl5sY
0rpPUEfbd5jlG6NhwD0/zWjUeWkpaIfsk6bIa+Hh5ByKfGGeF5Qa16k6ODey
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
UY/D9Hin8ThCj3cbj6Po1dG9G51e7QfGmzmVthxPH0QObXFr9QxTtc1PkPGn
NE6OjxmOE9XMbp/xuEI9VovreMgaInOLCR4n0ayTjYxt1s2HYTGPe0Bj/KVT
rUcl3UqLSzzuYGpRozvrWKjrOZj2WDzXwzSBYoZn9OAx0Ohv9dNhWmskJsRw
eBHGJynEOY1ibBu18ZhSoVDnmUlL8hTn1wblgE5DDMjk2CSk05DQWAUprqDC
fuW3gvxCXw0/JMZZNSCWeRO1mIV6Pq4a20TwoQm98E71/GyUMpskYxWEuUJR
xu9Dc55PxxVmxE+X+UkzCeLM+CzT83NJLdH8hNxbzLqh0O74OueReYmH4qxR
OFtZTDHtzRUA1pZcQYB9KjCSY3iEkx/nUOx3enKWPZkVmQOPMCRmrMj6pJEM
/vMDZCTtITmFxpxSkTn2YFU2Hs+iMs+SZICcsCDHAfJMEcj9sShAjpSAHATI
AYA8VQbkUYA8ApCHpG5oQGoG+gByD0DuAsgdcrCtRfY1NwLk2sGqrja7DVi8
k2ir8t8XG6yzDY/L7s0v9+lrN+zbcN5p8u5pP1CTP1CTT5EPz/oxTD7Vmnw6
TD5DPr8QJl98ts46vCZ/pSZf8AeYfDn68RWy/7gmX6MmHy0xuabE5HrH5Kdv
Qz8umNxcZPK9anKbNbldTX4IJj/smtxlTe5Wk5+Unt8+BZN/Lr1vP31ikz8o
mDzkNXm1MXnEmjzqmPwJTUY+fVvGP/udMXnduzJRMJk3s2xc7vuHgsmbV0rA
Y3Jwy2rX5JBr8lo1OewxOcJYk6N7CibH9m1CvgDJzGaizKMdB3n/IlGeAcoz
h5EqRZm3rUDlP3ZVTjBUuWY3TYbIe2RWVd7rtuQk03BAGzIf0Z1sOiSpJoqs
KivKWPG28gyeV+QMRM50MLUAudZFGRZ0N/iJMUsxz+DN9TVLVsMzeA7HrMO8
a9FaTIohcaeZcYwYkf3EmI24l0t6YzFDMCf6tRsT4wEH44LFfu3FUBAYz6MV
m4wBu/AY/kHmw+MyH2EmTKKMNmOCjA+LcdAxHwvA4oBjMkTmoMNxOaQ2W5/Z
k3lMTwccyjK3FU1tnk/GPLXZCF0hC2keBKk6sEdefOE5GRvsUY+N0fB5TsOf
WZnRnLNMiqnQ7mznHFZmP6864mBTzlQ6I475ORrN8FvgvI448HNozfhKKvQS
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
HIPNMj/YAluGWonoEEVWlYmOujzKcQdghshMF0TuYn3muAMwywIz2WvT5+K8
EOh3bQ4OlNhsNhkX1OZhNXmE9rFHR5kxkxg3GSU27ifO+NuwPNtM4eU4Llbp
RMCjdLCCSrM/8y5zKzNc5kOeoLNOpqN28qHhqGOa5Zk7jTrxyLoxNn9DJJeA
zwk1Oh6dkpdefF7rNY2uIM/02Bidsiar0fOpClumF9IcgZg5yBKzz5jlj+bo
cWbBnUYL32ddqG+SJC9o+HW1wCMeVmNNXJOhyLzFMWNHHNNo8rE8IY7xaGFU
b6uM5FKqcUFkTtjhMb5SgnOzEHkWICeU46l03HBMipXjaXJcrHFEhqHxkKtx
EBoHymg8Lp3oyB2TI9B4WFrHBqV5pF8ah3qlYaBb6vo6paanXY51tcqRjiap
gsa7qg+efO+rj5QbQ9vC/JdlfukvisfQ6vLT+toVMPn7OoKmyavP+pE1+VSY
fJp87jF5k2vyuTD5PNfkHV6Tby41+bISk68sMvmYmnxNscmPXyf1TzgmLy0y
udljcutzt8PkO6TtxbukvYzJXb/6aRmTH1WT+6zJ/dbkgXd+DpOflsH3noHJ
z8qQNXnYmjxCk1eVN3mcJq8tNnnSmIwvoql1b/P7+PrfScAxeVPB5NDm5fxC
+/IDtmTH5K9XScSYTJIlyhiU+VW7c63v7wzKuz+VaQflvZ/LjIPy/g0Sd1A+
aFBOHPqigDJBLqAMkr8GyFsLKNdsl1TNDp9R+VuqcrqOIqvKQBlp3CsZsJxp
2udh+Tsg2cNym51rtFdJFoU523HE0NzJHNOZRjVRruH5uh5bl3vr4DJs7mMa
ONBoxB/C+YECzfOGZpjMtMLkVmPzSFuBZrblTm3L6rI25oWJbj9VZltmZZ7q
w38ZK7IGKBdIDnlIDg+VkPwND8lIbAwYM+OQWGme5nBjZrKCELPQcqChDgfs
UAOozwZJcSFJnqumy5WOyTYcSKejdrghGb3weJ7MTdNltdnpz9k4PWZ3zhXi
sRkfuHLFMlV5ljJreXYq9Pw8fg6e55VnXHlJ4/UFUDlveDZGV7pGc/9wzu9C
XUmjK2k0u/KctmQ96kGVMxRZ5xjGZJKcVon1OHUKHGs4w8um8HVuMdZqbOqx
F+O4TKWI8YxiPJGcthjHZCwRg8dRj8ZhaBwq0XgKGnOXtyc04fsT6QqMQeNR
1bgNvdho3AeNe6R+oEtq+zqkuqcNGrdA40Y51Fo3eLil5vYyg2YrcUkb1k3B
Py8/aH5GX754ZdXl5wDjH8jKM38oq3XIfIqsPffH8qlifDowPmMxxtcA45+c
D4wvkB1LvRhf/J/GuNqL8WPlML5Bmn5+o4txyyKM7wTGd7kYdxZh/AAwflB6
LMa9ivFjwPjx34PxL4Dxc8AYIK94wcV49ENgvPpVGbMYjxcw9kPiN1BmJz/9
DSyGx5//FhK/BYffloDH4qC1OGQshsTLJfzlB67FEY/F0W3IdmNxzLX4G2rx
tGvxZ3DYtZhf6vs3+P7KtTjhWHzYWDxb9WXBYjpcZPE2OKwWQ2JmJxyGxfUM
pxeQmFW42GL8UQTFFYbiVoYPp862Heb4uDzFgPiY5CzGbMi1vr+AwkUSA+IG
mUdLnh9oNBwPnpBiSgyIPRrDr3EOMBYMxbYfezVGNQ30ORrTyeAA/v1ajW0o
sdU44tE4OnJijdldZyYKHTk+qR2ZLyemkIAGPLMeB/ENyYjsJKzzjIVUmCOM
CEcYUfZizjF0fjHnRh3WEcaM05J1hMHRc477g3R4IW9y5PA+7cpjfEi31mQI
vITwnkRzv0lul7jc8tQdn1StoGZQdcGtZHQqkRFTjn2Vdlwxp0nKnCrsdxRe
yKjCCUdhnVikQbFGJxZKMUsyKEZ0LzBFj5PsKLA4rBbPWosTEkg7Fs/QYnwS
SOz7J1gcsxZHrcURGZnxWhyUATjssVh60Yq70Yq7AqOw2LTitvFBaR0dkObh
Xmkc7Jb6/k6p7W2X6u5WOdrZrK14b13VyolU0DM9/j+KCC565NKfFVh2b175
hb72i5P/59O3yXIU4pUoxB+iEK9BIV57Dvw979SCv5ecKZsuO0s2X3G2fHnV
8fy9qMTfS4v9vecKj79XFflbA39rH722yN+GRf7eBH9vLvK37YWCvx0v3w1/
74G/90qX9bfb9fehRf72v/WE+jtg/R20/g5Zf4etvyPq74syuuol+Psy7IW/
H3n9/bVMrH0N/L4OfN9wAZ6yAAcI8AYDcNAB+AsCjGxeBnwB8FcG4IgD8NZV
Et36oQtwbIcCDH6RXWtl2gGY+DoA71sncZTh+H7kwAYFOEGAD21yAZ51AD7y
lSQBcPLoFgdgdN/qbdzM8/ibriv1N9Owx09++TAk4DvXvN+k5YCrb9bR1098
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
NaXFk6NQepn8tkFTl/J52uh4aZftc+bOWT5fSJIVKmeFK2dK967gJr6zFeRM
aOAmErdyzlBNmc6qnJzlsnhGASfxjBg88alC6YjvH4FnWAKEMxmyeAY9eE7J
GOAcnfbiOSqDtnn2BQelF82zZ5J49konmmfHaBfw7JRWNM/mwVap72mQ6vZq
qWo+PNjUW39XmT2kYjiLHhvzzfJ7SO/oy3fv+xrd80N2z3NOlk/pJlbsZgZ6
up2BcsV+Ntw8x7iJFfuuG8+X3VixH9/Ny+TIfeXcvMrj5jXS8DjdvBZu/kSa
n7oObl4PN5fCzRuk7dkb4eZNZdy8zePmXdL7q7uNm6/dp92z/zc/lYE3Hyhx
81G4+RjchJ3vPVHezZXPwk3Yueo5uAk7V78gkx+9CDdfkqmPX4abr8DMV5Ff
WjeRz1+T0LrXwabpng6ckTJwxgjnFuZ9mfbAOeOBM75zlQtnwoVzDdB04cSX
734+b9xxM3Vone2d6yWN7gk3uVV0ZJPvLyTjurlZ3ZyrUTehpumeWbpZv9V1
M8d43MwbN/2EkzsNZLNN2SST7ft5G3yHrZ6dDFbsMNNPNPmn1UOmYLUufUy1
SH91CZx/Vg5OsNlouudoE9xE9xxrLmenQ2e7nkbFAn6K6QSexlG/7Z8hPSfF
9Xu416zdI5yJRvq5bB/wa/GsdNi00f45rP1zBG6OFDpoQu+TTYzpyn3cdtBx
p39OaP9UQgsdNK1b9+mA1k89gRoioJ7oBlOWG0xZvUsrF7Grd1tCuWaPORtL
897ocHTBkGqX7xC1UhW1M9FVyzR4RSH9VjGkPNaf0g2kpHlmuHChnqWh4NSj
6Teh6Swl1f5pkoCkRtEEb0yI8zKjNy0YRaeJKMMKGsO3QaNo1FbQCBKmon4w
GsLyfQqAGkQDyJQH0QkZAaDDaJ9DESI6DESHpC8wAET7sXzvk67xHiDajeV7
p7ShfRLRJrTPOrTPY2yfTQdXJv3TzvK96LkCVtFvFzdTrZrfLH5NT/2/p6/d
+i97P3lUVqB+rjnrh4Xl+8WnyqZLQSiW719deaYSupWEcvnuIXQPCb3VEqpb
8JfIYSzfXULvJ6FXlCH06gKhT/w+Qm/C0v1mEHqLh9DbpefVOzyE3gNC75V+
Eorl+8BvSOiDIPSh4xCK+rnsSRD6lIxZQsdXGEIn/gBCg5/+ahGh4TKERjc7
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
fLyielAVZjUusRVeOkzOd4Sr81HSnDZuZi+8lv9zrEENqCtAAwbq53EIQiNj
HUEEuEH4oDBS2TBU5oHK3NhbF1TmhMoGYeYDyB59RVscom7PvDUzBj+VyrFc
VvmfeuSTy56q6R53efEhfvuXUNcLjq71D0Jd9+vqMsxMVlKpLqS9nY+I7l0m
de1T6jr4jDIzVUmPwcyOQ10noC6LmaGSnoG6ooLVhaRnY2ajbGYmdaWY1JUG
daWb1JWpq4sr6QqKa6SuXGVobGZrNHXRzxSso5tErOqCuJSpFStTK6FBZbWU
ry62KkyW1XKTxsjNdpOipMBo0N+q5rvCpMI0b4PE9rGzSaFx+DuodMaD6y01
JPzC66ENhzWXo+dO4fVb7H5jqMZjEGWABjbi53FAjNbS2C9GamjsE75qGnuF
F3V+GALzQGBu2LELAnNCYIMQWH/RZkdI/Z6IX1yTPM1z7N8/kyKzXLn4C5v0
ptzsDePHdTc7zO/969TVH52L+O7JJ1lrDovWZkJrs6C12Uhtc+BiJq1F2Glt
vnSyowtYa0OsteDCaWjNe/ZNi4v5ztloLfGjUBIaaqMutdRFGCapZZiklqWM
jE1shSY1NrHV5E4ktXxlZAVrlZEpMyukwf1uEfe74+UGnW1hxdFSI50mgplN
0sQmM1xFkN6qdut6m8R6CzPpzeRq+8K0ilq3X1VUHhTr+PZE6W3sb1+m/5os
pTjG/zoGYQXwCwFuWfy8IT+ENUoDf26kGi2Oj0q5tzICx2EYAvNgd4cgMBfY
ccKpB4q2iP5CiKx2V/jcH5eFrLIpgOopzrqtmRQWtPrC5fSIqpdQWPgfsl5S
CntANK19ELXyIdRJk8K2S4V1Q2E9ux+VCttLCpunFIbegBX2rK4wdrNIKOwk
FHYKCjsNhZ2BwqLesK2TrLA4KCzeojB2Mn8yDZPE0oIklmmSWPY4iUFgq1hk
oSQymqKJZQZ50aC6WbyJe9hxKoPGaPDqysXtYcrQWGCVUmBUJ3eH6eKKUAWT
xyTW12TN0UyDlwzruNNlje3n/7qOXlmEk8QYfuYWiGk/xj4RwBb80KsfQhrF
xker9ogRaNpXSWO38FbQ2CWGISgSlRs8DEFULohqsGizGCjc5PhS7c6In4fG
TOvb/p3PbYRym030V4VyoU30P8rv/Xxa0S0bwv+U/4poWI0q+TmcCxWzdeMM
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
SQ7AtQdxeAZxeOgQOc++Fiqc0a/jE7twhFw4Qi4o03XuTTpG+P8LcbDi3goT
Q/Fvh9DrO2IogQYdqaHEd+k9fM6hJBrv479cSe/Ry/uThRP/fb0YxJEYSHzP
8aWcTxwi+6PUmys/i/h514aI27rWRfz08trwmWF75i3/t+ipyZN/FJIvP7Tl
dN/3baqcktNSG/XJTXxj6odvhU+r/C8klQa4avtHqV9NWuAYOfmU6Nj3qLh8
4HHRCYS7IKkuHK9uHK8eyKn3xHOiD8eqH8eqH8eq//RLoXh5GW7Xf+ZljFfk
iHoFb0e9ipezr+ET90e/hvE6DRyT/pg34F+DaWscX8p6n0bqtyqWRvyqdxPG
5vAnv3Js3rbbs+Zt+6/0aSMfdUc0xHyWumfFO5Xyk1hOQf2jjX8pcSzj13G3
KJXw2zdOjYzNnRqZUjw1Mqd4akxO1bTmvxye1nzX8WnN952at/TG9fOWf33j
vOU3bQmfOfBZ+EznivDZnjXhD3vXhkbcdukTHP3bLi2OuK1hcfjDIxtDQuet
+5cTOMTOFy5Oc75ycWohZul6mxmptJmK79oYgfoAy43Pq//4oM3nrbZB5Ts6
KvKh1iErrEdDuwug3/gbbDT0f7U2VH3L5uOo3Vxl/Li+m302P15n/Tj8/j/I
9+i/9SSgNrva5lP12Hz6S9b3+M/fbPNz6jh8bvPhuvSD5bD5ozfZzJDa2Frj
n3Srvmz92/wHmmz+6Df0P/oXubH1Nj/UbvO3m4339Bbl6zbHW+3jBuuP8/Fp
M36cf53+r8X60fmzfNXmOKq9lSvj4+hqtvkN/hAc/G60+Thqe5vlP1nE3mS8
p/94h81RukE/lPIBC9oCrGUaG20O0WWbY2MHrtrHbda/zYcuSH78X102f/7L
8j2L0tVmt9v8eL3x0XUulfotxn+NzZ9XB2GnzZGqtflwvcaf0n9uis1Eqc3u
Mv5J583kQPpe9Nsc28n6RMnv21WP8B637lWp/5zJ7/RjM8nmQ6id22PzR8ut
O8e/4uL3pliODf5P+xn5SCZ1C+C4Pr/M5uAM8etk7Q/T/9f/XW1tvzEf+r6V
Gh9FB9Ft/FXtawXoZ9VWDtgckGKbw++x33e1lUM22ig0dKB/LHmcJtNvaj+r
T7r8Pkl1VYc1rl6wmaFB4whpU03/n/9dPhZRnWa17lWezWfrn2Cv5ANKQ47Z
COG88QF1pnon2Cv5AEd1Am+c0+XYfMauCXZMPoE7JNLYCX3HTFlX/4zSmqbQ
e9oOm3dOfquSOi0wrqpn0LvMT4f9HrHY5LcThpw2jrq+R2nWPeIP2DrxHsln
lalFTas+U43JCKpi9jsmn4UjFwyC5JBsHHUdGId1x7RJ0nZMPmkkJNr6kVgB
iTYHvmGCHZNPfFCLRNYdizfmVf+MdfY7xjdi4HfkjZkh54yjox//OBtx1Uyw
Y/LeIvVr46QaY/MxqybeN3mHSEiC8an0fYs23tMxqrDuG/2sPkXyWmp1rMdJ
Ncrmk5Zded/oPXkpoyYFSzU+bfNJSyfYN3kRUUiK8Wu6aPncCzNUPPHuyAtG
NGRszudaMSocP410GHl35DnhkHRDEbp9HDfe0/WVP/GOyZNKIRnGgTfv3FHj
wOsknZ9g3+Sit+ZVFrUGlQD+r5yJ902uvYZkW0WhVamDhsT0D5tlv298TOVS
VUiuMQX6vh2w0Vf6xPu2JMR0MKyi2GfzSdMm2DHZg2otu0Ube4zPqGOUPPGO
yYYwpMC6E/zbETYfM9HYsXG1TTZtWs237NhOm88Yb2wqeMdURxVSZCMMPvHN
DMVNsC/r5AaKx2uB/nmrdXf4N2Ksh9yyO7Ix0ZKVZXe2GO/psjo7wY7JnkTZ
0TiRbjIOuQ7Q6Ql2THYPWhy1iHSDzSE/NcGOyQsKlOtaFbrekJX+GU9MsFcy
gatyYBXCWhtNyVxln5f2yE0FNQMszzU2H/CIda8sYUlmZduViFXGB9S5OTTB
Xkkv0VYfLHpYafMB90+wV3KPVW82Tqif2XxG2UFcMTPJo6kih7XKsnMwOnvs
94g1J9OkSkDjausS6x7xZ9w18R5J1QUvWPAeLTaOoK6sHRPsm6zsIaYVAV2k
i4wDr6Oz1bpjwSlOpg4VQq2KCLc58Fsm2DEZuLRFEEuV/ciYCf0zbrTfMS0p
SWu0XZf4wEZf6yfYsSS5KbtVifdsPuPaiXdMhpqQTqs2NPd6x/ikOkZrrPtm
SUqyZoZ0G7+m79vbNh9z5ZX3jd7LlFszrefp2lho80lXTLBjMmhoK46W48/p
jhn6bOLdkaVeW7Iwd94hr1vf4+0uHT+HekySH19bp7XsjukOL11ciyfeMVmf
Q5w2injFOOo6Q59MsGNy3Vt19OPM60Wbox4+8b7JsqiWK6z79oKhEv2TfjjB
vslCdqU1iwU2+npv4n2T5SzEa8yCvm/P2nzSd+33zbRkFuIzfk2XqumxUTpD
b028Y7J2hIzayONpm4/5prFj4wqbNP0Qv/Xz8I48afMZ3zA2NS7CSY8OGbPZ
K+7FmaHXJ9gXacshwkYLj1n3hX/8lQn2pcO0qS+NFwT9vukR0rq8Xppg7zpN
mwwz5kzfxUeMI6+j9LxVEpZd7DFtb5J1F7XSO9tmBhZMsIt9pk1OMaZB38VZ
xm7rH3n+BLs4aNqeaY1Yl+5M4yPrYpMCtE9RLtP2rrORid1XNz5p3T9LlPKY
tvdlYzp1BU83Pq+O1hMT7J/XtL0bbPbvfpvP++gE+zdq2t5XjP3T5+Nem88r
ZXTFaBUwbfJGq2o0p5Nf5Ud/4GH7fWN5mtCQ//trxsHSd/BO6w7yh5418Q6a
+JDb/bqNcP5mHAxdiDOutrNTTBv9ps3s/MWYHR3A6dadDc6DvK1rTdu9yfqB
eefsnj/8wNV29nrTRm+x2dk/GkdbPwL32u+sFsVMMpLb/QfjKOozZvd8wruv
trNfM21UnqMd55a/tzkId36B/f2GadPfsdnf3xnHQUf0r9b9tQQ13tDNpo1+
d/z+0v/+rc1x+POV95feMx1TuenvGfOm7+/tNsfhT1fb3++YNvp9YwM6Dr+m
t0z3WU+8i/9o2tpUYxd1af3Suov83v+Ml4Cem3hD/2Ta6A+sG+B5+U9j7nS9
/vcX2NkfmLb7f2x29ufGPOnQ/uZqO/svpo3+i7Fj+iTZ3Zj36y+wsz8ybVde
XjiOA3XfloXb/7ra/v6babs/Njag7++txkHQxfqLL7C/PzFt91+t+6tFCLvb
BX5uv7/8p3lb/2Ha7r8bk6bv778Zn0GH9qdfYH9vM233J8aO6Rz8q81xuNXY
2XH1WhgHSv7vW42d1RX2Q5sj8BNjo+OiozCm1Hw0rMmCVcfE/vvV9u/Xpk3d
ZrN/QbTxez++2v791rTRnxn7p8/QVOM9XaY/vNqe/s60UamRcbZqukRMx/Wf
je2OS5C8rWmm7Sofscjf7vKrH1xtZ/9o2qjJ8XQtfdf4Q/oR+P7V9vQO00Z/
ZTNX3zY+vi5Quff2gZI39FfTRn9ts6f/YPPxv2PdU0uq5A3dZdrob2z29Gbj
4+uIfutqe3qPaaOqgFpUdZPNx7/5ant6v2mjsmKMu1LDFBH1IyAT3sQxc7pp
07+32V/ONUzpN+z30rDoGaZN/Y+xl2btf8W6l3wEvvoF9nKWadN/MKZK38sb
jD3XlfqVq+3vw6aN/tHYMV1UpguQdFC//AV2dq5pu382dlb/wNfaTNV1V9vZ
x00bvcO6ARan6i0trE6x7qxtuJxn2u5fbXZ2snEQdL1OutrOPm3aqKlP0acr
zOYIhH6BnZ1v2q5Mzl8JDhf8mUzEmhOldScXmDYm4/11ZkuljdJGgquw/IUX
TL98j3E4tB+2Zlf5AdEq/l+WyI66\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"30e2caae-06ae-49ac-a432-1506d272a163"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Disk", "[", "]"}], ",", 
      RowBox[{"Hue", "[", "n", "]"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "1", ",", "0.02"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8790576365918856`*^9, 3.879057697243997*^9}, {
  3.8790577720328054`*^9, 3.879057917610817*^9}, {3.879057979807746*^9, 
  3.8790580105230055`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"b9ef0e93-3cd6-49d0-9948-496088c9f9c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    {Hue[0.], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.02], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.04], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.06], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.08], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.1], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.12], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.14], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.16], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.18], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.2], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.22], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.24], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.26], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.28], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.3], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.32], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.34], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.36], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.38], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.4], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.42], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.44], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.46], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.48], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.5], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.52], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.54], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.56], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.58], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.6], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.62], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.64], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.66], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.68], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.7000000000000001], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.72], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.74], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.76], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.78], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.8], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.8200000000000001], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.84], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.86], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.88], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.9], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.92], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.9400000000000001], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.96], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[0.98], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {Hue[1.], DiskBox[{0, 0}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8790579911667547`*^9, 3.879058010985456*^9}},
 CellLabel->
  "Out[148]=",ExpressionUUID->"01a2118a-d8e6-4049-ae13-bb51909f32d1"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.8790578983522425`*^9, 3.8790578983562284`*^9}, 
   3.8790579951972647`*^9},ExpressionUUID->"0fa4be65-a246-41d2-ab3e-\
0b265355281a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{"Disk", "[", "]"}], ",", "Red"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8790579554372783`*^9, 3.8790579733672905`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"191fd5ce-6efe-491b-83d6-deb9589bd55c"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], DiskBox[{0, 0}]}]], "Output",
 CellChangeTimes->{3.8790579441998625`*^9, 3.8790579749699297`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"62a6ab38-f1bb-445e-854d-9e939ccdc7d9"]
}, Open  ]]
},
WindowSize->{1280, 732},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (2022\:5e746\:670816\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"97f7addb-e8ab-40aa-bd65-484ae79eb424"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 197, 3, 28, "Input",ExpressionUUID->"6cd352d1-8e4c-4320-925b-d265876da53b"],
Cell[780, 27, 150, 2, 32, "Output",ExpressionUUID->"6bf35b48-3fba-40e7-9ee0-873fac6abd7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[967, 34, 207, 3, 28, "Input",ExpressionUUID->"eb65c09a-cfbc-4bf8-b263-4d5d82dc478b"],
Cell[1177, 39, 148, 2, 32, "Output",ExpressionUUID->"17d0d99d-6213-4049-8233-8753e8178a6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1362, 46, 304, 4, 48, "Input",ExpressionUUID->"e3a1af08-d731-4875-8abd-f88ec4120e25"],
Cell[1669, 52, 151, 2, 32, "Output",ExpressionUUID->"2a48caef-041d-45fc-9518-a5a4e39a49f2"],
Cell[1823, 56, 152, 2, 32, "Output",ExpressionUUID->"dfed9db0-3d56-41f5-8147-0c4d45b4e71f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2012, 63, 197, 3, 28, "Input",ExpressionUUID->"fe163deb-2aaf-4e35-ad2c-32dcd3786776"],
Cell[2212, 68, 149, 2, 32, "Output",ExpressionUUID->"35ad24f6-cec7-46f9-9574-07217b3561a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2398, 75, 195, 3, 28, "Input",ExpressionUUID->"2f06450e-d651-407a-9a53-65b796b5d9b4"],
Cell[2596, 80, 151, 2, 32, "Output",ExpressionUUID->"a3774b35-961f-4d36-9e71-65df48a90f07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2784, 87, 196, 3, 28, "Input",ExpressionUUID->"430be7f2-dd07-4911-afeb-b607c2d3ea93"],
Cell[2983, 92, 162, 2, 32, "Output",ExpressionUUID->"e5891857-31d6-431d-b44e-27d866b93218"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3182, 99, 242, 5, 28, "Input",ExpressionUUID->"0e5171c2-1b1d-4333-a99c-ae6ae117673e"],
Cell[3427, 106, 154, 2, 32, "Output",ExpressionUUID->"98d98ff3-c8bf-4927-9493-ce7412d5908f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3618, 113, 291, 7, 28, "Input",ExpressionUUID->"c43e9ae7-362c-465f-8d5d-b2fdc01a664e"],
Cell[3912, 122, 151, 2, 32, "Output",ExpressionUUID->"824cf891-4549-4bb3-a086-4ff6fcb20a94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4100, 129, 230, 4, 28, "Input",ExpressionUUID->"b5925832-f441-4341-b960-680a0ccf9e91"],
Cell[4333, 135, 158, 2, 32, "Output",ExpressionUUID->"5821fea4-e738-450b-bcd6-893ac9605fc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4528, 142, 198, 3, 28, "Input",ExpressionUUID->"57018bb6-8932-41f6-aff8-f850b2a9d319"],
Cell[4729, 147, 383, 9, 40, "Message",ExpressionUUID->"9ffc09ba-aa40-4ee8-94f6-8a2c0115584c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5149, 161, 269, 4, 78, InheritFromParent,ExpressionUUID->"9fd08ef7-72ee-4aaf-b1ac-1608b4ea0a39"],
Cell[5421, 167, 165, 2, 32, "Output",ExpressionUUID->"1d9f8616-da9f-45c3-8ce1-7aa609c68019"],
Cell[5589, 171, 151, 2, 32, "Output",ExpressionUUID->"d9d1671e-6346-4167-80fe-eb30cc890578"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5777, 178, 283, 6, 43, "Input",ExpressionUUID->"f1d5fa20-f369-44fe-944d-34d057d924f6"],
Cell[6063, 186, 150, 2, 32, "Output",ExpressionUUID->"d5b0b419-38a6-42bf-8b7d-c11ac07d615d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6250, 193, 236, 4, 43, "Input",ExpressionUUID->"cc87129e-139e-420a-86a1-30d64a807549"],
Cell[6489, 199, 151, 2, 32, "Output",ExpressionUUID->"63ead265-3ebe-4ee4-8f6a-177831e01f4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6677, 206, 227, 3, 28, "Input",ExpressionUUID->"88abf27d-62e3-466c-addb-41454a00906c"],
Cell[6907, 211, 200, 3, 32, "Output",ExpressionUUID->"fd664fe7-3e25-4f98-a957-533be99014f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7144, 219, 215, 3, 43, "Input",ExpressionUUID->"f0ef6e50-395d-45bd-a0f6-462373798ead"],
Cell[7362, 224, 176, 2, 32, "Output",ExpressionUUID->"3e3357d5-dd3b-4c41-8b46-b1208eb5c734"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7575, 231, 319, 7, 43, "Input",ExpressionUUID->"81c2b5d4-8acc-4163-9036-bdc8a829b399"],
Cell[7897, 240, 178, 2, 32, "Output",ExpressionUUID->"ab87af3b-0da2-4aa9-8bd5-1454ac141e75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8112, 247, 291, 5, 43, "Input",ExpressionUUID->"bc456e4c-61aa-4772-b9ef-73994a3adcf3"],
Cell[8406, 254, 176, 2, 32, "Output",ExpressionUUID->"3bd9edc1-abe7-4a7e-a4c4-0fa2fbfa1142"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8619, 261, 308, 6, 43, "Input",ExpressionUUID->"ee7d08b6-863d-45a9-be81-fc6f2b28cdd8"],
Cell[8930, 269, 1345, 38, 248, "Output",ExpressionUUID->"66c33b89-3895-4805-9a7c-83d24e2216a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10312, 312, 243, 4, 43, "Input",ExpressionUUID->"3ceb43ea-b796-4a22-b251-93ae48befc1c"],
Cell[10558, 318, 461, 10, 28, "Message",ExpressionUUID->"1b1d641e-d66c-4a37-a23d-dd95d390900b"],
Cell[11022, 330, 222, 4, 32, "Output",ExpressionUUID->"81de09a6-17eb-4552-ab4d-796e4704a4f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11281, 339, 245, 4, 43, "Input",ExpressionUUID->"9d1ee20d-2feb-41ba-9a62-0b35a3b9ec2c"],
Cell[11529, 345, 1419, 40, 245, "Output",ExpressionUUID->"8befcb96-bb13-4170-98ab-1cdfa3f745ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12985, 390, 278, 5, 43, "Input",ExpressionUUID->"9468697a-084e-4a2a-a4a1-c1b4c731e059"],
Cell[13266, 397, 1462, 41, 245, "Output",ExpressionUUID->"da6f9580-8d4e-464d-969b-12273bfd6097"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14765, 443, 449, 11, 62, "Input",ExpressionUUID->"6080f07e-fb0c-4668-9003-a866034517e7"],
Cell[15217, 456, 284, 6, 32, "Output",ExpressionUUID->"752a9771-5c3b-4530-87b9-585ce03bff1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15538, 467, 373, 8, 43, "Input",ExpressionUUID->"9e1ec5d0-8913-4703-818f-73a72de90358"],
Cell[15914, 477, 1666, 44, 242, "Output",ExpressionUUID->"cf1c7de6-66f7-4125-bddd-c3ccba5ac9bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17617, 526, 205, 3, 43, "Input",ExpressionUUID->"9fcb6f83-7cb2-4e86-991b-17983286cc23"],
Cell[17825, 531, 1328, 20, 128, "Output",ExpressionUUID->"ff68c87f-f57e-44c8-8a60-eaa348350655"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19190, 556, 237, 4, 43, "Input",ExpressionUUID->"4460b6e6-016f-4285-a058-085ba42350f6"],
Cell[19430, 562, 213, 4, 32, "Output",ExpressionUUID->"46e8cbda-5758-40a5-bd1c-a8064a0c2dc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19680, 571, 242, 4, 43, "Input",ExpressionUUID->"2dc589ba-9adb-4f03-8252-a9f2c2a8761f"],
Cell[19925, 577, 746, 12, 71, "Output",ExpressionUUID->"f3774d35-9008-4704-9deb-c0d551dff519"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20708, 594, 331, 7, 43, "Input",ExpressionUUID->"ed459d0c-06b1-48e0-884d-1ef384ffda63"],
Cell[21042, 603, 2471, 35, 242, "Output",ExpressionUUID->"cf91f339-86b5-40b1-8b29-ea7c308e060f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23550, 643, 246, 4, 43, "Input",ExpressionUUID->"5c5e6995-1cf7-4955-8c9e-8e88c1be65d3"],
Cell[23799, 649, 308, 6, 32, "Output",ExpressionUUID->"2661f49a-e252-4351-a691-41efbeef7f5b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24144, 660, 356, 9, 43, "Input",ExpressionUUID->"54e6bb31-84f7-4be1-9ca6-24fe49d5c7f4"],
Cell[24503, 671, 226, 4, 32, "Output",ExpressionUUID->"21c7f672-71fb-4907-992d-f4f161b7626f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24766, 680, 329, 7, 43, "Input",ExpressionUUID->"ab2b235e-3604-4adc-a488-1aaa3ecb4ccc"],
Cell[25098, 689, 645, 10, 52, "Output",ExpressionUUID->"f6752661-f02f-4aa2-b892-6ac56d326f3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25780, 704, 239, 4, 43, "Input",ExpressionUUID->"6686ac2e-c213-4fb5-893c-d23605db60aa"],
Cell[26022, 710, 19749, 555, 237, "Output",ExpressionUUID->"93e04343-d8b8-481b-8758-d47330635cb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45808, 1270, 240, 4, 43, "Input",ExpressionUUID->"321acac6-acb8-4174-9ad5-42d8d8a6dac5"],
Cell[46051, 1276, 10994, 254, 377, "Output",ExpressionUUID->"95c6970d-0508-475f-8529-5d3fd73de15f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57082, 1535, 282, 5, 62, "Input",ExpressionUUID->"a784cc7d-9d59-48cc-bb61-4aa9cef8edab"],
Cell[57367, 1542, 1659, 34, 53, "Output",ExpressionUUID->"1d9f395d-e1f0-4179-8e0d-fcd5060221be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59063, 1581, 274, 5, 43, "Input",ExpressionUUID->"d968fd11-e373-4f06-8767-1be4117df1b7"],
Cell[59340, 1588, 19751, 555, 237, "Output",ExpressionUUID->"3c3cb973-4875-4c2d-82a8-1be057422bd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79128, 2148, 271, 5, 62, "Input",ExpressionUUID->"bf140479-fc1b-4b55-871a-4f77eef05ab7"],
Cell[79402, 2155, 391, 13, 99, "Output",ExpressionUUID->"39e24251-3cc0-48f5-a56b-9ffefae96d0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79830, 2173, 294, 6, 43, "Input",ExpressionUUID->"cd300486-20f6-4b64-ac4e-61ca039ada35"],
Cell[80127, 2181, 1100, 24, 53, "Output",ExpressionUUID->"7ef6522b-8986-4118-991c-03d315c51ab3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81264, 2210, 518, 14, 43, "Input",ExpressionUUID->"0737bc45-5a40-4ccb-8d3c-38985c14bddb"],
Cell[81785, 2226, 18493, 414, 569, "Output",ExpressionUUID->"29a1b7e5-c660-40a0-82ce-454f6f8eee20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100315, 2645, 408, 10, 43, "Input",ExpressionUUID->"82ee8135-1eae-4e2e-ac94-377df81762d7"],
Cell[100726, 2657, 277, 6, 32, "Output",ExpressionUUID->"5caa84ed-1a4b-4830-8b37-4d15c4deeb79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101040, 2668, 250, 5, 43, "Input",ExpressionUUID->"94e3dd70-e7d7-4033-8026-05d9c21ab005"],
Cell[101293, 2675, 176, 2, 32, "Output",ExpressionUUID->"bf5e7569-3ce1-46c2-9490-50408879d770"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101506, 2682, 239, 4, 43, "Input",ExpressionUUID->"0c78f4d7-8c33-41d3-97a2-417726e29f9f"],
Cell[101748, 2688, 154, 2, 32, "Output",ExpressionUUID->"60c961f6-0abb-49b2-a5eb-7e25c8e8397f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101939, 2695, 218, 3, 43, "Input",ExpressionUUID->"22b77e66-a833-4134-9415-b0b97a3ae1ac"],
Cell[102160, 2700, 262, 6, 32, "Output",ExpressionUUID->"842bb5fd-1bf9-4f97-987e-cf2e186feafe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102459, 2711, 262, 5, 43, "Input",ExpressionUUID->"df72317c-b329-4a94-b11b-01b48661daf7"],
Cell[102724, 2718, 289, 6, 32, "Output",ExpressionUUID->"6ae2577c-4d1b-4aaa-98d1-1050f49865c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103050, 2729, 305, 6, 62, "Input",ExpressionUUID->"65dc5874-4ef0-4c84-bc0d-de1688a4e6cd"],
Cell[103358, 2737, 10640, 302, 233, "Output",ExpressionUUID->"acac44ee-eea6-42d1-958a-0fadb0678adb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114035, 3044, 262, 5, 43, "Input",ExpressionUUID->"a1519e96-474a-4d2f-9fd6-ff3e2f891d30"],
Cell[114300, 3051, 153, 2, 32, "Output",ExpressionUUID->"c89a3d18-cf34-486d-884d-8e2295c9f1db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114490, 3058, 327, 7, 43, "Input",ExpressionUUID->"d17af1e0-8623-450c-8b9a-a80bf80466e2"],
Cell[114820, 3067, 262, 6, 32, "Output",ExpressionUUID->"e851c968-9850-43f0-a647-289fe90cfc33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115119, 3078, 230, 4, 43, "Input",ExpressionUUID->"6c881d4d-91f4-44b5-ba53-3dc27a4b8174"],
Cell[115352, 3084, 293, 6, 32, "Output",ExpressionUUID->"71805a38-d950-45c1-ab6e-bb21aad2a9dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115682, 3095, 379, 9, 43, "Input",ExpressionUUID->"0b9bc5c4-20f5-489b-ad9e-4db77ed8cab4"],
Cell[116064, 3106, 313, 6, 32, "Output",ExpressionUUID->"36dc65c3-da5a-4d7f-83d9-3feed5f27aba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116414, 3117, 272, 5, 43, "Input",ExpressionUUID->"159fbce9-ec64-42f4-802c-c577c1438025"],
Cell[116689, 3124, 152, 2, 32, "Output",ExpressionUUID->"90d3cc37-8860-4593-87f3-1368c1d2b3e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116878, 3131, 342, 7, 43, "Input",ExpressionUUID->"28b252a7-8ed3-475b-807d-1c1d79cdea51"],
Cell[117223, 3140, 201, 3, 32, "Output",ExpressionUUID->"c121c85f-505d-409c-a568-352d76ac6d4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117461, 3148, 268, 5, 43, "Input",ExpressionUUID->"109f2f9b-fc0f-458c-967d-5410ec5f9ace"],
Cell[117732, 3155, 149, 2, 32, "Output",ExpressionUUID->"e52ef714-f375-4021-84ec-5d56ed650cd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117918, 3162, 276, 5, 43, "Input",ExpressionUUID->"5e329bb1-1db0-44ee-856b-46100a7af17b"],
Cell[118197, 3169, 1536, 42, 248, "Output",ExpressionUUID->"365e9935-7130-4d40-9acb-4a7ada54f0cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119770, 3216, 328, 8, 43, "Input",ExpressionUUID->"a89a770a-7a55-4b9c-aa06-da2e3d5f7cdd"],
Cell[120101, 3226, 290, 6, 32, "Output",ExpressionUUID->"1a910595-bfd1-4248-a79b-c4ce69192b22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120428, 3237, 395, 10, 43, "Input",ExpressionUUID->"35ce5668-7038-43d9-9f85-002c48b99dbf"],
Cell[120826, 3249, 1928, 49, 239, "Output",ExpressionUUID->"70753f5a-4f7d-4ac1-9da1-5df5c6e40f6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122791, 3303, 371, 9, 43, "Input",ExpressionUUID->"27ced390-3369-48ba-a3dd-0814d1aa7c60"],
Cell[123165, 3314, 2731, 61, 233, "Output",ExpressionUUID->"81f5b759-7037-4dc5-94e5-db56224291a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125933, 3380, 230, 4, 43, "Input",ExpressionUUID->"842d59c3-3529-426f-91d8-7d5e9bc4d583"],
Cell[126166, 3386, 239, 5, 32, "Output",ExpressionUUID->"67c199cd-057c-43fe-95a5-aa521ada1377"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126442, 3396, 323, 7, 43, "Input",ExpressionUUID->"5380c909-e77c-4226-b105-23497182e368"],
Cell[126768, 3405, 329, 7, 32, "Output",ExpressionUUID->"d218c555-3477-48d7-99f3-8d8e451308dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127134, 3417, 264, 5, 43, "Input",ExpressionUUID->"13a97742-e1f4-4011-9408-4ca46e7cce76"],
Cell[127401, 3424, 329, 7, 32, "Output",ExpressionUUID->"4a0d326f-5115-4496-a68c-017e952ab6d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127767, 3436, 237, 4, 43, "Input",ExpressionUUID->"0908dc43-f4ab-4f11-944f-710bd75bd8be"],
Cell[128007, 3442, 297, 6, 32, "Output",ExpressionUUID->"df190e7c-5364-4130-b60d-3c1deed28845"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128341, 3453, 278, 6, 43, "Input",ExpressionUUID->"af3c782a-e479-4d08-9409-eae9d860a03f"],
Cell[128622, 3461, 284, 6, 32, "Output",ExpressionUUID->"48ab27fd-517a-4b3e-affe-275cd6bc9a08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128943, 3472, 267, 5, 43, "Input",ExpressionUUID->"d8cf3681-37b3-4908-a86c-6f9f44d2f12e"],
Cell[129213, 3479, 10642, 302, 233, "Output",ExpressionUUID->"894c8306-1c28-4d2b-b47d-b7a3a0df0acb"]
}, Open  ]],
Cell[139870, 3784, 448, 11, 62, "Input",ExpressionUUID->"52e7e95c-d168-49ee-b33a-284008743ea4"],
Cell[CellGroupData[{
Cell[140343, 3799, 588, 14, 62, InheritFromParent,ExpressionUUID->"b42b23eb-993c-4e79-8e8a-03de07728751"],
Cell[140934, 3815, 309, 6, 32, "Output",ExpressionUUID->"a24e235f-caea-4290-88d8-078ed1842f9b"],
Cell[141246, 3823, 1646, 44, 248, "Output",ExpressionUUID->"8648dcec-a64e-4aea-b8b1-ce7bfe9a03ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142929, 3872, 434, 11, 43, "Input",ExpressionUUID->"b3a8a253-b952-4462-a61e-93d6600e9c72"],
Cell[143366, 3885, 780, 24, 32, "Output",ExpressionUUID->"450f1270-f354-47fa-8308-0487083ab587"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144183, 3914, 409, 11, 43, "Input",ExpressionUUID->"f438ec44-af02-439d-ac2c-1f34102a5b5e"],
Cell[144595, 3927, 415, 8, 32, "Output",ExpressionUUID->"ce1f1977-b6ae-4523-b544-303af0080e67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145047, 3940, 500, 13, 62, "Input",ExpressionUUID->"8c30f189-5c2a-4bc2-b15a-fed273f8307f"],
Cell[145550, 3955, 1697, 46, 248, "Output",ExpressionUUID->"8029360a-eaa2-4d97-a523-aac185099c04"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147284, 4006, 217, 4, 62, "Input",ExpressionUUID->"81dfc55f-3802-4f55-bbf6-29cb582b5ce3"],
Cell[147504, 4012, 227, 5, 32, "Output",ExpressionUUID->"cbdb9ccc-8fb1-448c-ab45-93d4c789a4f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147768, 4022, 260, 5, 43, "Input",ExpressionUUID->"7cfd23c8-aef5-46ee-b5c5-27fdbcfb003c"],
Cell[148031, 4029, 525, 13, 32, "Output",ExpressionUUID->"e90cde67-e87c-4c99-94cb-ffdae01eddec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148593, 4047, 274, 6, 43, "Input",ExpressionUUID->"819ebae6-989c-458d-82b8-363a19dbfb25"],
Cell[148870, 4055, 248, 5, 32, "Output",ExpressionUUID->"ff4a1261-068a-4927-9fe9-a032af7697ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149155, 4065, 212, 4, 43, "Input",ExpressionUUID->"8d2617ca-8346-4613-b3d3-90a610f889ea"],
Cell[149370, 4071, 227, 5, 32, "Output",ExpressionUUID->"aa22e1fd-a34c-4a0a-84a6-613aac34a544"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149634, 4081, 282, 6, 64, "Input",ExpressionUUID->"d1e866ee-71fa-446f-a3b8-3068c1ffe0f1"],
Cell[149919, 4089, 225, 5, 32, "Output",ExpressionUUID->"013e161b-c170-45a4-9c36-541a1402f2c9"]
}, Open  ]],
Cell[150159, 4097, 198, 3, 48, "Input",ExpressionUUID->"2ae86d52-dfd1-488c-bcce-651f08bf06b8"],
Cell[CellGroupData[{
Cell[150382, 4104, 427, 11, 43, "Input",ExpressionUUID->"d5d453d7-22c5-4727-b6bf-a409139c6613"],
Cell[150812, 4117, 5640, 136, 47, "Output",ExpressionUUID->"5bff3408-98d5-49de-9ef6-ba1044601049"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156489, 4258, 354, 8, 43, "Input",ExpressionUUID->"33311f36-3cb9-4a23-9ff7-557f2c5b0b42"],
Cell[156846, 4268, 460, 11, 32, "Output",ExpressionUUID->"bb3176e7-561d-42d5-b50e-0db5f3acdbf1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157343, 4284, 258, 5, 62, "Input",ExpressionUUID->"22356314-a784-407a-a3ec-24a719d7eafd"],
Cell[157604, 4291, 229, 5, 32, "Output",ExpressionUUID->"00d07082-da91-4145-a81a-abb577d8b863"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157870, 4301, 335, 8, 43, "Input",ExpressionUUID->"30463f84-4c47-483f-b5a0-7f7692251c77"],
Cell[158208, 4311, 4186, 107, 52, "Output",ExpressionUUID->"9e348f4c-b5d9-4679-8af0-27c79fc3f409"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162431, 4423, 422, 11, 62, "Input",ExpressionUUID->"042e758a-5b68-4360-8d12-4c3a5cf56510"],
Cell[162856, 4436, 1715, 39, 32, "Output",ExpressionUUID->"36dd6204-4b5e-4caa-bece-bfc0ae69e4ba"]
}, Open  ]],
Cell[164586, 4478, 245, 5, 43, "Input",ExpressionUUID->"0b56b6f5-1c11-4fc3-929a-aea66abcff98"],
Cell[CellGroupData[{
Cell[164856, 4487, 368, 8, 62, InheritFromParent,ExpressionUUID->"0dbe7332-5f2e-48a7-ba8f-7e743788f789"],
Cell[165227, 4497, 251, 5, 32, "Output",ExpressionUUID->"d978c570-3214-4542-87d1-b67a4e3ce114"],
Cell[165481, 4504, 257, 5, 32, "Output",ExpressionUUID->"083086e1-343a-4d16-8f92-1eeebeee3a37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165775, 4514, 196, 5, 43, "Input",ExpressionUUID->"10272a0a-941e-4885-81e3-6f70b126b4ba"],
Cell[165974, 4521, 231, 5, 32, "Output",ExpressionUUID->"dcea907f-cce7-4af6-a9b6-6ebc5ae5f006"]
}, Open  ]],
Cell[166220, 4529, 339, 9, 43, "Input",ExpressionUUID->"188c7d94-020f-4e1b-b867-0ec620db12c7"],
Cell[CellGroupData[{
Cell[166584, 4542, 170586, 3410, 69, "WolframAlphaShortInput",ExpressionUUID->"01f2db80-fe5d-4d82-b173-c42a2df029d7"],
Cell[337173, 7954, 501, 16, 56, "Output",ExpressionUUID->"90e70a4a-774e-44f3-a767-7af50071aa26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337711, 7975, 303, 7, 62, "Input",ExpressionUUID->"e770c8b5-ba2e-4fdb-bff9-5c21d4c2c1e9"],
Cell[338017, 7984, 285, 8, 136, "Output",ExpressionUUID->"33ea7113-1bd4-453b-989c-986a0a591991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338339, 7997, 366, 9, 43, "Input",ExpressionUUID->"5da7ff61-a21b-4542-816c-d43bbf8847f3"],
Cell[338708, 8008, 1773, 60, 106, "Output",ExpressionUUID->"966dd92a-3463-4f9a-ae89-ad35c2fbeeda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340518, 8073, 391, 11, 43, "Input",ExpressionUUID->"c50250d1-ffcf-4fc0-ae29-d4d4fd080dae"],
Cell[340912, 8086, 853, 35, 92, "Output",ExpressionUUID->"85680bb5-e202-49e7-90e5-74683afc4a93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341802, 8126, 279, 6, 62, "Input",ExpressionUUID->"c1b92d24-e09d-43be-9a8f-a05ee4958e7f"],
Cell[342084, 8134, 184, 4, 376, "Output",ExpressionUUID->"03d7b297-05a1-40c9-a744-e0ac8ebf86d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342305, 8143, 238, 5, 43, "Input",ExpressionUUID->"12590bdd-50c6-4b2c-a2f6-d0c3fb17c62f"],
Cell[342546, 8150, 182, 4, 376, "Output",ExpressionUUID->"929b5664-fb78-46ab-9680-711a1168459b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342765, 8159, 289, 6, 62, "Input",ExpressionUUID->"dd1f4c88-7dd8-4402-bff6-59dc89d423fd"],
Cell[343057, 8167, 1701, 33, 359, "Output",ExpressionUUID->"05b23227-0a76-4b8f-ae03-75650fe5f5da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344795, 8205, 279, 6, 62, "Input",ExpressionUUID->"f1f4b24e-51c1-4a8b-be61-073ca1ab10ef"],
Cell[345077, 8213, 313108, 5135, 378, 306, 6, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"30e2caae-06ae-49ac-a432-1506d272a163"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658222, 13353, 566, 14, 43, "Input",ExpressionUUID->"b9ef0e93-3cd6-49d0-9948-496088c9f9c6"],
Cell[658791, 13369, 3141, 107, 2090, "Output",ExpressionUUID->"01a2118a-d8e6-4049-ae13-bb51909f32d1"]
}, Open  ]],
Cell[661947, 13479, 200, 3, 48, InheritFromParent,ExpressionUUID->"0fa4be65-a246-41d2-ab3e-0b265355281a"],
Cell[CellGroupData[{
Cell[662172, 13486, 300, 7, 43, "Input",ExpressionUUID->"191fd5ce-6efe-491b-83d6-deb9589bd55c"],
Cell[662475, 13495, 230, 5, 376, "Output",ExpressionUUID->"62a6ab38-f1bb-445e-854d-9e939ccdc7d9"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

